{"remainingRequest":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!C:\\wamp64\\www\\crm\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\wamp64\\www\\crm\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\wamp64\\www\\crm\\frontend\\src\\helpers\\authservice\\user.service.js","dependencies":[{"path":"C:\\wamp64\\www\\crm\\frontend\\src\\helpers\\authservice\\user.service.js","mtime":1645939880000},{"path":"C:\\wamp64\\www\\crm\\frontend\\babel.config.js","mtime":1645939880000},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668443304858},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1668443304941},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1652458135842},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1668443311682}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nLmpzIjsKaW1wb3J0IHsgYXV0aEhlYWRlciB9IGZyb20gJy4vYXV0aC1oZWFkZXInOwpleHBvcnQgdmFyIHVzZXJTZXJ2aWNlID0gewogIGxvZ2luOiBsb2dpbiwKICBsb2dvdXQ6IGxvZ291dCwKICByZWdpc3RlcjogcmVnaXN0ZXIsCiAgZ2V0QWxsOiBnZXRBbGwKfTsKCmZ1bmN0aW9uIGxvZ2luKGVtYWlsLCBwYXNzd29yZCkgewogIHZhciByZXF1ZXN0T3B0aW9ucyA9IHsKICAgIG1ldGhvZDogJ1BPU1QnLAogICAgaGVhZGVyczogewogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nCiAgICB9LAogICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICBlbWFpbDogZW1haWwsCiAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgfSkKICB9OwogIHJldHVybiBmZXRjaCgiL3VzZXJzL2F1dGhlbnRpY2F0ZSIsIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKS50aGVuKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAvLyBsb2dpbiBzdWNjZXNzZnVsIGlmIHRoZXJlJ3MgYSBqd3QgdG9rZW4gaW4gdGhlIHJlc3BvbnNlCiAgICBpZiAodXNlci50b2tlbikgewogICAgICAvLyBzdG9yZSB1c2VyIGRldGFpbHMgYW5kIGp3dCB0b2tlbiBpbiBsb2NhbCBzdG9yYWdlIHRvIGtlZXAgdXNlciBsb2dnZWQgaW4gYmV0d2VlbiBwYWdlIHJlZnJlc2hlcwogICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcicsIEpTT04uc3RyaW5naWZ5KHVzZXIpKTsKICAgIH0KCiAgICByZXR1cm4gdXNlcjsKICB9KTsKfQoKZnVuY3Rpb24gbG9nb3V0KCkgewogIC8vIHJlbW92ZSB1c2VyIGZyb20gbG9jYWwgc3RvcmFnZSB0byBsb2cgdXNlciBvdXQKICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpOwp9CgpmdW5jdGlvbiByZWdpc3Rlcih1c2VyKSB7CiAgdmFyIHJlcXVlc3RPcHRpb25zID0gewogICAgbWV0aG9kOiAnUE9TVCcsCiAgICBoZWFkZXJzOiB7CiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicKICAgIH0sCiAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh1c2VyKQogIH07CiAgcmV0dXJuIGZldGNoKCIvdXNlcnMvcmVnaXN0ZXIiLCByZXF1ZXN0T3B0aW9ucykudGhlbihoYW5kbGVSZXNwb25zZSk7Cn0KCmZ1bmN0aW9uIGdldEFsbCgpIHsKICB2YXIgcmVxdWVzdE9wdGlvbnMgPSB7CiAgICBtZXRob2Q6ICdHRVQnLAogICAgaGVhZGVyczogYXV0aEhlYWRlcigpCiAgfTsKICByZXR1cm4gZmV0Y2goIi91c2VycyIsIHJlcXVlc3RPcHRpb25zKS50aGVuKGhhbmRsZVJlc3BvbnNlKTsKfQoKZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2UocmVzcG9uc2UpIHsKICByZXR1cm4gcmVzcG9uc2UudGV4dCgpLnRoZW4oZnVuY3Rpb24gKHRleHQpIHsKICAgIHZhciBkYXRhID0gdGV4dCAmJiBKU09OLnBhcnNlKHRleHQpOwoKICAgIGlmICghcmVzcG9uc2Uub2spIHsKICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxKSB7CiAgICAgICAgLy8gYXV0byBsb2dvdXQgaWYgNDAxIHJlc3BvbnNlIHJldHVybmVkIGZyb20gYXBpCiAgICAgICAgbG9nb3V0KCk7CiAgICAgICAgbG9jYXRpb24ucmVsb2FkKHRydWUpOwogICAgICB9CgogICAgICB2YXIgZXJyb3IgPSBkYXRhICYmIGRhdGEubWVzc2FnZSB8fCByZXNwb25zZS5zdGF0dXNUZXh0OwogICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZXJyb3IpOwogICAgfQoKICAgIHJldHVybiBkYXRhOwogIH0pOwp9"},{"version":3,"sources":["C:/wamp64/www/crm/frontend/src/helpers/authservice/user.service.js"],"names":["authHeader","userService","login","logout","register","getAll","email","password","requestOptions","method","headers","body","JSON","stringify","fetch","then","handleResponse","user","token","localStorage","setItem","removeItem","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"mappings":";;AAAA,SAASA,UAAT,QAA2B,eAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG;AACvBC,EAAAA,KAAK,EAALA,KADuB;AAEvBC,EAAAA,MAAM,EAANA,MAFuB;AAGvBC,EAAAA,QAAQ,EAARA,QAHuB;AAIvBC,EAAAA,MAAM,EAANA;AAJuB,CAApB;;AAOP,SAASH,KAAT,CAAeI,KAAf,EAAsBC,QAAtB,EAAgC;AAE5B,MAAMC,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEP,MAAAA,KAAK,EAALA,KAAF;AAASC,MAAAA,QAAQ,EAARA;AAAT,KAAf;AAHa,GAAvB;AAMA,SAAOO,KAAK,wBAAwBN,cAAxB,CAAL,CACFO,IADE,CACGC,cADH,EAEFD,IAFE,CAEG,UAAAE,IAAI,EAAI;AACV;AACA,QAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BR,IAAI,CAACC,SAAL,CAAeI,IAAf,CAA7B;AACH;;AACD,WAAOA,IAAP;AACH,GATE,CAAP;AAUH;;AAED,SAASd,MAAT,GAAkB;AACd;AACAgB,EAAAA,YAAY,CAACE,UAAb,CAAwB,MAAxB;AACH;;AAED,SAASjB,QAAT,CAAkBa,IAAlB,EAAwB;AACpB,MAAMT,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,MADW;AAEnBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFU;AAGnBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeI,IAAf;AAHa,GAAvB;AAKA,SAAOH,KAAK,oBAAoBN,cAApB,CAAL,CAAyCO,IAAzC,CAA8CC,cAA9C,CAAP;AACH;;AAED,SAASX,MAAT,GAAkB;AACd,MAAMG,cAAc,GAAG;AACnBC,IAAAA,MAAM,EAAE,KADW;AAEnBC,IAAAA,OAAO,EAAEV,UAAU;AAFA,GAAvB;AAIA,SAAOc,KAAK,WAAWN,cAAX,CAAL,CAAgCO,IAAhC,CAAqCC,cAArC,CAAP;AACH;;AAED,SAASA,cAAT,CAAwBM,QAAxB,EAAkC;AAC9B,SAAOA,QAAQ,CAACC,IAAT,GAAgBR,IAAhB,CAAqB,UAAAQ,IAAI,EAAI;AAChC,QAAMC,IAAI,GAAGD,IAAI,IAAIX,IAAI,CAACa,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AACd,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AACzB;AACAxB,QAAAA,MAAM;AACNyB,QAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACH;;AACD,UAAMC,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAd,IAA0BT,QAAQ,CAACU,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACH;;AACD,WAAON,IAAP;AACH,GAZM,CAAP;AAaH","sourcesContent":["import { authHeader } from './auth-header';\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    register,\r\n    getAll,\r\n};\r\n\r\nfunction login(email, password) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n    };\r\n\r\n    return fetch(`/users/authenticate`, requestOptions)\r\n        .then(handleResponse)\r\n        .then(user => {\r\n            // login successful if there's a jwt token in the response\r\n            if (user.token) {\r\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\r\n                localStorage.setItem('user', JSON.stringify(user));\r\n            }\r\n            return user;\r\n        });\r\n}\r\n\r\nfunction logout() {\r\n    // remove user from local storage to log user out\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction register(user) {\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(user)\r\n    };\r\n    return fetch(`/users/register`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n    return fetch(`/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                location.reload(true);\r\n            }\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n        return data;\r\n    });\r\n}\r\n"]}]}