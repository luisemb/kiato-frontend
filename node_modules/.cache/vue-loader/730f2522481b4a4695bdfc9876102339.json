{"remainingRequest":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\wamp64\\www\\crm\\frontend\\src\\views\\agents\\agentslist.vue?vue&type=style&index=0&id=5cc3fe84&lang=css","dependencies":[{"path":"C:\\wamp64\\www\\crm\\frontend\\src\\views\\agents\\agentslist.vue","mtime":1673642297965},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1668443312723},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1668443313146},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1668443312991},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668443304858},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1668443313146}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5yb3ctc3BhY2VyewogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0K"},{"version":3,"sources":["C:\\wamp64\\www\\crm\\frontend\\src\\views\\agents\\agentslist.vue"],"names":[],"mappings":";AAynCA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB","file":"C:/wamp64/www/crm/frontend/src/views/agents/agentslist.vue","sourceRoot":"","sourcesContent":["<script>\nimport flatPickr from \"vue-flatpickr-component\";\nimport \"flatpickr/dist/flatpickr.css\";\nimport moment from \"moment\";\n// import Multiselect from \"@vueform/multiselect\";\n// import \"@vueform/multiselect/themes/default.css\";\n\n\nimport Layout from \"../../layouts/main.vue\";\nimport PageHeader from \"@/components/page-header\";\nimport appConfig from \"../../../app.config\";\nimport Swal from \"sweetalert2\";\n\nimport Lottie from \"@/components/widgets/lottie.vue\";\n// import animationData1 from \"@/components/widgets/gsqxdxog.json\";\nimport axios from \"axios\";\nimport animationData from \"@/components/widgets/msoeawqm.json\";\n\nexport default {\n  page: {\n    title: \"Agents\",\n    meta: [{name: \"description\", content: appConfig.description}],\n  },\n  components: {\n    Layout,\n    PageHeader,\n    lottie: Lottie,\n    // Multiselect,\n    flatPickr,\n  },\n  data() {\n    return{\n      title: \"Agent List\",\n      items: [\n        {\n          text: \"Agents\",\n          href: \"/\",\n        },\n        {\n          text: \"Agent List\",\n          active: true,\n        },\n      ],\n      timeConfig: {\n        enableTime: false,\n        dateFormat: \"d M, Y\"\n      },\n      dateTimeConfig: {\n        enableTime: true,\n        dateFormat: \"m-d-y H:i K\"\n      },\n      list: [],\n      agentData: {\n        username: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        language: '',\n        status: '',\n        phone: '',\n        department: '',\n        state: '',\n        birthDate: '',\n        address: '',\n        country: '',\n        zipCode: '',\n        interview: '',\n        agentNumber: '',\n        createdBy: '',\n        insuranceLicense: '',\n        licenseNumber: ''\n      },\n      departmentList: {},\n      statusList: {},\n      page: 1,\n      perPage: 100,\n      pages: [],\n      searchQuery: null,\n      humanfriendlyConfig: {\n        dateFormat: \"F j, Y\",\n      },\n      data: {\n        token: localStorage.getItem('jwt'),\n        searchValues: {\n          limitTo: this.perPage,\n          isActive: 1,\n          noteSearch: '',\n          keyword: '',\n          licensed: 1,\n          language: 3,\n          status: 0,\n          toDate: new Date().toLocaleDateString('en-us', { year:\"numeric\", month:\"long\", day:\"numeric\"}) ,\n          fromDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)).toLocaleDateString('en-us', { year:\"numeric\", month:\"long\", day:\"numeric\"}),\n        }\n      },\n      defaultOptions: { animationData: animationData },\n    }\n  },\n  watch: {\n    companies() {\n      this.setPages();\n    },\n  },\n  created() {\n    this.setPages();\n  },\n  filters: {\n    trimWords(value) {\n      return value.split(\" \").splice(0, 20).join(\" \") + \"...\";\n    },\n  },\n  methods: {\n    editdata(data){\n\n      document.getElementById('id').value= data.id\n      document.getElementById('customername').value=data.name;\n      document.getElementById('companyname').value=data.company;\n      document.getElementById('leadsscore').value=data.score;\n      document.getElementById('phone').value=data.phone;\n      document.getElementById('location').value=data.location;\n      document.getElementById('date').value=data.date;\n    },\n    async updateAgent() {\n\n      this.errors = []\n\n      if (!document.getElementById('editEmail').value) {\n        this.errors.push('Email is required.');\n      } else if (!this.validEmail(document.getElementById('editEmail').value)) {\n        this.errors.push('Valid email is required.');\n      }\n\n      if (!document.getElementById('editFirstName').value) {\n        this.errors.push('First Name is required.');\n      }\n\n      if (!document.getElementById('editLastName').value) {\n        this.errors.push('Last Name is required.');\n      }\n\n      if (!document.getElementById('editLanguage').value) {\n        this.errors.push('Language is required.');\n      }\n\n      if (!document.getElementById('editStatus').value) {\n        this.errors.push('Status is required.');\n      }\n\n      if (!document.getElementById('editPhoneNumber').value) {\n        this.errors.push('Phone is required.');\n      }\n\n      if(this.validPhone(document.getElementById('editPhoneNumber').value) === false && document.getElementById('editPhoneNumber').value !== ''){\n        this.errors.push('Please, write a valid phone number!');\n      }\n\n      if (!document.getElementById('editDepartment').value) {\n        this.errors.push('Department is required.');\n      }\n\n      if (!document.getElementById('editBirthDate').value) {\n        this.errors.push('Birth date is required.');\n      }\n\n      if (!document.getElementById('editAddress').value) {\n        this.errors.push('Address is required.');\n      }\n\n      if (!document.getElementById('editAgentNumber').value && document.getElementById('editStatus').value === 5) {\n        this.errors.push('Agent Number is required.');\n      }\n\n      if ((!document.getElementById('editLicensed').value && document.getElementById('editStatus').value === 5) || !document.getElementById('editLicensed').value) {\n        this.errors.push('Insurance Licensed? is required.');\n      }\n\n      if ((!document.getElementById('editLicensed').value && document.getElementById('editStatus').value === 5) /*|| (!this.agentData.licenseNumber && document.getElementById('editLicensed').value === 1)*/) {\n        this.errors.push('License number is required.');\n      }\n\n      if (!this.errors.length) {\n        const data = {\n          username: '',\n          email: document.getElementById('editEmail').value,\n          firstName: document.getElementById('editFirstName').value,\n          lastName: document.getElementById('editLastName').value,\n          language: document.getElementById('editLanguage').value,\n          status: document.getElementById('editStatus').value,\n          phoneNumber: document.getElementById('editPhoneNumber').value,\n          departmentID: document.getElementById('editDepartment').value,\n          state: document.getElementById('editState').value,\n          birthDate: document.getElementById('editBirthDate').value,\n          address: document.getElementById('editAddress').value,\n          country: document.getElementById('editCountry').value,\n          postalCode: document.getElementById('editPostalCode').value,\n          interviewDate: document.getElementById('editInterview').value,\n          agentNumber: document.getElementById('editAgentNumber').value,\n          createdBy: localStorage.getItem('email'),\n          isLicensed: document.getElementById('editLicensed').value,\n          licenseNumber: this.agentData.licenseNumber,\n          token: localStorage.getItem('jwt'),\n          userID: localStorage.getItem('id'),\n          agentID: document.getElementById('id').value\n        }\n\n        await axios\n            .put('/api/updateAgent', data)\n            .then(async response => {\n              if (response) {\n                document.getElementById('closemodal').click();\n                await Swal.fire({\n                  icon: 'success',\n                  title: 'Success',\n                  text: 'Agent update successfully!'\n                });\n              }\n            })\n            .catch(async error => {\n              if (error.response) {\n                let list = '';\n                for (const property in error.response.data) {\n                  this.errors.push(`${property}: ${error.response.data[property]}`)\n                  list += '\\n' + '<b>' + error.response.data[property] + '</b>';\n                }\n\n                await Swal.fire({\n                  title: \"Please check the following: \" + list,\n                  icon: 'warning',\n                  confirmButtonClass: \"btn btn-info\",\n                  buttonsStyling: false,\n                  showCloseButton: true,\n                });\n\n              } else if (error.message) {\n                this.errors.push('Something was wrong, please contact your SysAdmin.')\n              }\n            })\n      } else {\n        let list = '';\n        for (let i = 0; i < this.errors.length; i++)\n          list += '\\n' + '<b>' + this.errors[i] + '</b>';\n\n        await Swal.fire({\n          title: \"Please complete the form! \" + list,\n          icon: 'warning',\n          confirmButtonClass: \"btn btn-info\",\n          buttonsStyling: false,\n          showCloseButton: true,\n        });\n      }\n    },\n    addNewAgentModal() {\n      this.resetAgentData()\n      document.getElementById(\"addform\").reset();\n      document.getElementById('agentModalLabel').innerHTML=\"Add Agent\";\n      document.getElementById('add-btn').style.display='block';\n      document.getElementById('edit-btn').style.display='none';\n    },\n    async createAgent() {\n      this.errors = []\n\n      if (!this.agentData.email) {\n        this.errors.push('Email is required.');\n      } else if (!this.validEmail(this.agentData.email)) {\n        this.errors.push('Valid email is required.');\n      }\n\n      if (!this.agentData.firstName) {\n        this.errors.push('First Name is required.');\n      }\n\n      if (!this.agentData.lastName) {\n        this.errors.push('Last Name is required.');\n      }\n\n      if (!this.agentData.language) {\n        this.errors.push('Language is required.');\n      }\n\n      if (!this.agentData.status) {\n        this.errors.push('Status is required.');\n      }\n\n      if (!this.agentData.phone) {\n        this.errors.push('Phone is required.');\n      }\n\n      if(this.validPhone(this.agentData.phone) === false && this.agentData.phone !== ''){\n        this.errors.push('Please, write a valid phone number!');\n      }\n\n      if (!this.agentData.department) {\n        this.errors.push('Department is required.');\n      }\n\n      if (!this.agentData.birthDate) {\n        this.errors.push('Birth date is required.');\n      }\n\n      if (!this.agentData.address) {\n        this.errors.push('Address is required.');\n      }\n\n      if (!this.agentData.agentNumber && this.agentData.status === 5) {\n        this.errors.push('Agent Number is required.');\n      }\n\n      if ((!this.agentData.insuranceLicense && this.agentData.status === 5) || !this.agentData.insuranceLicense) {\n        this.errors.push('is Insurance Licensed? is required.');\n      }\n\n      if ((!this.agentData.licenseNumber && this.agentData.status === 5) || (!this.agentData.licenseNumber && this.agentData.insuranceLicense === 1)) {\n        this.errors.push('License number is required.');\n      }\n\n      if(!this.errors.length) {\n        const data = {\n          username:  '',\n          email:  this.agentData.email,\n          firstName:  this.agentData.firstName,\n          lastName:  this.agentData.lastName,\n          language:  this.agentData.language,\n          status:  this.agentData.status,\n          phoneNumber:  this.agentData.phone,\n          departmentID:  this.agentData.department,\n          state:  this.agentData.state,\n          birthDate:  this.agentData.birthDate,\n          address:  this.agentData.address,\n          country:  this.agentData.country,\n          postalCode:  this.agentData.zipCode,\n          interviewDate:  this.agentData.interview,\n          agentNumber:  this.agentData.agentNumber,\n          createdBy:  localStorage.getItem('email'),\n          isLicensed:  this.agentData.insuranceLicense,\n          licenseNumber: this.agentData.licenseNumber,\n          token: localStorage.getItem('jwt'),\n          userID: localStorage.getItem('id')\n        }\n\n        await axios\n            .post('/api/createAgent', data)\n            .then(async response => {\n              document.getElementById(\"addform\").reset();\n              if (response.data['ID'] !== null) {\n                document.getElementById('closemodal').click();\n                await Swal.fire({\n                  icon: 'success',\n                  title: 'Success',\n                  text: 'Agent created successfully!'\n                });\n              }\n            })\n            .catch(async error => {\n              if (error.response) {\n                let list = '';\n                for (const property in error.response.data) {\n                  this.errors.push(`${property}: ${error.response.data[property]}`)\n                  list += '\\n' + '<b>' + error.response.data[property] + '</b>';\n                }\n\n                await Swal.fire({\n                  title: \"Please check the following: \" + list,\n                  icon: 'warning',\n                  confirmButtonClass: \"btn btn-info\",\n                  buttonsStyling: false,\n                  showCloseButton: true,\n                });\n\n              } else if (error.message) {\n                this.errors.push('Something was wrong, please contact your SysAdmin.')\n              }\n            })\n      } else {\n        let list = '';\n        for (let i = 0; i < this.errors.length; i++)\n          list += '\\n' + '<b>' + this.errors[i]+ '</b>';\n\n        await Swal.fire({\n          title: \"Please complete the form! \" + list,\n          icon: 'warning',\n          confirmButtonClass: \"btn btn-info\",\n          buttonsStyling: false,\n          showCloseButton: true,\n        });\n      }\n    },\n    async getDepartments() {\n\n      await axios\n          .post('/api/getDepartments')\n          .then(response => {\n            console.log(response);\n          })\n          .catch(error => {\n            if (error.response) {\n              Swal.fire(\"Oops!\", \"Something was wrong, please contact your SysAdmin.\", \"error\")\n            }\n          })\n    },\n    async getUserInfo(id) {\n      document.getElementById('edit-btn').style.display='block';\n      document.getElementById('add-btn').style.display='none'\n      document.getElementById('agentModalLabel').innerHTML=\"Edit Agent\"\n\n      const data = {\n        token: localStorage.getItem('jwt'),\n        ID: id\n      }\n\n      let agentInfo;\n\n      await axios\n          .post('/api/getUser', data)\n          .then(response => {\n            agentInfo=response.data\n            this.setAgentData(agentInfo);\n            document.getElementById('id').value=agentInfo.ID\n            document.getElementById('editEmail').value=agentInfo.email;\n            document.getElementById('editFirstName').value=agentInfo.firstName;\n            document.getElementById('editLastName').value=agentInfo.lastName;\n            document.getElementById('editLanguage').value=agentInfo.language;\n            document.getElementById('editStatus').value=agentInfo.status\n            document.getElementById('editPhoneNumber').value= agentInfo.phoneNumber;\n            document.getElementById('editDepartment').value=agentInfo.departmentID;\n            document.getElementById('editBirthDate').value=agentInfo.dateOfBirth;\n            document.getElementById('editAddress').value=agentInfo.address;\n            document.getElementById('editState').value=agentInfo.state;\n            document.getElementById('editCountry').value=agentInfo.country;\n            document.getElementById('editPostalCode').value=agentInfo.postalCode;\n            document.getElementById('editAgentNumber').value=agentInfo.agentNumber;\n            document.getElementById('editCreatedBy').value=agentInfo.createdBy;\n            document.getElementById('editLicensed').value=agentInfo.isLicensed;\n            // document.getElementById('editInterview').value=agentInfo.interviewDate;\n          })\n          .catch(error => {\n            if (error.response) {\n              Swal.fire(\"Oops!\", \"Something was wrong, please contact your SysAdmin.\", \"error\")\n            }\n          })\n    },\n    validEmail: function (email) {\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(email);\n    },\n    validPhone: function (phone) {\n      return /^(\\+{0,})(\\d{0,})([(]{1}\\d{1,3}[)]{0,}){0,}(\\s?\\d+|\\+\\d{2,3}\\s{1}\\d+|\\d+){1}[\\s|-]?\\d+([\\s|-]?\\d+){1,2}(\\s){0,}$/gm.test(phone);\n    },\n    formatDate: function(date, format){\n      date = moment(date).format(format)\n      return date;\n    },\n    formatPhone: function(phone, flag=0) {\n\n      // if flag == 1 put value in phone Edit\n      if(phone !== undefined){\n        const x = phone.replace(/\\D/g, '').match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\n        phone = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\n      }else{\n        phone = ''\n      }\n\n      if(flag !== 1){\n        return phone;\n      }else{\n        document.getElementById('editPhoneNumber').value = phone;\n      }\n    },\n    setAgentData: function(data) {\n      this.agentData.email=data.email;\n      this.agentData.firstName=data.firstName;\n      this.agentData.lastName=data.lastName;\n      this.agentData.language=data.language;\n      this.agentData.status=data.status\n      this.agentData.phone=data.phoneNumber;\n      this.agentData.department=data.departmentID\n      this.agentData.birthDate= this.formatDate(data.dateOfBirth, 'DD MM, YYYY');\n      this.agentData.interview= this.formatDate(data.interviewDate, 'm-d-y H:i K');\n      this.agentData.address=data.address;\n      this.agentData.state=data.state;\n      this.agentData.country=data.country;\n      this.agentData.zipCode=data.postalCode;\n      this.agentData.agentNumber=data.agentNumber;\n      this.agentData.createdBy=data.createdBy;\n      this.agentData.insuranceLicense=data.isLicensed;\n    },\n    resetAgentData: function(){\n      this.agentData =\n          {username: '',\n          email: '',\n          firstName: '',\n          lastName: '',\n          language: '',\n          status: '',\n          phone: '',\n          department: '',\n          state: '',\n          birthDate: '',\n          address: '',\n          country: '',\n          zipCode: '',\n          interview: '',\n          agentNumber: '',\n          createdBy: '',\n          insuranceLicense: '',\n          licenseNumber: ''\n          }\n    },\n    async updateAgentList(status=0) {\n\n      let validate = true;\n      let errors = [];\n      let filterLanguage = document.getElementById(\"filterLanguage\").value;\n      let filterKeyword = document.getElementById(\"filterKeyword\").value;\n      let filterLicensed = document.getElementById(\"filterLicensed\").value;\n      let filterNotes = document.getElementById(\"filterNotes\").value;\n      let filterFromDate = document.getElementById(\"filterFromDate\").value;\n      let filterToDate = document.getElementById(\"filterToDate\").value;\n      let isActive = document.querySelector('#isActive').checked;\n      this.data.searchValues.status = status;\n\n      if(isActive === true) {\n        this.data.searchValues.isActive = 1\n      } else {\n        this.data.searchValues.isActive = 2\n      }\n\n      if (filterLanguage !== '' && (filterLanguage === '1' || filterLanguage === '2')){\n        this.data.searchValues.language = filterLanguage;\n      }\n\n      if (filterKeyword !== '' && filterKeyword.length >= 3) {\n        this.data.searchValues.keyword = filterKeyword;\n      } else if (filterKeyword !== '' && filterKeyword.length < 3) {\n        errors.push('Keyword search should have 3 or more characters!')\n        validate = false;\n      }\n\n      if(filterLicensed !== ''){\n        this.data.searchValues.licensed = filterLicensed;\n      }\n\n      if (filterNotes !== '' && filterNotes.length >= 3) {\n        this.data.searchValues.noteSearch = filterNotes;\n      }else if(filterNotes !== '' && filterNotes.length < 3) {\n        errors.push('Notes search should have 3 or more characters!')\n        validate = false;\n      }\n\n      var start = moment(this.formatDate(filterFromDate, 'YYYY-MM-DD'));\n      var end = moment(this.formatDate(filterToDate, 'YYYY-MM-DD'));\n      var days = end.diff(start, \"days\");\n\n      if(days <= 365){\n        this.data.searchValues.fromDate = filterFromDate;\n        this.data.searchValues.toDate = filterToDate;\n      } else {\n        errors.push(\"From Date and To Date (range) couldn't be larger than a year (365 days)!\");\n        validate = false;\n      }\n\n      const data = {\n        token: localStorage.getItem('jwt'),\n        isProspect: 0,\n        searchValues: this.data.searchValues,\n        userEmail: localStorage.getItem('email'),\n        userID: localStorage.getItem('id'),\n      }\n\n      if(validate){\n        axios\n            .post('/api/listAgents', data)\n            .then(response => {\n              this.list=response.data\n            })\n            .catch(error => {\n              if (error.response) {\n                // for (const property in error.response.data) {\n                // this.errors.push(`${property}: ${error.response.data[property]}`)\n                // }\n              } else if (error.message) {\n                this.errors.push('Something was wrong, please contact your SysAdmin.')\n              }\n            })\n      }else{\n        let list = '';\n        for (var i = 0; i < errors.length; i+=1) {\n          list += errors[i] + ' \\n';\n        }\n\n        await Swal.fire(\"\" + list, '', 'info');\n\n      }\n\n    },\n    setPages() {\n\n      let numberOfPages = Math.ceil(this.list.length / this.perPage);\n      for (let index = 1; index <= numberOfPages; index++) {\n        this.pages.push(index);\n      }\n    },\n    paginate(companies) {\n      let page = this.page;\n      let perPage = this.perPage;\n      let from = page * perPage - perPage;\n      let to = page * perPage;\n      return companies.slice(from, to);\n    },\n  },\n  async mounted() {\n\n    const data = {\n      token: localStorage.getItem('jwt'),\n      searchValues: this.data.searchValues,\n    }\n\n    await axios\n        .post('/api/listDepartments', data)\n        .then(response => {\n          this.departmentList=response.data\n        })\n        .catch(error => {\n          if (error.response) {\n            Swal.fire(\"Oops!\", \"Departments could not be loaded, please contact your SysAdmin.\", \"error\")\n          }\n        })\n\n    await axios\n        .post('/api/listStatus', data)\n        .then(response => {\n          this.statusList=response.data\n        })\n        .catch(error => {\n          if (error.response) {\n            Swal.fire(\"Oops!\", \"Status could not be loaded, please contact your SysAdmin.\", \"error\")\n          }\n        })\n\n    await axios\n        .post('/api/listAgents', data)\n        .then(response => {\n          this.list=response.data;\n          this.setPages();\n        })\n        .catch(error => {\n          if (error.response) {\n            // for (const property in error.response.data) {\n            // this.errors.push(`${property}: ${error.response.data[property]}`)\n            // }\n          } else if (error.message) {\n            this.errors.push('Something was wrong, please contact your SysAdmin.')\n          }\n        })\n\n    const checkAll = document.getElementById(\"checkAll\");\n\n    if (checkAll) {\n      checkAll.onclick = function () {\n        var checkboxes = document.querySelectorAll(\n            '.form-check-all input[type=\"checkbox\"]'\n        );\n        if (checkAll.checked == true) {\n          checkboxes.forEach(function (checkbox) {\n            checkbox.checked = true;\n            checkbox.closest(\"tr\").classList.add(\"table-active\");\n          });\n        } else {\n          checkboxes.forEach(function (checkbox) {\n            checkbox.checked = false;\n            checkbox.closest(\"tr\").classList.remove(\"table-active\");\n          });\n        }\n      };\n    }\n  },\n  computed: {\n    displayedPosts() {\n      return this.paginate(this.list);\n    },\n    resultQuery() {\n      if (this.data.searchValues.keyword.length >= 3) {\n        const search = this.data.searchValues.keyword.toLowerCase();\n        return this.displayedPosts.filter((data) => {\n          return (\n              data.address.toLowerCase().includes(search) ||\n              data.agentNumber.toLowerCase().includes(search) ||\n              data.city.toLowerCase().includes(search) ||\n              data.email.toLowerCase().includes(search) ||\n              data.phoneNumber.toLowerCase().includes(search) ||\n              data.firstName.toLowerCase().includes(search) ||\n              data.lastName.toLowerCase().includes(search) ||\n              data.statusName.toLowerCase().includes(search)\n          );\n        });\n      } else {\n        return this.displayedPosts;\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <Layout>\n    <PageHeader :title=\"title\" :items=\"items\"/>\n    <div class=\"row\">\n      <div class=\"col-lg-12\">\n        <div class=\"card\" id=\"leadsList\">\n          <div class=\"card-header border-0\">\n            <div class=\"row g-4 align-items-center\">\n              <div class=\"col-sm-3\">\n                <div class=\"search-box\">\n                  <input\n                      type=\"text\"\n                      class=\"form-control search\"\n                      placeholder=\"Search for...\"\n                      v-model=\"this.data.searchValues.keyword\"\n                      @change=\"this.data.searchValues.keyword.length >= 3 ? updateAgentList(): console.log('test')\"\n                  />\n                  <i class=\"ri-search-line search-icon\"></i>\n                </div>\n              </div>\n              <div class=\"col-sm-auto ms-auto\">\n                <div class=\"hstack gap-2\">\n                  <button class=\"btn btn-soft-danger\" @click=\"deleteMultiple\">\n                    <i class=\"ri-delete-bin-2-line\"></i>\n                  </button>\n                  <button type=\"button\" class=\"btn btn-soft-success add-btn\" href=\"#open-filters\" data-bs-toggle=\"modal\">\n                    <i class=\"ri-filter-line align-bottom me-1\"></i> Filters\n                  </button>\n                  <button type=\"button\" class=\"btn btn-soft-success add-btn\" id=\"create-btn\" data-bs-toggle=\"modal\" href=\"#agentModal\" @click=\"addNewAgentModal\">\n                    <i class=\"ri-add-line align-bottom me-1\"></i> Add Agent\n                  </button>\n                  <span class=\"dropdown\">\n                    <button\n                        class=\"btn btn-soft-primary btn-icon fs-14\"\n                        type=\"button\"\n                        id=\"dropdownMenuButton1\"\n                        data-bs-toggle=\"dropdown\"\n                        aria-expanded=\"false\"\n                    >\n                      <i class=\"ri-settings-4-line\"></i>\n                    </button>\n                    <ul\n                        class=\"dropdown-menu\"\n                        aria-labelledby=\"dropdownMenuButton1\"\n                    >\n                      <li><a class=\"dropdown-item\" href=\"#\">Copy</a></li>\n                      <li>\n                        <a class=\"dropdown-item\" href=\"#\">Move to pipline</a>\n                      </li>\n                      <li>\n                        <a class=\"dropdown-item\" href=\"#\">Add to exceptions</a>\n                      </li>\n                      <li>\n                        <a class=\"dropdown-item\" href=\"#\"\n                        >Switch to common form view</a\n                        >\n                      </li>\n                      <li>\n                        <a class=\"dropdown-item\" href=\"#\"\n                        >Reset form view to default</a\n                        >\n                      </li>\n                    </ul>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Table Head -->\n          <ul\n              class=\"nav nav-tabs nav-tabs-custom nav-primary mb-3\"\n              role=\"tablist\">\n            <li class=\"nav-item\">\n              <a\n                  class=\"nav-link active All py-3\"\n                  data-bs-toggle=\"tab\"\n                  id=\"All\"\n                  href=\"#home1\"\n                  role=\"tab\"\n                  aria-selected=\"true\"\n                  @click=\"updateAgentList(0)\"\n              >\n                <i class=\"ri-file-search-line me-1 align-bottom\"></i> All\n              </a>\n            </li>\n             <li class=\"nav-item\" v-for=\"(data, index) of statusList\" :key=\"index\">\n              <a\n                  class=\"nav-link py-3 \" v-bind:class=\"data.name\"\n                  data-bs-toggle=\"tab\"\n                  v-bind:id=\"data.name\"\n                  v-bind:href=\"'#'+data.name\"\n                  role=\"tab\"\n                  aria-selected=\"false\"\n                  @click=\"updateAgentList(data.statusID)\"\n              >\n                <i class=\"me-1 align-bottom\"></i>\n                {{ data.name }}\n              </a>\n            </li>\n          </ul>\n          <div class=\"table-responsive\">\n            <table class=\"table align-middle table-nowrap mb-0\">\n              <thead class=\"table-light\">\n              <tr>\n                <th scope=\"col\" style=\"width: 50px\">\n                  <div class=\"form-check\">\n                    <input\n                        class=\"form-check-input\"\n                        type=\"checkbox\"\n                        id=\"checkAll\"\n                        value=\"option\"\n                    />\n                  </div>\n                </th>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Department</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Phone</th>\n                <th scope=\"col\">Create Date</th>\n                <th scope=\"col\">Status</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n              </thead>\n              <tbody>\n              <tr v-for=\"(data, index) of resultQuery\" :key=\"index\">\n                <td>\n                  <div class=\"form-check\">\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"cardtableCheck01\">\n                    <label class=\"form-check-label\" for=\"cardtableCheck01\"></label>\n                  </div>\n                </td>\n                <td>{{ data.firstName }} {{ data.lastName }}</td>\n                <td>{{ data.departmentName }}</td>\n                <td>{{ data.email }}</td>\n                <td>{{ formatPhone(data.phoneNumber) }}</td>\n                <td> {{ formatDate(data.createdOn, 'MMMM Do YYYY, h:mmA') }} </td>\n                <td><a href=\"javascript:void(0);\" v-bind:style=\"'color:'+data.color\">{{ data.statusName}}</a></td>\n                <td>\n                  <ul class=\"list-inline hstack gap-2 mb-0\">\n                    <li class=\"list-inline-item\" data-bs-toggle=\"modal\" href=\"#agentModal\" data-bs-trigger=\"hover\" data-bs-placement=\"top\" title=\"Edit\" @click=\"getUserInfo(data.ID)\">\n                      <a class=\"edit-item-btn\" href=\"javascript:void(0);\"><i class=\"ri-pencil-fill align-bottom text-muted\"></i></a>\n                    </li>\n                    <li class=\"list-inline-item\" data-bs-toggle=\"tooltip\" data-bs-trigger=\"hover\" data-bs-placement=\"top\" title=\"Delete\">\n                      <a class=\"remove-item-btn\" data-bs-toggle=\"modal\" href=\"javascript:void(0);\">\n                        <i class=\"ri-delete-bin-fill align-bottom text-muted\"></i>\n                      </a>\n                    </li>\n                  </ul>\n                </td>\n              </tr>\n              </tbody>\n            </table>\n            <div class=\"noresult\" v-if=\"list.length <= 0\">\n              <div class=\"text-center\">\n                <lottie\n                    class=\"avatar-xl\"\n                    colors=\"primary:#121331,secondary:#08a88a\"\n                    :options=\"defaultOptions\"\n                    :height=\"75\"\n                    :width=\"75\"\n                />\n                <h5 class=\"mt-2\">Sorry!</h5>\n                <p class=\"text-muted mb-0\">\n                  We've searched and we did not find any\n                  agent for your search.\n                </p>\n              </div>\n            </div>\n            <div class=\"d-flex justify-content-end mt-3\" v-if=\"resultQuery.length >= 0\">\n              <div class=\"pagination-wrap hstack gap-2\">\n                <a\n                    class=\"page-item pagination-prev disabled\"\n                    href=\"#\"\n                    v-if=\"page !== 1\"\n                    @click=\"page--\"\n                >\n                  Previous\n                </a>\n                <ul class=\"pagination listjs-pagination mb-0\">\n                  <li\n                      :class=\"{\n                      active: pageNumber == page,\n                      disabled: pageNumber == '...',\n                    }\"\n                      v-for=\"(pageNumber, index) in pages.slice(\n                      page - 1,\n                      page + 5\n                    )\"\n                      :key=\"index\"\n                      @click=\"page = pageNumber\"\n                  >\n                    <a class=\"page\" href=\"#\">{{ pageNumber }}</a>\n                  </li>\n                </ul>\n                <a\n                    class=\"page-item pagination-next\"\n                    href=\"#\"\n                    @click=\"page++\"\n                    v-if=\"page < pages.length\"\n                >\n                  Next\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <!--end col-->\n    </div>\n    <!--end row-->\n\n    <!--  Add agent modal  -->\n    <div class=\"modal zoomIn\" id=\"agentModal\" tabindex=\"-1\" aria-labelledby=\"agentModalLabel\" aria-hidden=\"true\">\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\" style=\"max-width: 1000px;\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header bg-light p-3\">\n            <h5 class=\"modal-title\" id=\"agentModalLabel\"></h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n                    id=\"close-modal\"></button>\n          </div>\n          <form id=\"addform\" @submit.prevent=\"\">\n            <div class=\"modal-body\">\n              <input type=\"hidden\" id=\"id\"/>\n              <div class=\"row g-3\">\n                <div class=\"col-lg-12\">\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label for=\"editEmail\" class=\"form-label\">Email</label>\n                      <input type=\"text\" id=\"editEmail\" class=\"form-control mb-2\" placeholder=\"Enter Email\" v-model=\"agentData.email\" required>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <label for=\"editCreatedBy\" class=\"form-label\">Created By</label>\n                      <input type=\"text\" id=\"editCreatedBy\" class=\"form-control mb-2\" disabled v-model=\"this.agentData.createdBy\">\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label for=\"editFirstName\" class=\"form-label\">First Name</label>\n                      <input type=\"text\" id=\"editFirstName\" class=\"form-control mb-2\" placeholder=\"Enter First Name\" v-model=\"this.agentData.firstName\" required>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <label for=\"editLastName\" class=\"form-label\">Last Name</label>\n                      <input type=\"text\" id=\"editLastName\" class=\"form-control mb-2\" placeholder=\"Enter Last Name\" v-model=\"this.agentData.lastName\" required>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label for=\"editLanguage\" class=\"form-label\">Language</label>\n                      <select class=\"form-select mb-2\" aria-label=\"Language\" id=\"editLanguage\" v-model=\"this.agentData.language\" required>\n                        <option value=\"1\" selected>English</option>\n                        <option value=\"2\">Spanish</option>\n                      </select>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <label for=\"editStatus\" class=\"form-label\">Status</label>\n                      <select class=\"form-select mb-2\" aria-label=\"Status\" id=\"editStatus\" v-model=\"this.agentData.status\">\n                        <option v-for=\"(status, statusIndex) of statusList\" :key=\"statusIndex\" v-bind:value=\"status.statusID\">{{ status.name }}</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label for=\"editPhoneNumber\" class=\"form-label\">Phone</label>\n                      <input type=\"text\" id=\"editPhoneNumber\" class=\"form-control mb-2\" placeholder=\"Phone number\" required v-model=\"this.agentData.phone\"/>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <label for=\"editDepartment\" class=\"form-label\">Department</label>\n                      <select class=\"form-select mb-2\" aria-label=\"Department\" id=\"editDepartment\" name=\"editDepartment\"\n                              v-model=\"this.agentData.department\" v-if=\"(departmentList.length > 1)\">\n                        <option v-for=\"(department, index) of departmentList\"  :key=\"index\"\n                                v-bind:value=\"department.departmentID\">{{ department.name }}\n                        </option>\n                      </select>\n                      <select class=\"form-select mb-2\" aria-label=\"Department\" id=\"editDepartment\" name=\"editDepartment\"\n                              v-model=\"this.agentData.department\" v-else>\n                        <option v-bind:value=\"departmentList.departmentID\">{{ departmentList.name }}</option>\n                      </select>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label for=\"editAddress\" class=\"form-label\">Address</label>\n                      <input type=\"text\" id=\"editAddress\" class=\"form-control mb-2\" placeholder=\"Enter Address\" required v-model=\"this.agentData.address\"/>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <label for=\"editBirthDate\" class=\"form-label mb-2\">Birth Date</label>\n                      <flat-pickr\n                          placeholder=\"Select Birth Date\"\n                          v-model=\"this.agentData.birthDate\"\n                          :config=\"timeConfig\"\n                          class=\"form-control flatpickr-input\"\n                          id=\"editBirthDate\"></flat-pickr>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label for=\"editState\" class=\"form-label\">State</label>\n                      <input type=\"text\" id=\"editState\" class=\"form-control mb-2\" placeholder=\"Enter State\" required v-model=\"this.agentData.state\"/>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <label for=\"editCountry\" class=\"form-label\">Country</label>\n                      <input type=\"text\" id=\"editCountry\" class=\"form-control mb-2\" placeholder=\"Enter Country\" required v-model=\"this.agentData.country\"/>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label for=\"editPostalCode\" class=\"form-label\">Postal code</label>\n                      <input type=\"text\" id=\"editPostalCode\" class=\"form-control mb-2\" placeholder=\"Enter Address\" required v-model=\"this.agentData.zipCode\"/>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <label for=\"editInterview\" class=\"form-label mb-2\">Interview</label>\n                      <flat-pickr\n                          placeholder=\"Select Interview date/time\"\n                          v-model=\"this.agentData.interview\"\n                          :config=\"dateTimeConfig\"\n                          class=\"form-control flatpickr-input\"\n                          id=\"editInterview\" data-enable-time></flat-pickr>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <label for=\"editAgentNumber\" class=\"form-label\">Agent Number</label>\n                      <input type=\"text\" id=\"editAgentNumber\" class=\"form-control mb-2\" placeholder=\"Enter Agent Number\" required v-model=\"this.agentData.agentNumber\"/>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <label for=\"editLicensed\" class=\"form-label\">Insurance Licensed?</label>\n                      <select class=\"form-select mb-2\" aria-label=\"Department\" id=\"editLicensed\" v-model=\"this.agentData.insuranceLicense\">\n                        <option value=\"0\">No</option>\n                        <option value=\"1\">Yes</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <!--end col-->\n              </div>\n              <!--end row-->\n            </div>\n\n            <div class=\"modal-footer\">\n              <div class=\"hstack gap-2 justify-content-end\">\n                <button type=\"button\" class=\"btn btn-light\" id=\"closemodal\" data-bs-dismiss=\"modal\">Close</button>\n                <button type=\"submit\" class=\"btn btn-success\" id=\"add-btn\" @click=\"createAgent\">Save</button>\n                <button type=\"button\" class=\"btn btn-success\" id=\"edit-btn\" @click=\"updateAgent\">Update</button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n    <!-- Filters Modal -->\n    <div id=\"open-filters\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"display: none;\">\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-header\">\n            <h5 class=\"modal-title\" id=\"myModalLabel\">Filters</h5>\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"> </button>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row\">\n              <div class=\"col-lg-12\">\n                <label for=\"filterKeyword\" class=\"form-label\">Keyword</label>\n                <input type=\"text\" id=\"filterKeyword\" name=\"filterKeyword\" class=\"form-control mb-2\" placeholder=\"Enter Keyword\" v-model=\"this.data.searchValues.keyword\">\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-lg-6\">\n                <label for=\"filterLicensed\" class=\"form-label\">Licensed agents?</label>\n                <select class=\"form-select mb-2\" aria-label=\"Licensed Agents?\" id=\"filterLicensed\" name=\"filterLicensed\" v-model=\"this.data.searchValues.licensed\">\n                  <option value=\"1\" selected>Both</option>\n                  <option value=\"2\">Yes</option>\n                  <option value=\"3\">No</option>\n                </select>\n              </div>\n              <div class=\"col-lg-6\">\n                  <label for=\"editStatus\" class=\"form-label\">Status</label>\n                  <select class=\"form-select mb-2\" aria-label=\"Status\" id=\"filterStatus\" v-model=\"this.data.searchValues.status\">\n                    <option value=\"0\">All</option>\n                    <option v-for=\"(status, statusIndex) of statusList\" :key=\"statusIndex\" v-bind:value=\"status.statusID\">{{ status.name }}</option>\n                  </select>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-lg-6\">\n                <label for=\"editLanguage\" class=\"form-label\">Language</label>\n                <select class=\"form-select mb-2\" aria-label=\"Language\" id=\"filterLanguage\" name=\"filterLanguage\" v-model=\"this.data.searchValues.language\">\n                  <option value=\"3\" selected>Both</option>\n                  <option value=\"1\">English</option>\n                  <option value=\"2\">Spanish</option>\n                </select>\n              </div>\n              <div class=\"col-lg-6\">\n                <label for=\"editStatus\" class=\"form-label\">Search by Notes</label>\n                <input type=\"text\" id=\"filterNotes\" name=\"filterNotes\" class=\"form-control mb-2\" placeholder=\"Enter note\" v-model=\"this.data.searchValues.noteSearch\">\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-lg-6\">\n                <label for=\"filterFromDate\" class=\"form-label\"> From date </label>\n                <flat-pickr\n                    v-model=\"this.data.searchValues.fromDate\"\n                    :config=\"humanfriendlyConfig\"\n                    class=\"form-control flatpickr-input\"\n                    id=\"filterFromDate\"\n                    name=\"filterFromDate\"\n                ></flat-pickr>\n              </div>\n              <div class=\"col-lg-6\">\n                <label for=\"filterToDate\" class=\"form-label\"> To Date </label>\n                <flat-pickr\n                    v-model=\"this.data.searchValues.toDate\"\n                    :config=\"humanfriendlyConfig\"\n                    class=\"form-control flatpickr-input\"\n                    id=\"filterToDate\"\n                    name=\"filterToDate\"\n                ></flat-pickr>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-lg-6\">\n                <div class=\"form-check form-switch form-switch-lg\" dir=\"ltr\" style=\"margin: 0;position: absolute;top: 50%;-ms-transform: translateY(-50%);transform: translateY(-50%);\">\n                  <input type=\"checkbox\" class=\"form-check-input\" id=\"isActive\" checked=\"\">\n                  <label class=\"form-check-label\" for=\"isActive\">Active</label>\n                </div>\n              </div>\n              <div class=\"col-lg-6\">\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <button type=\"button\" class=\"btn btn-light\" data-bs-dismiss=\"modal\">Close</button>\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"updateAgentList()\">Search</button>\n          </div>\n\n        </div><!-- /.modal-content -->\n      </div><!-- /.modal-dialog -->\n    </div><!-- /.modal -->\n\n\n  </Layout>\n</template>\n<style>\n.row-spacer{\n  margin-bottom: 10px;\n}\n</style>"]}]}