{"remainingRequest":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!C:\\wamp64\\www\\crm\\frontend\\src\\views\\agents\\approval.vue?vue&type=style&index=0&id=01bd45e8&lang=css","dependencies":[{"path":"C:\\wamp64\\www\\crm\\frontend\\src\\views\\agents\\approval.vue","mtime":1677602175921},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1668443312723},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1668443313146},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1668443312991},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1668443304858},{"path":"C:\\wamp64\\www\\crm\\frontend\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1668443313146}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucm93LXNwYWNlcnsNCiAgbWFyZ2luLWJvdHRvbTogMTBweDsNCn0NCg=="},{"version":3,"sources":["C:\\wamp64\\www\\crm\\frontend\\src\\views\\agents\\approval.vue"],"names":[],"mappings":";AA0qCA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB","file":"C:/wamp64/www/crm/frontend/src/views/agents/approval.vue","sourceRoot":"","sourcesContent":["<script>\r\nimport flatPickr from \"vue-flatpickr-component\";\r\nimport \"flatpickr/dist/flatpickr.css\";\r\nimport moment from \"moment\";\r\nimport Multiselect from \"@vueform/multiselect\";\r\nimport \"@vueform/multiselect/themes/default.scss\";\r\n\r\nimport Layout from \"../../layouts/main.vue\";\r\nimport PageHeader from \"@/components/page-header\";\r\nimport appConfig from \"../../../app.config\";\r\nimport Swal from \"sweetalert2\";\r\n\r\n// import Lottie from \"@/components/widgets/lottie.vue\";\r\n// import animationData from \"@/components/widgets/msoeawqm.json\";\r\n// import animationData1 from \"@/components/widgets/gsqxdxog.json\";\r\nimport axios from \"axios\";\r\n\r\n\r\nexport default {\r\n  page: {\r\n    title: \"Agents\",\r\n    meta: [{name: \"description\", content: appConfig.description}],\r\n  },\r\n  components: {\r\n    Layout,\r\n    PageHeader,\r\n    // lottie: Lottie,\r\n    // Multiselect,\r\n    flatPickr,\r\n    Multiselect,\r\n  },\r\n  data() {\r\n    return{\r\n      title: \"Approval Agent List\",\r\n      items: [\r\n        {\r\n          text: \"Agents\",\r\n          href: \"/\",\r\n        },\r\n        {\r\n          text: \"Approval Agent List\",\r\n          active: true,\r\n        },\r\n      ],\r\n      timeConfig: {\r\n        enableTime: false,\r\n        dateFormat: \"d M, Y\"\r\n      },\r\n      dateTimeConfig: {\r\n        enableTime: true,\r\n        dateFormat: \"m-d-y H:i K\"\r\n      },\r\n      list: [],\r\n      agentData: {\r\n        username: '',\r\n        email: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        language: '',\r\n        status: '',\r\n        phone: '',\r\n        department: '',\r\n        state: '',\r\n        birthDate: '',\r\n        address: '',\r\n        country: '',\r\n        zipCode: '',\r\n        interview: '',\r\n        agentNumber: '',\r\n        createdBy: '',\r\n        insuranceLicense: '',\r\n        licenseNumber: ''\r\n      },\r\n      departmentList: {},\r\n      statusList: {},\r\n      page: 1,\r\n      perPage: 100,\r\n      pages: [],\r\n      searchQuery: null,\r\n      humanfriendlyConfig: {\r\n        dateFormat: \"F j, Y\",\r\n      },\r\n      data: {\r\n        token: localStorage.getItem('jwt'),\r\n        searchValues: {\r\n          isActive: 1,\r\n          noteSearch: '',\r\n          keyword: '',\r\n          licensed: 1,\r\n          language: 3,\r\n          sorting: 'name',\r\n          toDate: new Date().toLocaleDateString('en-us', { year:\"numeric\", month:\"long\", day:\"numeric\"}) ,\r\n          fromDate: new Date(new Date().setFullYear(new Date().getFullYear() - 1)).toLocaleDateString('en-us', { year:\"numeric\", month:\"long\", day:\"numeric\"}),\r\n        }\r\n      },\r\n    }\r\n  },\r\n  watch: {\r\n    companies() {\r\n      this.setPages();\r\n    },\r\n  },\r\n  created() {\r\n    this.setPages();\r\n  },\r\n  filters: {\r\n    trimWords(value) {\r\n      return value.split(\" \").splice(0, 20).join(\" \") + \"...\";\r\n    },\r\n  },\r\n  methods: {\r\n    editdata (data){\r\n\r\n      document.getElementById('id').value= data.id\r\n      document.getElementById('customername').value=data.name;\r\n      document.getElementById('companyname').value=data.company;\r\n      document.getElementById('leadsscore').value=data.score;\r\n      document.getElementById('phone').value=data.phone;\r\n      document.getElementById('location').value=data.location;\r\n      document.getElementById('date').value=data.date;\r\n    },\r\n    async updateAgent () {\r\n\r\n      this.errors = []\r\n\r\n      if (!document.getElementById('editEmail').value) {\r\n        this.errors.push('Email is required.');\r\n      } else if (!this.validEmail(document.getElementById('editEmail').value)) {\r\n        this.errors.push('Valid email is required.');\r\n      }\r\n\r\n      if (!document.getElementById('editFirstName').value) {\r\n        this.errors.push('First Name is required.');\r\n      }\r\n\r\n      if (!document.getElementById('editLastName').value) {\r\n        this.errors.push('Last Name is required.');\r\n      }\r\n\r\n      if (!document.getElementById('editLanguage').value) {\r\n        this.errors.push('Language is required.');\r\n      }\r\n\r\n      if (!document.getElementById('editStatus').value) {\r\n        this.errors.push('Status is required.');\r\n      }\r\n\r\n      if (!document.getElementById('editPhoneNumber').value) {\r\n        this.errors.push('Phone is required.');\r\n      }\r\n\r\n      if(this.validPhone(document.getElementById('editPhoneNumber').value) === false && document.getElementById('editPhoneNumber').value !== ''){\r\n        this.errors.push('Please, write a valid phone number!');\r\n      }\r\n\r\n      if (!document.getElementById('editDepartment').value) {\r\n        this.errors.push('Department is required.');\r\n      }\r\n\r\n      if (!document.getElementById('editBirthDate').value) {\r\n        this.errors.push('Birth date is required.');\r\n      }\r\n\r\n      if (!document.getElementById('editAddress').value) {\r\n        this.errors.push('Address is required.');\r\n      }\r\n\r\n      if (!document.getElementById('editAgentNumber').value && document.getElementById('editStatus').value === 5) {\r\n        this.errors.push('Agent Number is required.');\r\n      }\r\n\r\n      if ((!document.getElementById('editLicensed').value && document.getElementById('editStatus').value === 5) || !document.getElementById('editLicensed').value) {\r\n        this.errors.push('Insurance Licensed? is required.');\r\n      }\r\n\r\n      if ((!document.getElementById('editLicensed').value && document.getElementById('editStatus').value === 5) /*|| (!this.agentData.licenseNumber && document.getElementById('editLicensed').value === 1)*/) {\r\n        this.errors.push('License number is required.');\r\n      }\r\n\r\n      if (!this.errors.length) {\r\n        const data = {\r\n          username: '',\r\n          email: document.getElementById('editEmail').value,\r\n          firstName: document.getElementById('editFirstName').value,\r\n          lastName: document.getElementById('editLastName').value,\r\n          language: document.getElementById('editLanguage').value,\r\n          status: document.getElementById('editStatus').value,\r\n          phoneNumber: document.getElementById('editPhoneNumber').value,\r\n          departmentID: document.getElementById('editDepartment').value,\r\n          state: document.getElementById('editState').value,\r\n          birthDate: document.getElementById('editBirthDate').value,\r\n          address: document.getElementById('editAddress').value,\r\n          country: document.getElementById('editCountry').value,\r\n          postalCode: document.getElementById('editPostalCode').value,\r\n          interviewDate: document.getElementById('editInterview').value,\r\n          agentNumber: document.getElementById('editAgentNumber').value,\r\n          createdBy: localStorage.getItem('email'),\r\n          isLicensed: document.getElementById('editLicensed').value,\r\n          licenseNumber: this.agentData.licenseNumber,\r\n          token: localStorage.getItem('jwt'),\r\n          userID: localStorage.getItem('id'),\r\n          agentID: document.getElementById('id').value\r\n        }\r\n\r\n        await axios\r\n            .put('/api/updateAgent', data)\r\n            .then(async response => {\r\n              console.log(response)\r\n              if (response) {\r\n                document.getElementById('closemodal').click();\r\n                await Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Success',\r\n                  text: 'Agent update successfully!'\r\n                });\r\n              }\r\n            })\r\n            .catch(async error => {\r\n              if (error.response) {\r\n\r\n                if(error.response.data.detail === 'Your session is expired!'){\r\n                  this.$router.push('logout')\r\n                }\r\n\r\n                let list = '';\r\n                for (const property in error.response.data) {\r\n                  this.errors.push(`${property}: ${error.response.data[property]}`)\r\n                  list += '\\n' + '<b>' + error.response.data[property] + '</b>';\r\n                }\r\n\r\n                await Swal.fire({\r\n                  title: \"Please check the following: \" + list,\r\n                  icon: 'warning',\r\n                  confirmButtonClass: \"btn btn-info\",\r\n                  buttonsStyling: false,\r\n                  showCloseButton: true,\r\n                });\r\n\r\n              } else if (error.message) {\r\n                this.errors.push('Something was wrong, please contact your SysAdmin.')\r\n              }\r\n            })\r\n      } else {\r\n        let list = '';\r\n        for (let i = 0; i < this.errors.length; i++)\r\n          list += '\\n' + '<b>' + this.errors[i] + '</b>';\r\n\r\n        await Swal.fire({\r\n          title: \"Please complete the form! \" + list,\r\n          icon: 'warning',\r\n          confirmButtonClass: \"btn btn-info\",\r\n          buttonsStyling: false,\r\n          showCloseButton: true,\r\n        });\r\n      }\r\n    },\r\n    addNewAgentModal () {\r\n      this.resetAgentData()\r\n      document.getElementById(\"addform\").reset();\r\n      document.getElementById('agentModalLabel').innerHTML=\"Add Agent\";\r\n      document.getElementById('add-btn').style.display='block';\r\n      document.getElementById('edit-btn').style.display='none';\r\n    },\r\n    async createAgent () {\r\n      this.errors = []\r\n\r\n      if (!this.agentData.email) {\r\n        this.errors.push('Email is required.');\r\n      } else if (!this.validEmail(this.agentData.email)) {\r\n        this.errors.push('Valid email is required.');\r\n      }\r\n\r\n      if (!this.agentData.firstName) {\r\n        this.errors.push('First Name is required.');\r\n      }\r\n\r\n      if (!this.agentData.lastName) {\r\n        this.errors.push('Last Name is required.');\r\n      }\r\n\r\n      if (!this.agentData.language) {\r\n        this.errors.push('Language is required.');\r\n      }\r\n\r\n      if (!this.agentData.status) {\r\n        this.errors.push('Status is required.');\r\n      }\r\n\r\n      if (!this.agentData.phone) {\r\n        this.errors.push('Phone is required.');\r\n      }\r\n\r\n      if(this.validPhone(this.agentData.phone) === false && this.agentData.phone !== ''){\r\n        this.errors.push('Please, write a valid phone number!');\r\n      }\r\n\r\n      if (!this.agentData.department) {\r\n        this.errors.push('Department is required.');\r\n      }\r\n\r\n      if (!this.agentData.birthDate) {\r\n        this.errors.push('Birth date is required.');\r\n      }\r\n\r\n      if (!this.agentData.address) {\r\n        this.errors.push('Address is required.');\r\n      }\r\n\r\n      if (!this.agentData.agentNumber && this.agentData.status === 5) {\r\n        this.errors.push('Agent Number is required.');\r\n      }\r\n\r\n      if ((!this.agentData.insuranceLicense && this.agentData.status === 5) || !this.agentData.insuranceLicense) {\r\n        this.errors.push('is Insurance Licensed? is required.');\r\n      }\r\n\r\n      if ((!this.agentData.licenseNumber && this.agentData.status === 5) || (!this.agentData.licenseNumber && this.agentData.insuranceLicense === 1)) {\r\n        this.errors.push('License number is required.');\r\n      }\r\n\r\n      if(!this.errors.length) {\r\n        const data = {\r\n          username:  '',\r\n          email:  this.agentData.email,\r\n          firstName:  this.agentData.firstName,\r\n          lastName:  this.agentData.lastName,\r\n          language:  this.agentData.language,\r\n          status:  this.agentData.status,\r\n          phoneNumber:  this.agentData.phone,\r\n          departmentID:  this.agentData.department,\r\n          state:  this.agentData.state,\r\n          birthDate:  this.agentData.birthDate,\r\n          address:  this.agentData.address,\r\n          country:  this.agentData.country,\r\n          postalCode:  this.agentData.zipCode,\r\n          interviewDate:  this.agentData.interview,\r\n          agentNumber:  this.agentData.agentNumber,\r\n          createdBy:  localStorage.getItem('email'),\r\n          isLicensed:  this.agentData.insuranceLicense,\r\n          licenseNumber: this.agentData.licenseNumber,\r\n          token: localStorage.getItem('jwt'),\r\n          userID: localStorage.getItem('id')\r\n        }\r\n\r\n        await axios\r\n            .post('/api/createAgent', data)\r\n            .then(async response => {\r\n              document.getElementById(\"addform\").reset();\r\n              if (response.data['ID'] !== null) {\r\n                document.getElementById('closemodal').click();\r\n                await Swal.fire({\r\n                  icon: 'success',\r\n                  title: 'Success',\r\n                  text: 'Agent created successfully!'\r\n                });\r\n              }\r\n            })\r\n            .catch(async error => {\r\n              if (error.response) {\r\n                let list = '';\r\n                for (const property in error.response.data) {\r\n                  this.errors.push(`${property}: ${error.response.data[property]}`)\r\n                  list += '\\n' + '<b>' + error.response.data[property] + '</b>';\r\n                }\r\n\r\n                await Swal.fire({\r\n                  title: \"Please check the following: \" + list,\r\n                  icon: 'warning',\r\n                  confirmButtonClass: \"btn btn-info\",\r\n                  buttonsStyling: false,\r\n                  showCloseButton: true,\r\n                });\r\n\r\n              } else if (error.message) {\r\n                this.errors.push('Something was wrong, please contact your SysAdmin.')\r\n              }\r\n            })\r\n      } else {\r\n        let list = '';\r\n        for (let i = 0; i < this.errors.length; i++)\r\n          list += '\\n' + '<b>' + this.errors[i]+ '</b>';\r\n\r\n        await Swal.fire({\r\n          title: \"Please complete the form! \" + list,\r\n          icon: 'warning',\r\n          confirmButtonClass: \"btn btn-info\",\r\n          buttonsStyling: false,\r\n          showCloseButton: true,\r\n        });\r\n      }\r\n    },\r\n    async getDepartments () {\r\n\r\n      await axios\r\n          .post('/api/getDepartments')\r\n          .then(response => {\r\n            console.log(response);\r\n          })\r\n          .catch(error => {\r\n            if (error.response) {\r\n              Swal.fire(\"Oops!\", \"Something was wrong, please contact your SysAdmin.\", \"error\")\r\n            }\r\n          })\r\n    },\r\n    async getUserInfo (id) {\r\n      document.getElementById('edit-btn').style.display='block';\r\n      document.getElementById('add-btn').style.display='none'\r\n      document.getElementById('agentModalLabel').innerHTML=\"Edit Agent\"\r\n\r\n      const data = {\r\n        token: localStorage.getItem('jwt'),\r\n        ID: id\r\n      }\r\n\r\n      let agentInfo;\r\n\r\n      await axios\r\n          .post('/api/getUser', data)\r\n          .then(response => {\r\n            agentInfo=response.data\r\n            this.setAgentData(agentInfo);\r\n            document.getElementById('id').value=agentInfo.ID\r\n            document.getElementById('editEmail').value=agentInfo.email;\r\n            document.getElementById('editFirstName').value=agentInfo.firstName;\r\n            document.getElementById('editLastName').value=agentInfo.lastName;\r\n            document.getElementById('editLanguage').value=agentInfo.language;\r\n            document.getElementById('editStatus').value=agentInfo.status\r\n            document.getElementById('editPhoneNumber').value= agentInfo.phoneNumber;\r\n            document.getElementById('editDepartment').value=agentInfo.departmentID;\r\n            document.getElementById('editBirthDate').value=agentInfo.dateOfBirth;\r\n            document.getElementById('editAddress').value=agentInfo.address;\r\n            document.getElementById('editState').value=agentInfo.state;\r\n            document.getElementById('editCountry').value=agentInfo.country;\r\n            document.getElementById('editPostalCode').value=agentInfo.postalCode;\r\n            document.getElementById('editAgentNumber').value=agentInfo.agentNumber;\r\n            document.getElementById('editCreatedBy').value=agentInfo.createdBy;\r\n            document.getElementById('editLicensed').value=agentInfo.isLicensed;\r\n            // document.getElementById('editInterview').value=agentInfo.interviewDate;\r\n          })\r\n          .catch(error => {\r\n            if (error.response) {\r\n              Swal.fire(\"Oops!\", \"Something was wrong, please contact your SysAdmin.\", \"error\")\r\n            }\r\n          })\r\n    },\r\n    validEmail: function (email) {\r\n      const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(email.trim());\r\n    },\r\n    validPhone: function (phone) {\r\n      return /^(\\+{0,})(\\d{0,})([(]{1}\\d{1,3}[)]{0,}){0,}(\\s?\\d+|\\+\\d{2,3}\\s{1}\\d+|\\d+){1}[\\s|-]?\\d+([\\s|-]?\\d+){1,2}(\\s){0,}$/gm.test(phone);\r\n    },\r\n    formatDate: function (date, format){\r\n      date = moment(date).format(format)\r\n      return date;\r\n    },\r\n    formatPhone: function(phone, flag=0) {\r\n\r\n      // if flag == 1 put value in phone Edit\r\n      phone = phone.replace(/\\D/g, '')\r\n\r\n      if(phone !== undefined) {\r\n        if(phone.length > 10) {\r\n          phone = phone.substring(1)\r\n        }\r\n        const x = phone.match(/(\\d{0,3})(\\d{0,3})(\\d{0,4})/);\r\n        phone = !x[2] ? x[1] : '(' + x[1] + ') ' + x[2] + (x[3] ? '-' + x[3] : '');\r\n\r\n      } else {\r\n        phone = ''\r\n      }\r\n\r\n      if(flag !== 1){\r\n        return phone;\r\n      }else{\r\n        document.getElementById('editPhoneNumber').value = phone;\r\n      }\r\n    },\r\n    setAgentData: function (data) {\r\n      this.agentData.email=data.email;\r\n      this.agentData.firstName=data.firstName;\r\n      this.agentData.lastName=data.lastName;\r\n      this.agentData.language=data.language;\r\n      this.agentData.status=data.status\r\n      this.agentData.phone=data.phoneNumber;\r\n      this.agentData.department=data.departmentID\r\n      this.agentData.birthDate= this.formatDate(data.dateOfBirth, 'DD MM, YYYY');\r\n      this.agentData.interview= this.formatDate(data.interviewDate, 'm-d-y H:i K');\r\n      this.agentData.address=data.address;\r\n      this.agentData.state=data.state;\r\n      this.agentData.country=data.country;\r\n      this.agentData.zipCode=data.postalCode;\r\n      this.agentData.agentNumber=data.agentNumber;\r\n      this.agentData.createdBy=data.createdBy;\r\n      this.agentData.insuranceLicense=data.isLicensed;\r\n    },\r\n    resetAgentData: function(){\r\n      this.agentData =\r\n          {username: '',\r\n            email: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            language: '',\r\n            status: '',\r\n            phone: '',\r\n            department: '',\r\n            state: '',\r\n            birthDate: '',\r\n            address: '',\r\n            country: '',\r\n            zipCode: '',\r\n            interview: '',\r\n            agentNumber: '',\r\n            createdBy: '',\r\n            insuranceLicense: '',\r\n            licenseNumber: ''\r\n          }\r\n    },\r\n    async updateAgentList () {\r\n\r\n      let validate = true;\r\n      let errors = [];\r\n      let filterLanguage = document.getElementById(\"filterLanguage\").value;\r\n      let filterKeyword = document.getElementById(\"filterKeyword\").value;\r\n      let filterLicensed = document.getElementById(\"filterLicensed\").value;\r\n      let filterNotes = document.getElementById(\"filterNotes\").value;\r\n      let filterFromDate = document.getElementById(\"filterFromDate\").value;\r\n      let filterToDate = document.getElementById(\"filterToDate\").value;\r\n      let isActive = document.querySelector('#isActive').checked;\r\n\r\n\r\n      if(isActive === true) {\r\n        this.data.searchValues.isActive = 1\r\n      } else {\r\n        this.data.searchValues.isActive = 2\r\n      }\r\n\r\n      if (filterLanguage !== '' && (filterLanguage === '1' || filterLanguage === '2')){\r\n        this.data.searchValues.language = filterLanguage;\r\n      }\r\n\r\n      if (filterKeyword !== '' && filterKeyword.length >= 3) {\r\n        this.data.searchValues.keyword = filterKeyword;\r\n      } else if (filterKeyword !== '' && filterKeyword.length < 3) {\r\n        errors.push('Keyword search should have 3 or more characters!')\r\n        validate = false;\r\n      }\r\n\r\n      if(filterLicensed !== ''){\r\n        this.data.searchValues.licensed = filterLicensed;\r\n      }\r\n\r\n      if (filterNotes !== '' && filterNotes.length >= 3) {\r\n        this.data.searchValues.noteSearch = filterNotes;\r\n      }else if(filterNotes !== '' && filterNotes.length < 3) {\r\n        errors.push('Notes search should have 3 or more characters!')\r\n        validate = false;\r\n      }\r\n\r\n      var start = moment(this.formatDate(filterFromDate, 'YYYY-MM-DD'));\r\n      var end = moment(this.formatDate(filterToDate, 'YYYY-MM-DD'));\r\n      var days = end.diff(start, \"days\");\r\n\r\n      console.log(start)\r\n      console.log(end)\r\n\r\n      if(days <= 365){\r\n        this.data.searchValues.fromDate = filterFromDate;\r\n        this.data.searchValues.toDate = filterToDate;\r\n      } else {\r\n        errors.push(\"From Date and To Date (range) couldn't be larger than a year (365 days)!\");\r\n        validate = false;\r\n      }\r\n\r\n      const data = {\r\n        token: localStorage.getItem('jwt'),\r\n        isProspect: 0,\r\n        searchValues: this.data.searchValues,\r\n        userEmail: localStorage.getItem('email'),\r\n        userID: localStorage.getItem('id'),\r\n      }\r\n\r\n      if(validate){\r\n        axios\r\n            .post('/api/listAgents', data)\r\n            .then(response => {\r\n              this.list=response.data\r\n            })\r\n            .catch(error => {\r\n              if (error.response) {\r\n                // for (const property in error.response.data) {\r\n                // this.errors.push(`${property}: ${error.response.data[property]}`)\r\n                // }\r\n              } else if (error.message) {\r\n                this.errors.push('Something was wrong, please contact your SysAdmin.')\r\n                console.log(error.message)\r\n              }\r\n            })\r\n      }else{\r\n        let list = '';\r\n        for (var i = 0; i < errors.length; i+=1) {\r\n          list += errors[i] + ' \\n';\r\n        }\r\n\r\n        await Swal.fire(\"\" + list, '', 'info');\r\n\r\n      }\r\n\r\n    },\r\n    approveAgent (id) {\r\n\r\n      Swal.fire({\r\n        title: \"Are you sure?\",\r\n        text: \"This user will be approved to login into the system!\",\r\n        icon: \"warning\",\r\n        showCancelButton: true,\r\n        confirmButtonColor: \"#34c38f\",\r\n        cancelButtonColor: \"#f46a6a\",\r\n        confirmButtonText: \"Yes, approve!\",\r\n      }).then(async (result) => {\r\n        if (result.value) {\r\n\r\n          const data = {\r\n            token: localStorage.getItem('jwt'),\r\n            agentID: id,\r\n            userID: localStorage.getItem('id'),\r\n            searchValues: this.data.searchValues,\r\n          }\r\n\r\n          await axios\r\n              .put('/api/approveUser', data)\r\n              .then(response => {\r\n                this.departmentList = response.data\r\n                Swal.fire(\"Approved!\", \"This user has been approved.\", \"success\");\r\n              })\r\n              .catch(error => {\r\n                if (error.response) {\r\n                  Swal.fire(\"Oops!\", \"Departments could not be loaded, please contact your SysAdmin.\", \"error\")\r\n                }\r\n              })\r\n\r\n          await axios\r\n              .post('/api/pendingApprovalAgents', data)\r\n              .then(response => {\r\n                this.list=response.data\r\n              })\r\n              .catch(error => {\r\n                if (error.response) {\r\n                  // for (const property in error.response.data) {\r\n                  // this.errors.push(`${property}: ${error.response.data[property]}`)\r\n                  // }\r\n                } else if (error.message) {\r\n                  this.errors.push('Something was wrong, please contact your SysAdmin.')\r\n                }\r\n              })\r\n        }\r\n      });\r\n      console.log('update: ' + id);\r\n    },\r\n    async getAgentList() {\r\n\r\n      const data = {\r\n        token: localStorage.getItem('jwt'),\r\n        searchValues: this.data.searchValues,\r\n      }\r\n\r\n      await axios\r\n          .post('/api/pendingApprovalAgents', data)\r\n          .then(response => {\r\n            this.list = response.data\r\n          })\r\n          .catch(error => {\r\n            if (error.response) {\r\n              // for (const property in error.response.data) {\r\n              // this.errors.push(`${property}: ${error.response.data[property]}`)\r\n              // }\r\n            } else if (error.message) {\r\n              this.errors.push('Something was wrong, please contact your SysAdmin.')\r\n            }\r\n          })\r\n    },\r\n    setPages() {\r\n      let numberOfPages = Math.ceil(this.list.length / this.perPage);\r\n      for (let index = 1; index <= numberOfPages; index++) {\r\n        this.pages.push(index);\r\n      }\r\n    },\r\n    paginate(companies) {\r\n      let page = this.page;\r\n      let perPage = this.perPage;\r\n      let from = page * perPage - perPage;\r\n      let to = page * perPage;\r\n      return companies.slice(from, to);\r\n    },\r\n  },\r\n  async mounted() {\r\n\r\n    const data = {\r\n      token: localStorage.getItem('jwt'),\r\n      searchValues: this.data.searchValues,\r\n    }\r\n\r\n    await axios\r\n        .post('/api/listDepartments', data)\r\n        .then(response => {\r\n          this.departmentList=response.data\r\n        })\r\n        .catch(error => {\r\n          if (error.response) {\r\n            Swal.fire(\"Oops!\", \"Departments could not be loaded, please contact your SysAdmin.\", \"error\")\r\n          }\r\n        })\r\n\r\n    await axios\r\n        .post('/api/listStatus', data)\r\n        .then(response => {\r\n          this.statusList=response.data\r\n        })\r\n        .catch(error => {\r\n          if (error.response) {\r\n            Swal.fire(\"Oops!\", \"Status could not be loaded, please contact your SysAdmin.\", \"error\")\r\n          }\r\n        })\r\n\r\n    await axios\r\n        .post('/api/pendingApprovalAgents', data)\r\n        .then(response => {\r\n          this.list=response.data\r\n          this.setPages();\r\n        })\r\n        .catch(error => {\r\n          if (error.response) {\r\n            // for (const property in error.response.data) {\r\n            // this.errors.push(`${property}: ${error.response.data[property]}`)\r\n            // }\r\n          } else if (error.message) {\r\n            this.errors.push('Something was wrong, please contact your SysAdmin.')\r\n          }\r\n        })\r\n\r\n    const checkAll = document.getElementById(\"checkAll\");\r\n\r\n    if (checkAll) {\r\n      checkAll.onclick = function () {\r\n        var checkboxes = document.querySelectorAll(\r\n            '.form-check-all input[type=\"checkbox\"]'\r\n        );\r\n        if (checkAll.checked == true) {\r\n          checkboxes.forEach(function (checkbox) {\r\n            checkbox.checked = true;\r\n            checkbox.closest(\"tr\").classList.add(\"table-active\");\r\n          });\r\n        } else {\r\n          checkboxes.forEach(function (checkbox) {\r\n            checkbox.checked = false;\r\n            checkbox.closest(\"tr\").classList.remove(\"table-active\");\r\n          });\r\n        }\r\n      };\r\n    }\r\n  },\r\n  computed: {\r\n    displayedPosts() {\r\n      return this.paginate(this.list);\r\n    },\r\n    resultQuery() {\r\n      if (this.searchQuery) {\r\n        console.log()\r\n        const search = this.searchQuery.toLowerCase();\r\n        return this.displayedPosts.filter((data) => {\r\n          return (\r\n              data.address.toLowerCase().includes(search) ||\r\n              data.agentNumber.toLowerCase().includes(search) ||\r\n              data.city.toLowerCase().includes(search) ||\r\n              data.email.toLowerCase().includes(search) ||\r\n              data.phoneNumber.toLowerCase().includes(search) ||\r\n              data.firstName.toLowerCase().includes(search) ||\r\n              data.lastName.toLowerCase().includes(search) ||\r\n              data.statusName.toLowerCase().includes(search)\r\n          );\r\n        });\r\n      } else {\r\n        return this.displayedPosts;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <Layout>\r\n    <PageHeader :title=\"title\" :items=\"items\"/>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12\">\r\n        <div class=\"card\" id=\"leadsList\">\r\n          <div class=\"card-header border-0\">\r\n            <div class=\"row g-4 align-items-center\">\r\n              <div class=\"col-sm-3\">\r\n                <div class=\"search-box\">\r\n                  <input\r\n                      type=\"text\"\r\n                      class=\"form-control search\"\r\n                      placeholder=\"Search for...\"\r\n                      v-model=\"searchQuery\"\r\n                  />\r\n                  <i class=\"ri-search-line search-icon\"></i>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-sm-auto ms-auto\">\r\n                <div class=\"hstack gap-2\">\r\n                  <div class=\"d-flex align-items-center gap-2\">\r\n                    <span class=\"text-muted flex-shrink-0\">Sort by: </span>\r\n\r\n                    <Multiselect\r\n                        class=\"form-control\"\r\n                        style=\"width: 130px\"\r\n                        v-model=\"value\"\r\n                        :close-on-select=\"true\"\r\n                        :searchable=\"true\"\r\n                        :create-option=\"true\"\r\n                        :options=\"[\r\n                      { value: 'name', label: 'Name' },\r\n                      { value: 'department', label: 'Department' },\r\n                      { value: 'status', label: 'Status' },\r\n                      { value: 'createDate', label: 'Create date' },\r\n                    ]\"\r\n                    />\r\n                  </div>\r\n                  <button type=\"button\" class=\"btn btn-soft-success add-btn\" href=\"#open-filters\" data-bs-toggle=\"modal\">\r\n                    <i class=\"ri-filter-line align-bottom me-1\"></i> Filters\r\n                  </button>\r\n                  <button type=\"button\" class=\"btn btn-soft-success add-btn\" id=\"create-btn\" data-bs-toggle=\"modal\" href=\"#agentModal\" @click=\"addNewAgentModal\">\r\n                    <i class=\"ri-add-line align-bottom me-1\"></i> Add Agent\r\n                  </button>\r\n                  <span class=\"dropdown\">\r\n                    <button\r\n                        class=\"btn btn-soft-primary btn-icon fs-14\"\r\n                        type=\"button\"\r\n                        id=\"dropdownMenuButton1\"\r\n                        data-bs-toggle=\"dropdown\"\r\n                        aria-expanded=\"false\"\r\n                    >\r\n                      <i class=\"ri-settings-4-line\"></i>\r\n                    </button>\r\n                    <ul\r\n                        class=\"dropdown-menu\"\r\n                        aria-labelledby=\"dropdownMenuButton1\"\r\n                    >\r\n                      <li><a class=\"dropdown-item\" href=\"#\">Copy</a></li>\r\n                      <li>\r\n                        <a class=\"dropdown-item\" href=\"#\">Move to pipline</a>\r\n                      </li>\r\n                      <li>\r\n                        <a class=\"dropdown-item\" href=\"#\">Add to exceptions</a>\r\n                      </li>\r\n                      <li>\r\n                        <a class=\"dropdown-item\" href=\"#\"\r\n                        >Switch to common form view</a\r\n                        >\r\n                      </li>\r\n                      <li>\r\n                        <a class=\"dropdown-item\" href=\"#\"\r\n                        >Reset form view to default</a\r\n                        >\r\n                      </li>\r\n                    </ul>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Table Head -->\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table align-middle table-nowrap mb-0\">\r\n              <thead class=\"table-light\">\r\n              <tr>\r\n                <th scope=\"col\" style=\"width: 50px\">\r\n                  <div class=\"form-check\">\r\n                    <input\r\n                        class=\"form-check-input\"\r\n                        type=\"checkbox\"\r\n                        id=\"checkAll\"\r\n                        value=\"option\"\r\n                    />\r\n                  </div>\r\n                </th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Department</th>\r\n                <th scope=\"col\">Email</th>\r\n                <th scope=\"col\">Phone</th>\r\n                <th scope=\"col\">Create Date</th>\r\n                <th scope=\"col\">Status</th>\r\n                <th scope=\"col\">Actions</th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              <tr v-for=\"(data, index) of resultQuery\" :key=\"index\">\r\n                <td>\r\n                  <div class=\"form-check\">\r\n                    <input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"cardtableCheck01\">\r\n                    <label class=\"form-check-label\" for=\"cardtableCheck01\"></label>\r\n                  </div>\r\n                </td>\r\n                <td>{{ data.firstName }} {{ data.lastName }}</td>\r\n                <td>{{ data.departmentName }}</td>\r\n                <td>{{ data.email }}</td>\r\n                <td>{{ formatPhone(data.phoneNumber) }}</td>\r\n                <td> {{ formatDate(data.createdOn, 'MMMM Do YYYY, h:mmA') }} </td>\r\n                <td><a href=\"javascript:void(0);\" class=\"link-success\">New Agent</a></td>\r\n                <td>\r\n                  <ul class=\"list-inline hstack gap-2 mb-0\">\r\n                    <li class=\"list-inline-item\" title=\"Approve Agent\" @click=\"approveAgent(data.ID)\">\r\n                      <a class=\"edit-item-btn\" href=\"javascript:void(0);\"><i class=\"ri-checkbox-fill align-bottom text-muted\"></i></a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\" data-bs-toggle=\"modal\" href=\"#agentModal\" data-bs-trigger=\"hover\" data-bs-placement=\"top\" title=\"Edit\" @click=\"getUserInfo(data.ID)\">\r\n                      <a class=\"edit-item-btn\" href=\"javascript:void(0);\"><i class=\"ri-pencil-fill align-bottom text-muted\"></i></a>\r\n                    </li>\r\n                    <li class=\"list-inline-item\" data-bs-toggle=\"tooltip\" data-bs-trigger=\"hover\" data-bs-placement=\"top\" title=\"Delete\">\r\n                      <a class=\"remove-item-btn\" data-bs-toggle=\"modal\" href=\"javascript:void(0);\">\r\n                        <i class=\"ri-delete-bin-fill align-bottom text-muted\"></i>\r\n                      </a>\r\n                    </li>\r\n                  </ul>\r\n                </td>\r\n              </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div class=\"d-flex justify-content-end mt-3\">\r\n            <div class=\"pagination-wrap hstack gap-2\">\r\n              <a\r\n                  class=\"page-item pagination-prev disabled\"\r\n                  href=\"#\"\r\n                  v-if=\"page != 1\"\r\n                  @click=\"page--\"\r\n              >\r\n                Previous\r\n              </a>\r\n              <ul class=\"pagination listjs-pagination mb-0\">\r\n                <li\r\n                    :class=\"{\r\n                      active: pageNumber == page,\r\n                      disabled: pageNumber == '...',\r\n                    }\"\r\n                    v-for=\"(pageNumber, index) in pages.slice(\r\n                      page - 1,\r\n                      page + 5\r\n                    )\"\r\n                    :key=\"index\"\r\n                    @click=\"page = pageNumber\"\r\n                >\r\n                  <a class=\"page\" href=\"#\">{{ pageNumber }}</a>\r\n                </li>\r\n              </ul>\r\n              <a\r\n                  class=\"page-item pagination-next\"\r\n                  href=\"#\"\r\n                  @click=\"page++\"\r\n                  v-if=\"page < pages.length\"\r\n              >\r\n                Next\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <!--end col-->\r\n    </div>\r\n    <!--end row-->\r\n\r\n    <!--  Add agent modal  -->\r\n    <div class=\"modal zoomIn\" id=\"agentModal\" tabindex=\"-1\" aria-labelledby=\"agentModalLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog modal-dialog-centered modal-lg\" style=\"max-width: 1000px;\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header bg-light p-3\">\r\n            <h5 class=\"modal-title\" id=\"agentModalLabel\"></h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\r\n                    id=\"close-modal\"></button>\r\n          </div>\r\n          <form id=\"addform\" @submit.prevent=\"\">\r\n            <div class=\"modal-body\">\r\n              <input type=\"hidden\" id=\"id\"/>\r\n              <div class=\"row g-3\">\r\n                <div class=\"col-lg-12\">\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editEmail\" class=\"form-label\">Email</label>\r\n                      <input type=\"text\" id=\"editEmail\" class=\"form-control mb-2\" placeholder=\"Enter Email\" v-model=\"agentData.email\" required>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editCreatedBy\" class=\"form-label\">Created By</label>\r\n                      <input type=\"text\" id=\"editCreatedBy\" class=\"form-control mb-2\" disabled v-model=\"this.agentData.createdBy\">\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editFirstName\" class=\"form-label\">First Name</label>\r\n                      <input type=\"text\" id=\"editFirstName\" class=\"form-control mb-2\" placeholder=\"Enter First Name\" v-model=\"this.agentData.firstName\" required>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editLastName\" class=\"form-label\">Last Name</label>\r\n                      <input type=\"text\" id=\"editLastName\" class=\"form-control mb-2\" placeholder=\"Enter Last Name\" v-model=\"this.agentData.lastName\" required>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editLanguage\" class=\"form-label\">Language</label>\r\n                      <select class=\"form-select mb-2\" aria-label=\"Language\" id=\"editLanguage\" v-model=\"this.agentData.language\" required>\r\n                        <option value=\"1\" selected>English</option>\r\n                        <option value=\"2\">Spanish</option>\r\n                      </select>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editStatus\" class=\"form-label\">Status</label>\r\n                      <select class=\"form-select mb-2\" aria-label=\"Status\" id=\"editStatus\" v-model=\"this.agentData.status\">\r\n                        <option v-for=\"(status, statusIndex) of statusList\" :key=\"statusIndex\" v-bind:value=\"status.statusID\">{{ status.name }}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editPhoneNumber\" class=\"form-label\">Phone</label>\r\n                      <input type=\"text\" id=\"editPhoneNumber\" class=\"form-control mb-2\" placeholder=\"Phone number\" required v-model=\"this.agentData.phone\"/>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editDepartment\" class=\"form-label\">Department</label>\r\n                      <select class=\"form-select mb-2\" aria-label=\"Department\" id=\"editDepartment\" name=\"editDepartment\"\r\n                              v-model=\"this.agentData.department\" v-if=\"(departmentList.length > 1)\">\r\n                        <option v-for=\"(department, index) of departmentList\"  :key=\"index\"\r\n                                v-bind:value=\"department.departmentID\">{{ department.name }}\r\n                        </option>\r\n                      </select>\r\n                      <select class=\"form-select mb-2\" aria-label=\"Department\" id=\"editDepartment\" name=\"editDepartment\"\r\n                              v-model=\"this.agentData.department\" v-else>\r\n                        <option v-bind:value=\"departmentList.departmentID\">{{ departmentList.name }}</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editAddress\" class=\"form-label\">Address</label>\r\n                      <input type=\"text\" id=\"editAddress\" class=\"form-control mb-2\" placeholder=\"Enter Address\" required v-model=\"this.agentData.address\"/>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editBirthDate\" class=\"form-label mb-2\">Birth Date</label>\r\n                      <flat-pickr\r\n                          placeholder=\"Select Birth Date\"\r\n                          v-model=\"this.agentData.birthDate\"\r\n                          :config=\"timeConfig\"\r\n                          class=\"form-control flatpickr-input\"\r\n                          id=\"editBirthDate\"></flat-pickr>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editState\" class=\"form-label\">State</label>\r\n                      <input type=\"text\" id=\"editState\" class=\"form-control mb-2\" placeholder=\"Enter State\" required v-model=\"this.agentData.state\"/>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editCountry\" class=\"form-label\">Country</label>\r\n                      <input type=\"text\" id=\"editCountry\" class=\"form-control mb-2\" placeholder=\"Enter Country\" required v-model=\"this.agentData.country\"/>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editPostalCode\" class=\"form-label\">Postal code</label>\r\n                      <input type=\"text\" id=\"editPostalCode\" class=\"form-control mb-2\" placeholder=\"Enter Address\" required v-model=\"this.agentData.zipCode\"/>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editInterview\" class=\"form-label mb-2\">Interview</label>\r\n                      <flat-pickr\r\n                          placeholder=\"Select Interview date/time\"\r\n                          v-model=\"this.agentData.interview\"\r\n                          :config=\"dateTimeConfig\"\r\n                          class=\"form-control flatpickr-input\"\r\n                          id=\"editInterview\" data-enable-time></flat-pickr>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"row\">\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editAgentNumber\" class=\"form-label\">Agent Number</label>\r\n                      <input type=\"text\" id=\"editAgentNumber\" class=\"form-control mb-2\" placeholder=\"Enter Agent Number\" required v-model=\"this.agentData.agentNumber\"/>\r\n                    </div>\r\n                    <div class=\"col-lg-6\">\r\n                      <label for=\"editLicensed\" class=\"form-label\">Insurance Licensed?</label>\r\n                      <select class=\"form-select mb-2\" aria-label=\"Department\" id=\"editLicensed\" v-model=\"this.agentData.insuranceLicense\">\r\n                        <option value=\"0\">No</option>\r\n                        <option value=\"1\">Yes</option>\r\n                      </select>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <!--end col-->\r\n              </div>\r\n              <!--end row-->\r\n            </div>\r\n\r\n            <div class=\"modal-footer\">\r\n              <div class=\"hstack gap-2 justify-content-end\">\r\n                <button type=\"button\" class=\"btn btn-light\" id=\"closemodal\" data-bs-dismiss=\"modal\">Close</button>\r\n                <button type=\"submit\" class=\"btn btn-success\" id=\"add-btn\" @click=\"createAgent\">Save</button>\r\n                <button type=\"button\" class=\"btn btn-success\" id=\"edit-btn\" @click=\"updateAgent\">Update</button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Filters Modal -->\r\n    <div id=\"open-filters\" class=\"modal fade\" tabindex=\"-1\" aria-labelledby=\"myModalLabel\" aria-hidden=\"true\" style=\"display: none;\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"myModalLabel\">Filters</h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"> </button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-12\">\r\n                <label for=\"filterKeyword\" class=\"form-label\">Keyword</label>\r\n                <input type=\"text\" id=\"filterKeyword\" name=\"filterKeyword\" class=\"form-control mb-2\" placeholder=\"Enter Keyword\" v-model=\"this.data.searchValues.keyword\">\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6\">\r\n                <label for=\"filterLicensed\" class=\"form-label\">Licensed agents?</label>\r\n                <select class=\"form-select mb-2\" aria-label=\"Licensed Agents?\" id=\"filterLicensed\" name=\"filterLicensed\" v-model=\"this.data.searchValues.licensed\">\r\n                  <option value=\"1\" selected>Both</option>\r\n                  <option value=\"2\">Yes</option>\r\n                  <option value=\"3\">No</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <div class=\"form-check form-switch form-switch-lg\" dir=\"ltr\" style=\"margin: 0;position: absolute;top: 50%;-ms-transform: translateY(-50%);transform: translateY(-50%);\">\r\n                  <input type=\"checkbox\" class=\"form-check-input\" id=\"isActive\" checked=\"\">\r\n                  <label class=\"form-check-label\" for=\"isActive\">Active</label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6\">\r\n                <label for=\"editLanguage\" class=\"form-label\">Language</label>\r\n                <select class=\"form-select mb-2\" aria-label=\"Language\" id=\"filterLanguage\" name=\"filterLanguage\" v-model=\"this.data.searchValues.language\">\r\n                  <option value=\"3\" selected>Both</option>\r\n                  <option value=\"1\" selected>English</option>\r\n                  <option value=\"2\">Spanish</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <label for=\"editStatus\" class=\"form-label\">Search by Notes</label>\r\n                <input type=\"text\" id=\"filterNotes\" name=\"filterNotes\" class=\"form-control mb-2\" placeholder=\"Enter note\" v-model=\"this.data.searchValues.noteSearch\">\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-lg-6\">\r\n                <label for=\"filterFromDate\" class=\"form-label\"> From date </label>\r\n                <flat-pickr\r\n                    v-model=\"this.data.searchValues.fromDate\"\r\n                    :config=\"humanfriendlyConfig\"\r\n                    class=\"form-control flatpickr-input\"\r\n                    id=\"filterFromDate\"\r\n                    name=\"filterFromDate\"\r\n                ></flat-pickr>\r\n              </div>\r\n              <div class=\"col-lg-6\">\r\n                <label for=\"filterToDate\" class=\"form-label\"> To Date </label>\r\n                <flat-pickr\r\n                    v-model=\"this.data.searchValues.toDate\"\r\n                    :config=\"humanfriendlyConfig\"\r\n                    class=\"form-control flatpickr-input\"\r\n                    id=\"filterToDate\"\r\n                    name=\"filterToDate\"\r\n                ></flat-pickr>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\">\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-light\" data-bs-dismiss=\"modal\">Close</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"updateAgentList()\">Search</button>\r\n          </div>\r\n\r\n        </div><!-- /.modal-content -->\r\n      </div><!-- /.modal-dialog -->\r\n    </div><!-- /.modal -->\r\n\r\n\r\n  </Layout>\r\n</template>\r\n<style>\r\n.row-spacer{\r\n  margin-bottom: 10px;\r\n}\r\n</style>"]}]}