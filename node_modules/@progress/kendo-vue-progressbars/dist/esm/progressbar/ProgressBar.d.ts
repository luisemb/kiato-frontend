import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ProgressBarProps } from './interfaces/ProgressBarProps';
/**
 * @hidden
 */
export interface ProgressBarState {
    _progressStatus?: any;
    _progressStatusWrap?: any;
    animationFrame: any;
    prevValue: number;
    v3: boolean;
}
/**
 * @hidden
 */
export interface ProgressBarComputed {
    [key: string]: any;
    wrapperClass: object;
    isVertical: boolean;
    animationDuration: number;
}
/**
 * @hidden
 */
export interface ProgressBarMethods {
    [key: string]: any;
    focus: (e: any) => void;
    toggleIfApplicable: () => void;
    handleClick: (event: any) => void;
}
/**
 * @hidden
 */
export interface ProgressBarData {
    currentActive: boolean;
}
/**
 * @hidden
 */
export interface ProgressBarAll extends Vue2type, ProgressBarMethods, ProgressBarData, ProgressBarComputed, ProgressBarState {
}
/**
 * @hidden
 */
declare let ProgressBarVue2: ComponentOptions<ProgressBarAll, DefaultData<ProgressBarData>, DefaultMethods<ProgressBarAll>, ProgressBarComputed, RecordPropsDefinition<ProgressBarProps>>;
/**
 * @hidden
 */
declare const ProgressBar: DefineComponent<ProgressBarProps, any, ProgressBarData, ProgressBarComputed, ProgressBarMethods, {}, {}, {}, string, ProgressBarProps, ProgressBarProps, {}>;
export { ProgressBar, ProgressBarVue2 };
