import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * Represents the props of the Kendo UI for Vue Hint component.
 */
export interface HintProps {
    /**
     * Represents the id of the Hint element.
     * The value should be also set to the editor's `ariaDescribedBy` property.
     */
    id?: string;
    /**
     * Specifies the alignment of the Hint text.
     *
     * The possible values are:
     * * (Default) `start`
     * * `end`
     */
    direction?: string;
}
/**
 * @hidden
 */
interface HintState {
}
/**
 * @hidden
 */
interface HintData {
}
/**
 * @hidden
 */
export interface HintMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface HintComputed {
    [key: string]: any;
    hintClassName: object;
}
/**
 * @hidden
 */
export interface HintAll extends HintMethods, HintState, HintData, HintComputed, Vue2type {
}
/**
 * @hidden
 */
declare const HintVue2: ComponentOptions<Vue2type, DefaultData<HintData>, DefaultMethods<HintAll>, HintComputed, RecordPropsDefinition<HintProps>>;
/**
 * @hidden
 */
declare let Hint: DefineComponent<HintProps, any, HintData, HintComputed, HintMethods, {}, {}, {}, string, HintProps, HintProps, {}>;
export { Hint, HintVue2 };
