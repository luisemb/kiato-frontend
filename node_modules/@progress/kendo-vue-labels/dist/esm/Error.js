// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { packageMetadata } from './package-metadata.js';
import { getDefaultSlots, validatePackage } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var ErrorVue2 = {
  name: 'KendoError',
  props: {
    id: String,
    direction: {
      type: String,
      default: 'start',
      validator: function validator(value) {
        return ['start', 'end'].includes(value);
      }
    }
  },
  created: function created() {
    validatePackage(packageMetadata);
  },
  computed: {
    errorClassName: function errorClassName() {
      return {
        'k-form-error': true,
        'k-text-start': this.$props.direction === 'start',
        'k-text-end': this.$props.direction === 'end'
      };
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      id: this.$props.id,
      attrs: this.v3 ? undefined : {
        id: this.$props.id,
        role: 'alert'
      },
      role: 'alert',
      "class": this.errorClassName
    }, [defaultSlots]);
  }
};
/**
 * @hidden
 */
var Error = ErrorVue2;
export { Error, ErrorVue2 };