import { Page } from '@progress/kendo-vue-data-tools';
import { VirtualScrollInterface } from './interfaces/VirtualScrollInterface';
import { DataItemWrapper } from './utils/main';
/**
 * @hidden
 */
export declare class RowHeightService {
    private total;
    private offsets;
    private heights;
    constructor(total: number, rowHeight: number, detailRowHeight: number, data?: DataItemWrapper[]);
    height(rowIndex: number): number;
    index(position: number): number | undefined;
    offset(rowIndex: number): number;
    totalHeight(): number;
}
/**
 * @hidden
 */
export declare class VirtualScrollFixed implements VirtualScrollInterface {
    table: HTMLTableElement | null;
    containerHeight: number;
    topCacheCount: number;
    attendedSkip: number;
    propsSkip: number;
    total: number;
    scrollableVirtual: boolean;
    realSkip: number;
    pageSize: number;
    PageChange: ((event: Page, evnet: any) => void) | null;
    tableBodyRef: any;
    fixedScroll: boolean;
    askedSkip: number | undefined;
    containerRef: any;
    tableTransform: string;
    rowHeightService?: RowHeightService;
    private scrollSyncing;
    private lastLoaded;
    private firstLoaded;
    private lastScrollTop;
    get container(): HTMLDivElement | null;
    constructor(_cached: boolean);
    translate(dY: number): void;
    changePage(skip: number, e: any): void;
    reset(): void;
    scrollHandler(e: any): void;
}
