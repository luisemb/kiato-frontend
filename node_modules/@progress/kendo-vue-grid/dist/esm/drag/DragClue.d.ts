import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => DragClueData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface DragClueData extends Vue2type {
    ref?: string;
    visible?: boolean;
    top?: number;
    left?: number;
    innerText?: string;
    status?: 'cancel' | 'plus';
}
/**
 * @hidden
 */
declare let DragClueVue2: ComponentOptions<Vue2type, DefaultData<DragClueData>, DefaultMethods<{}>, {}, RecordPropsDefinition<{}>>;
/**
 * @hidden
 */
declare const DragClue: DefineComponent<{}, any, DragClueData, {}, {}, {}, {}, {}, string, {}, {}, {}>;
export { DragClue, DragClueVue2 };
