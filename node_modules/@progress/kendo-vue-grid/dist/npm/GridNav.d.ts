import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
interface GridNavState {
}
/**
 * @hidden
 */
interface GridNavData {
}
/**
 * @hidden
 */
export interface GridNavMethods {
    [key: string]: any;
    onKeyDown: (event: any) => any;
    onFocus: (event: any) => any;
    onNavMount: (event: any) => any;
    onNavigationAction: (opitons: any) => any;
}
/**
 * @hidden
 */
export interface GridNavComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface GridNavAll extends GridNavMethods, GridNavState, GridNavData, GridNavComputed, Vue2type {
}
/**
 * @hidden
 */
declare const GridNavVue2: ComponentOptions<Vue2type, DefaultData<GridNavData>, DefaultMethods<GridNavAll>, GridNavComputed, RecordPropsDefinition<{}>>;
/**
 * @hidden
 */
declare const GridNav: DefineComponent<{}, any, GridNavData, GridNavComputed, GridNavMethods, {}, {}, {}, string, {}, {}, {}>;
export { GridNav, GridNavVue2 };
