import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ColumnResizerProps {
    key?: number;
    resize: (event: any, dragCue: Element, end: boolean) => void;
}
/**
 * @hidden
 */
export interface ColumnResizerMethods extends Vue2type {
    drag: (event: any) => void;
    release: (event: any) => void;
}
/**
 * @hidden
 */
export interface ColumnResizerState {
    element: any | null;
    draggable: any;
}
/**
 * @hidden
 */
export interface ColumnResizerAll extends ColumnResizerMethods, ColumnResizerState {
}
/**
 * @hidden
 */
declare let ColumnResizerVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<ColumnResizerAll>, {}, RecordPropsDefinition<ColumnResizerProps>>;
/**
 * @hidden
 */
declare const ColumnResizer: DefineComponent<ColumnResizerProps, any, {}, {}, ColumnResizerMethods, {}, {}, {}, string, ColumnResizerProps, ColumnResizerProps, {}>;
export { ColumnResizer, ColumnResizerVue2 };
