import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { GridCellProps } from '../interfaces/GridCellProps';
import { IntlService } from '@progress/kendo-vue-intl';
/**
 * @hidden
 */
export interface GridCellComputed {
    [key: string]: any;
    tdClass: object;
}
/**
 * @hidden
 */
export interface GridCellAll extends Vue2type, GridCellComputed {
    _intl: IntlService;
    triggerKeydown: (e: any) => void;
    triggerClick: () => void;
    triggerEdit: (dataItem: any) => void;
    triggerAdd: (dataItem: any) => void;
    triggerCancel: (dataItem: any) => void;
    triggerSave: (dataItem: any) => void;
    triggerRemove: (dataItem: any) => void;
    getKeyboardNavigationAttributes: (id: string) => any;
}
/**
 * @hidden
 */
declare let GridCellVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<GridCellAll>, {}, RecordPropsDefinition<GridCellProps>>;
/**
 * @hidden
 */
declare const GridCell: DefineComponent<GridCellProps, any, {}, {}, {}, {}, {}, {}, string, GridCellProps, GridCellProps, {}>;
export { GridCell, GridCellVue2 };
