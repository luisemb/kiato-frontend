import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
import { GridCellProps } from '../interfaces/GridCellProps';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface GridSelectionCellMethods extends Vue2type {
    triggerKeydown: (e: any) => void;
    handleOnChange: (event: any) => void;
    getKeyboardNavigationAttributes: (id: string) => any;
}
/**
 * @hidden
 */
export interface GridSelectionCellData {
    inputId: string;
}
/**
 * @hidden
 */
export interface GridSelectionCellComputed {
    [key: string]: any;
    tdClass: object;
}
/**
 * @hidden
 */
export interface GridSelectionCellAll extends GridSelectionCellMethods, GridSelectionCellData, GridSelectionCellComputed {
}
/**
 * @hidden
 */
declare let GridSelectionCellVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<GridSelectionCellMethods>, {}, RecordPropsDefinition<GridCellProps>>;
/**
 * @hidden
 */
declare const GridSelectionCell: DefineComponent<GridCellProps, any, GridSelectionCellData, {}, GridSelectionCellMethods, {}, {}, {}, string, GridCellProps, GridCellProps, {}>;
export { GridSelectionCell, GridSelectionCellVue2 };
