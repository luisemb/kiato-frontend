// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { getTemplate, getDefaultSlots } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var GridHeaderCellVue2 = {
  props: {
    field: String,
    title: String,
    sortable: [Boolean, Object],
    render: [Object, Function, String]
  },
  computed: {
    linkClass: function linkClass() {
      return {
        'k-link': true,
        '!k-cursor-default': !this.sortable
      };
    }
  },
  methods: {
    clickHandler: function clickHandler(event) {
      if (this.sortable) {
        this.$emit('headercellclick', event);
      }
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = getDefaultSlots(this);
    var renderTemplate = this.$props.render;
    var textInCell = this.$props.title || this.$props.field || "\xA0";
    var defaultRendering = getTemplate.call(this, {
      h: h,
      template: renderTemplate,
      defaultRendering: textInCell,
      additionalProps: this.$props,
      additionalListeners: {
        click: this.clickHandler
      }
    });
    return h("span", {
      "class": this.linkClass,
      onClick: this.clickHandler,
      on: this.v3 ? undefined : {
        "click": this.clickHandler
      }
    }, [h("span", {
      "class": 'k-column-title'
    }, [defaultRendering]), defaultSlot]);
  }
};
/**
 * @hidden
 */
var GridHeaderCell = GridHeaderCellVue2;
export { GridHeaderCell, GridHeaderCellVue2 };