import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ColumnMenuFilterOperatorsProps {
    filterType: string;
    operator: string;
    operators: Array<{
        text: string;
        operator: any;
    }>;
    onChange?: (event: {
        value: any;
        operator: string | Function;
    }) => void;
}
/**
 * @hidden
 */
export interface ColumnMenuFilterOperatorsMethods extends Vue2type {
    triggerChange: (filter: any) => void;
    operatorChange: (operatorValue: any, e: any) => void;
}
/**
 * @hidden
 */
declare let ColumnMenuFilterOperatorsVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<ColumnMenuFilterOperatorsMethods>, {}, RecordPropsDefinition<ColumnMenuFilterOperatorsProps>>;
/**
 * @hidden
 */
declare const ColumnMenuFilterOperators: DefineComponent<ColumnMenuFilterOperatorsProps, any, {}, {}, ColumnMenuFilterOperatorsMethods, {}, {}, {}, string, ColumnMenuFilterOperatorsProps, ColumnMenuFilterOperatorsProps, {}>;
export { ColumnMenuFilterOperators, ColumnMenuFilterOperatorsVue2 };
