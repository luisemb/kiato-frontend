"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SkeletonVue2 = exports.Skeleton = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var package_metadata_1 = require("../package-metadata");
/**
 * @hidden
 */
var SkeletonVue2 = {
  name: 'KendoSkeleton',
  props: {
    animation: {
      type: [Object, Boolean],
      default: function _default() {
        return {
          type: 'pulse'
        };
      },
      validator: function validator(value) {
        return value === false || ['wave', 'pulse'].includes(value.type);
      }
    },
    shape: {
      type: String,
      default: 'text',
      validator: function validator(value) {
        return ['circle', 'rectangle', 'text'].includes(value);
      }
    },
    ariaBusy: {
      type: Boolean,
      default: undefined
    },
    role: {
      type: String,
      default: undefined
    }
  },
  created: function created() {
    (0, kendo_vue_common_1.validatePackage)(package_metadata_1.packageMetadata);
  },
  computed: {
    skeletonClasses: function skeletonClasses() {
      return {
        'k-skeleton': true,
        'k-skeleton-circle': this.shape === 'circle',
        'k-skeleton-rect': this.shape === 'rectangle',
        'k-skeleton-text': this.shape === 'text',
        'k-skeleton-pulse': (0, kendo_vue_common_1.isObject)(this.animation) && this.animation.type === 'pulse',
        'k-skeleton-wave': (0, kendo_vue_common_1.isObject)(this.animation) && this.animation.type === 'wave' || this.animation === true
      };
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    return h("span", {
      role: this.$props.role,
      attrs: this.v3 ? undefined : {
        role: this.$props.role,
        ariaBusy: this.$props.ariaBusy
      },
      "class": this.skeletonClasses,
      ariaBusy: this.$props.ariaBusy
    });
  }
};
exports.SkeletonVue2 = SkeletonVue2;
/**
 * @hidden
 */
var Skeleton = SkeletonVue2;
exports.Skeleton = Skeleton;