import { DefineComponent } from '../additionalTypes';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { BadgeContainerProps } from './BadgeProps';
/**
 * @hidden
 */
export interface BadgeContainerState {
}
/**
 * @hidden
 */
export interface BadgeContainerComputed {
    [key: string]: any;
    badgeContainerClasses: object;
}
/**
 * @hidden
 */
export interface BadgeContainerMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface BadgeContainerData {
    currentDir?: string;
}
/**
 * @hidden
 */
export interface BadgeContainerAll extends Vue, BadgeContainerMethods, BadgeContainerData, BadgeContainerComputed, BadgeContainerState {
}
/**
 * @hidden
 */
declare let BadgeContainerVue2: ComponentOptions<BadgeContainerAll, DefaultData<BadgeContainerData>, DefaultMethods<BadgeContainerAll>, BadgeContainerComputed, RecordPropsDefinition<BadgeContainerProps>>;
/**
 * Represents the [Kendo UI for Vue BadgeContainer component]({% slug api_indicators_badgeprops %}).
 *
 * @example
 * ```jsx
 *     <BadgeContainer>99+</BadgeContainer>
 * ```
 */
declare const BadgeContainer: DefineComponent<BadgeContainerProps, any, BadgeContainerData, BadgeContainerComputed, BadgeContainerMethods, {}, {}, {}, string, BadgeContainerProps, BadgeContainerProps, {}>;
export { BadgeContainer, BadgeContainerVue2 };
