import { DefineComponent } from '../additionalTypes';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { BadgeProps } from './BadgeProps';
/**
 * @hidden
 */
export interface BadgeState {
}
/**
 * @hidden
 */
export interface BadgeComputed {
    [key: string]: any;
    badgeClasses: object;
}
/**
 * @hidden
 */
export interface BadgeMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface BadgeData {
    currentDir?: string;
}
/**
 * @hidden
 */
export interface BadgeAll extends Vue, BadgeMethods, BadgeData, BadgeComputed, BadgeState {
}
/**
 * @hidden
 */
declare let BadgeVue2: ComponentOptions<BadgeAll, DefaultData<BadgeData>, DefaultMethods<BadgeAll>, BadgeComputed, RecordPropsDefinition<BadgeProps>>;
/**
 * Represents the [Kendo UI for Vue Badge component]({% slug api_indicators_badgeprops %}).
 *
 * @example
 * ```jsx
 *     <Badge>99+</Badge>
 * ```
 */
declare const Badge: DefineComponent<BadgeProps, any, BadgeData, BadgeComputed, BadgeMethods, {}, {}, {}, string, BadgeProps, BadgeProps, {}>;
export { Badge, BadgeVue2 };
