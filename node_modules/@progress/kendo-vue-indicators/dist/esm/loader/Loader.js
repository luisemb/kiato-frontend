// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { validatePackage } from '@progress/kendo-vue-common';
import { packageMetadata } from '../package-metadata.js';
var SEGMENT_COUNT = {
  'pulsing': 2,
  'infinite-spinner': 3,
  'converging-spinner': 4
};
var TYPE_CLASSES = {
  'pulsing': 'k-loader-pulsing-2',
  'infinite-spinner': 'k-loader-spinner-3',
  'converging-spinner': 'k-loader-spinner-4'
};
/**
 * @hidden
 */
var LoaderVue2 = {
  name: 'KendoLoader',
  props: {
    type: {
      type: String,
      default: 'pulsing',
      validator: function validator(value) {
        return ['pulsing', 'infinite-spinner', 'converging-spinner'].includes(value);
      }
    },
    size: {
      type: String,
      default: 'medium',
      validator: function validator(value) {
        return ['small', 'medium', 'large'].includes(value);
      }
    },
    themeColor: {
      type: String,
      default: 'primary',
      validator: function validator(value) {
        return ['primary', 'secondary', 'tertiary', 'info', 'success', 'warning', 'error', 'dark', 'light', 'inverse'].includes(value);
      }
    }
  },
  created: function created() {
    validatePackage(packageMetadata);
  },
  computed: {
    loaderClasses: function loaderClasses() {
      var _a = this.$props,
        type = _a.type,
        size = _a.size,
        themeColor = _a.themeColor;
      return {
        'k-loader': true,
        'k-loader-sm': size === 'small',
        'k-loader-md': size === 'medium',
        'k-loader-lg': size === 'large',
        'k-loader-primary': themeColor === 'primary',
        'k-loader-secondary': themeColor === 'secondary',
        'k-loader-tertiary': themeColor === 'tertiary',
        'k-loader-info': themeColor === 'info',
        'k-loader-success': themeColor === 'success',
        'k-loader-warning': themeColor === 'warning',
        'k-loader-error': themeColor === 'error',
        'k-loader-dark': themeColor === 'dark',
        'k-loader-light': themeColor === 'light',
        'k-loader-inverse': themeColor === 'inverse',
        'k-loader-pulsing-2': type === 'pulsing',
        'k-loader-spinner-3': type === 'infinite-spinner',
        'k-loader-spinner-4': type === 'converging-spinner'
      };
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var type = this.$props.type;
    var spans = new Array(SEGMENT_COUNT[type]);
    spans.fill(0, 0, SEGMENT_COUNT[type]);
    return h("div", {
      "class": this.loaderClasses
    }, [h("div", {
      "class": "k-loader-canvas"
    }, [spans.map(function (_, i) {
      return h("span", {
        key: i,
        "class": "k-loader-segment"
      });
    }, this)])]);
  },
  methods: {
    focus: function focus(e) {
      if (this.$el) {
        this.$el.focus(e);
      }
    }
  }
};
/**
 * @hidden
 */
var Loader = LoaderVue2;
export { Loader, LoaderVue2 };