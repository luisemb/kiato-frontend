import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { windowStage } from './StageEnum';
/**
 * @hidden
 */
export interface WindowTitleBarProps {
    /**
     * @hidden
     */
    onClosebuttonclick?: (event: any) => void;
    /**
     * @hidden
     */
    onDblclick?: (event: any) => void;
    /**
     * @hidden
     */
    onMinimizeclick?: (event: any) => void;
    /**
     * @hidden
     */
    onFullscreenclick?: (event: any) => void;
    /**
     * @hidden
     */
    onRestoreclick?: (event: any) => void;
    /**
     * @hidden
     */
    id?: string;
    /**
     * @hidden
     */
    title?: string;
    /**
     * @hidden
     */
    titleId?: string;
    /**
     * @hidden
     */
    titleRender?: any;
    /**
     * @hidden
     */
    stage?: windowStage | string;
    /**
     * @hidden
     */
    closeButton?: any;
    /**
     * @hidden
     */
    minimizeButton?: any;
    /**
     * @hidden
     */
    maximizeButton?: any;
    /**
     * @hidden
     */
    restoreButton?: any;
}
/**
 * @hidden
 */
export interface WindowTitleBarMethods extends Vue2type {
    onDoubleClick: (e: any) => void;
    onMinimizeClick: (e: any) => void;
    onFullScreenClick: (e: any) => void;
    onRestoreClick: (e: any) => void;
    onCloseClick: (e: any) => void;
}
/**
 * @hidden
 */
declare let WindowTitleBarVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<WindowTitleBarMethods>, {}, RecordPropsDefinition<WindowTitleBarProps>>;
/**
 * @hidden
 */
declare const WindowTitleBar: DefineComponent<WindowTitleBarProps, any, {}, {}, WindowTitleBarMethods, {}, {}, {}, string, WindowTitleBarProps, WindowTitleBarProps, {}>;
export { WindowTitleBar, WindowTitleBarVue2 };
