import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ResizeHandlersProps {
    onResize: (e: any, args: {
        end: boolean;
        direction: any;
    }) => void;
}
/**
 * @hidden
 */
export interface ResizeHandlersMethods extends Vue2type {
    onDrag: (data: any, key: string) => void;
    onRelease: (data: any, key: string) => void;
}
/**
 * @hidden
 */
declare let ResizeHandlersVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<ResizeHandlersMethods>, {}, RecordPropsDefinition<ResizeHandlersProps>>;
/**
 * @hidden
 */
declare const ResizeHandlers: DefineComponent<ResizeHandlersProps, any, {}, {}, ResizeHandlersMethods, {}, {}, {}, string, ResizeHandlersProps, ResizeHandlersProps, {}>;
export { ResizeHandlers, ResizeHandlersVue2 };
