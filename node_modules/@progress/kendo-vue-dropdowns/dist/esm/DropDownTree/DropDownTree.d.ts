import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { DropDownTreeProps } from './DropDownTreeProps';
/**
 * @hidden
 */
export interface DropDownTreeState {
    componentGuid: string;
    anchor: string;
}
/**
 * @hidden
 */
export interface DropDownTreeComputed {
    [key: string]: any;
    isOpen: boolean;
    computedValue: any;
    hasValue: boolean;
    currentValueText: string;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface DropDownTreeMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface DropDownTreeData {
}
/**
 * @hidden
 */
export interface DropDownTreeAll extends Vue2type, DropDownTreeMethods, DropDownTreeData, DropDownTreeComputed, DropDownTreeState {
}
/**
 * @hidden
 */
declare let DropDownTreeVue2: ComponentOptions<DropDownTreeAll, DefaultData<DropDownTreeData>, DefaultMethods<DropDownTreeAll>, DropDownTreeComputed, RecordPropsDefinition<DropDownTreeProps>>;
/**
 * @hidden
 */
declare const DropDownTree: DefineComponent<DropDownTreeProps, any, DropDownTreeData, DropDownTreeComputed, DropDownTreeMethods, {}, {}, {}, string, DropDownTreeProps, DropDownTreeProps, {}>;
export { DropDownTree, DropDownTreeVue2 };
