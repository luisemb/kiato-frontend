import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * Represents the props of the ListItem component.
 */
export interface ListItemProps {
    /**
     * Specifies the id that will be added to the list item element.
     */
    id?: string;
    /**
     * Represents the index of the list item element.
     */
    index: number;
    /**
     * Represents the data item of the list item element.
     */
    dataItem: any;
    /**
     * Sets the data item field that represents the item text. If the data contains only primitive values, do not define it.
     */
    textField?: string;
    /**
     * Indicates the focused state of the list item element.
     */
    focused: boolean;
    /**
     * Indicates the selected state of the list item element.
     */
    selected: boolean;
    /**
     * Fires when the list item is about to be rendered. Used to override the default appearance of the list item.
     */
    render?: any;
    /**
     * The `onClick` event handler of the list item element.
     */
    onClick?: (index: number, event: any) => void;
}
/**
 * @hidden
 */
export interface ListItemMethods {
    [key: string]: any;
    handleClick: (e: any) => void;
}
/**
 * @hidden
 */
export interface ListItemComputed {
    [key: string]: any;
    itemClass: object;
}
/**
 * @hidden
 */
export interface ListItemAll extends Vue2type, ListItemMethods, ListItemComputed {
    itemClass: object;
}
/**
 * @hidden
 */
declare let ListItemVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<ListItemAll>, ListItemComputed, RecordPropsDefinition<ListItemProps>>;
/**
 * @hidden
 */
declare const ListItem: DefineComponent<ListItemProps, any, {}, {}, ListItemMethods, {}, {}, {}, string, ListItemProps, ListItemProps, {}>;
export { ListItem, ListItemVue2 };
