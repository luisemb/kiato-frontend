import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ListFilterProps {
    value?: string;
    onChange?: any;
    onKeyDown?: any;
    size?: null | 'small' | 'medium' | 'large' | string;
    rounded?: null | 'small' | 'medium' | 'large' | 'full' | string;
    fillMode?: null | 'solid' | 'flat' | 'outline' | string;
    adaptiveMode?: boolean;
}
/**
 * @hidden
 */
export interface ListFilterMethods extends Vue2type {
    [key: string]: any;
    onKeyDown: (e: any) => void;
    onChange: (e: any) => void;
}
/**
 * @hidden
 */
export interface ListFilterState {
    input: any;
    inputRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface ListFilterAll extends ListFilterState, ListFilterMethods {
}
/**
 * @hidden
 */
declare let ListFilterVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<ListFilterMethods>, {}, RecordPropsDefinition<ListFilterProps>>;
/**
 * @hidden
 */
declare const ListFilter: DefineComponent<ListFilterProps, any, {}, {}, ListFilterMethods, {}, {}, {}, string, ListFilterProps, ListFilterProps, {}>;
export { ListFilter, ListFilterVue2 };
