var __assign = this && this.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { getTemplate } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var ListGroupItemVue2 = {
  name: 'KendoListItem',
  inheritAttrs: false,
  props: {
    id: String,
    group: String,
    render: Object
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
      id = _a.id,
      group = _a.group,
      virtual = _a.virtual,
      renderer = _a.render;
    var defaultRendering = h("li", {
      id: id,
      attrs: this.v3 ? undefined : {
        id: id,
        role: "group"
      },
      role: "group",
      "class": 'k-list-group-item',
      style: {
        position: virtual ? 'relative' : 'unset'
      }
    }, [h("span", {
      "class": !renderer ? 'k-list-item-text' : undefined
    }, [group])]);
    return getTemplate.call(this, {
      h: h,
      template: this.$props.render,
      defaultRendering: defaultRendering,
      additionalProps: __assign({}, this.$props)
    });
  }
};
/**
 * @hidden
 */
var ListGroupItem = ListGroupItemVue2;
export { ListGroupItem, ListGroupItemVue2 };