import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { MultiSelectTreeProps } from './MultiSelectTreeProps';
import { TagData } from '../MultiSelect/TagList';
/**
 * @hidden
 */
export interface MultiSelectTreeState {
    anchor: string;
}
/**
 * @hidden
 */
export interface MultiSelectTreeComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface MultiSelectTreeMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface MultiSelectTreeData {
    focusedTagState: TagData | undefined;
    openState: boolean;
    focusedState: boolean;
    filterState: string;
}
/**
 * @hidden
 */
export interface MultiSelectTreeAll extends Vue2type, MultiSelectTreeMethods, MultiSelectTreeData, MultiSelectTreeComputed, MultiSelectTreeState {
}
/**
 * @hidden
 */
declare let MultiSelectTreeVue2: ComponentOptions<MultiSelectTreeAll, DefaultData<MultiSelectTreeData>, DefaultMethods<MultiSelectTreeAll>, MultiSelectTreeComputed, RecordPropsDefinition<MultiSelectTreeProps>>;
/**
 * @hidden
 */
declare const MultiSelectTree: DefineComponent<MultiSelectTreeProps, any, MultiSelectTreeData, MultiSelectTreeComputed, MultiSelectTreeMethods, {}, {}, {}, string, MultiSelectTreeProps, MultiSelectTreeProps, {}>;
export { MultiSelectTree, MultiSelectTreeVue2 };
