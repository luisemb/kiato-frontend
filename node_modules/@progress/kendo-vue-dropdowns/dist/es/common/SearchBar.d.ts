import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => SearchBarData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface SearchBarProps {
    value: string;
    id?: string;
    placeholder?: string;
    tabIndex?: number;
    size?: number;
    suggestedText?: string;
    focused?: boolean;
    onKeydown?: any;
    onFocus?: any;
    onBlur?: any;
    disabled?: boolean;
    readOnly?: boolean;
    expanded?: boolean;
    owns?: string;
    name?: string;
    activedescendant?: string;
    describedby?: string;
    clearButton?: boolean;
    clearButtonClick?: any;
    accessKey?: string;
    ariaLabelledBy?: string;
    ariaLabel?: string;
}
/**
 * @hidden
 */
export interface SearchBarMethods extends Vue2type {
    onChange: (e: any) => void;
    onBlur: (e: any) => void;
    onFocus: (e: any) => void;
    onKeyDown: (e: any) => void;
    clearButtonClick: (e: any) => void;
}
/**
 * @hidden
 */
export interface SearchBarData {
    input: any;
    prevValue: string;
    prevSuggestedText: string;
    inputRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface SearchBarAll extends SearchBarMethods, SearchBarData {
}
/**
 * @hidden
 */
declare let SearchBarVue2: ComponentOptions<Vue2type, DefaultData<SearchBarData>, DefaultMethods<SearchBarAll>, {}, RecordPropsDefinition<SearchBarProps>>;
/**
 * @hidden
 */
declare const SearchBar: DefineComponent<SearchBarProps, any, SearchBarData, {}, SearchBarMethods, {}, {}, {}, string, SearchBarProps, SearchBarProps, {}>;
export { SearchBar, SearchBarVue2 };
