// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var inject = allVue.inject;
import { xIcon } from '@progress/kendo-svg-icons';
import { provideLocalizationService } from '@progress/kendo-vue-intl';
import { messages, clear } from '../messages/main';
import { Icon } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var ClearButtonVue2 = {
  name: 'clear-button',
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    var kendoLocalizationService = inject('kendoLocalizationService', {});
    return {
      v3: v3,
      kendoLocalizationService: kendoLocalizationService
    };
  },
  methods: {
    onMouseDown: function onMouseDown(e) {
      e.preventDefault();
    },
    onClickHandler: function onClickHandler(e) {
      this.$emit('clearclick', e);
    }
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var title = provideLocalizationService(this).toLanguageString(clear, messages[clear]);
    return h("span", {
      "class": "k-clear-value",
      role: "button",
      attrs: this.v3 ? undefined : {
        role: "button",
        tabindex: -1,
        title: title
      },
      onClick: this.onClickHandler,
      on: this.v3 ? undefined : {
        "click": this.onClickHandler,
        "mousedown": this.onMouseDown
      },
      onMousedown: this.onMouseDown,
      tabindex: -1,
      title: title,
      key: "clearbutton"
    }, [h(Icon, {
      name: "x",
      attrs: this.v3 ? undefined : {
        name: "x",
        icon: xIcon
      },
      icon: xIcon
    })]);
  }
};
/**
 * @hidden
 */
var ClearButton = ClearButtonVue2;
export { ClearButton, ClearButtonVue2 };