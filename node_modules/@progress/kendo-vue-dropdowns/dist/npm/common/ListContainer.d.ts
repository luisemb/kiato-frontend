import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface ListContainerProps {
    width?: string | number;
    onMouseDown?: any;
    onBlur?: any;
    dir?: string;
    popupSettings?: object;
    itemsCount?: number;
}
/**
 * @hidden
 */
export interface ListContainerState {
    kendoAnchorRef: any;
}
/**
 * @hidden
 */
export interface ListContainerMethods extends Vue2type {
    onMouseDown: (e: any) => void;
    onBlur: (e: any) => void;
    onOpen: (e: any) => void;
    onClose: (e: any) => void;
}
/**
 * @hidden
 */
declare let ListContainerVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<ListContainerMethods>, {}, RecordPropsDefinition<ListContainerProps>>;
/**
 * @hidden
 */
declare const ListContainer: DefineComponent<ListContainerProps, any, {}, {}, ListContainerMethods, {}, {}, {}, string, ListContainerProps, ListContainerProps, {}>;
export { ListContainer, ListContainerVue2 };
