"use strict";

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListItemVue2 = exports.ListItem = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var utils_1 = require("./utils");
/**
 * @hidden
 */
var ListItemVue2 = {
  name: 'KendoListItem',
  inheritAttrs: false,
  props: {
    id: String,
    index: Number,
    dataItem: [Object, String, Number],
    textField: String,
    focused: Boolean,
    selected: Boolean,
    render: Object
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  computed: {
    itemClass: function itemClass() {
      return {
        'k-list-item': true,
        'k-selected': this.$props.selected,
        'k-focus': this.$props.focused
      };
    }
  },
  methods: {
    handleClick: function handleClick(e) {
      this.$emit('itemclick', this.$props.index, e);
    }
  },
  // @ts-ignore
  render: function render(createElement) {
    var _a;
    var h = gh || createElement;
    var selected = this.$props.selected;
    var defaultRendering = h("li", {
      id: this.$props.id,
      attrs: this.v3 ? undefined : {
        id: this.$props.id,
        role: "option",
        "aria-selected": selected
      },
      role: "option",
      "aria-selected": selected,
      "class": (0, kendo_vue_common_1.classNames)('k-list-item', (_a = {
        'k-selected': selected,
        'k-focus': this.$props.focused
      }, _a[this.$attrs.class] = this.$attrs.class, _a)),
      onClick: this.handleClick,
      on: this.v3 ? undefined : {
        "click": this.handleClick
      },
      style: this.$attrs.style || {
        position: 'unset'
      }
    }, [h("span", {
      "class": "k-list-item-text"
    }, [(0, utils_1.getItemValue)(this.$props.dataItem, this.$props.textField).toString()])]);
    return kendo_vue_common_1.getTemplate.call(this, {
      h: h,
      template: this.$props.render,
      defaultRendering: defaultRendering,
      additionalProps: __assign(__assign({}, this.$props), {
        itemClass: this.itemClass
      }),
      additionalListeners: {
        click: this.handleClick
      }
    });
  }
};
exports.ListItemVue2 = ListItemVue2;
/**
 * @hidden
 */
var ListItem = ListItemVue2;
exports.ListItem = ListItem;