"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ListContainerVue2 = exports.ListContainer = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_popup_1 = require("@progress/kendo-vue-popup");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
/**
 * @hidden
 */
var ListContainerVue2 = {
  name: 'list-container',
  // @ts-ignore
  emits: {
    mousedown: null,
    blur: null,
    open: null,
    close: null
  },
  props: {
    width: [String, Number],
    dir: String,
    itemsCount: Number,
    popupSettings: {
      type: Object,
      default: function _default() {
        return {
          animate: true,
          height: '200px'
        };
      }
    }
  },
  created: function created() {
    this.kendoAnchorRef = undefined;
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  methods: {
    onMouseDown: function onMouseDown(e) {
      this.$emit('mousedown', e);
    },
    onBlur: function onBlur(e) {
      this.$emit('blur', e);
    },
    onOpen: function onOpen(e) {
      this.$emit('open', e);
    },
    onClose: function onClose(e) {
      this.$emit('close', e);
    }
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    var defaultSlot = (0, kendo_vue_common_1.getDefaultSlots)(this);
    var _a = this.$props,
      onMouseDown = _a.onMouseDown,
      onBlur = _a.onBlur,
      width = _a.width,
      dir = _a.dir,
      popupSettings = _a.popupSettings;
    // @ts-ignore
    var popupClass = popupSettings.popupClass,
      className = popupSettings.className,
      animate = popupSettings.animate,
      anchor = popupSettings.anchor,
      show = popupSettings.show,
      open = popupSettings.open,
      close = popupSettings.close,
      itemsCount = popupSettings.itemsCount,
      appendTo = popupSettings.appendTo;
    return (
      // @ts-ignore function children
      h(kendo_vue_popup_1.Popup, {
        ref: 'popup',
        style: {
          width: width,
          direction: dir
        },
        popupClass: className,
        attrs: this.v3 ? undefined : {
          popupClass: className,
          animate: animate,
          anchor: anchor,
          show: show,
          contentKey: itemsCount,
          appendTo: appendTo
        },
        animate: animate,
        anchor: anchor,
        show: show,
        contentKey: itemsCount,
        onOpen: this.onOpen,
        on: this.v3 ? undefined : {
          "open": this.onOpen,
          "close": this.onClose
        },
        onClose: this.onClose,
        appendTo: appendTo
      }, this.v3 ? function () {
        return [h("div", {
          "class": popupClass,
          onMousedown: _this.onMouseDown,
          on: _this.v3 ? undefined : {
            "mousedown": _this.onMouseDown,
            "focusout": _this.onBlur
          },
          onFocusout: _this.onBlur
        }, [defaultSlot])];
      } : [h("div", {
        "class": popupClass,
        onMousedown: _this.onMouseDown,
        on: _this.v3 ? undefined : {
          "mousedown": _this.onMouseDown,
          "focusout": _this.onBlur
        },
        onFocusout: _this.onBlur
      }, [defaultSlot])])
    );
  }
};
exports.ListContainerVue2 = ListContainerVue2;
/**
 * @hidden
 */
var ListContainer = ListContainerVue2;
exports.ListContainer = ListContainer;