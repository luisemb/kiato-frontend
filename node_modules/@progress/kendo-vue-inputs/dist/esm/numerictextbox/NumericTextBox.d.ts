import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
import { NumericTextBoxData } from './interfaces/NumericTextBoxData';
import { NumericTextBoxProps } from './interfaces/NumericTextBoxProps';
declare type DefaultData<V> = object | ((this: V) => NumericTextBoxData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { IntlService } from '@progress/kendo-vue-intl';
import { FormComponentValidity } from '@progress/kendo-vue-common';
/**
 * The arguments for the `change` event of the NumericTextBox.
 */
export interface NumericTextBoxChangeEvent {
    /**
     * The current value of the NumericTextBox.
     */
    value: number | null;
    /**
     * The native event.
     */
    event: any;
}
/**
 * @hidden
 */
export interface NumericTextBoxState {
    _intl: IntlService;
    _symbols: any;
    inputRef: any;
    elementWrapperRef: any;
    v3: boolean;
    _input: any;
    _elementWrapper: any;
    _textBeforeInput: string;
    _inputId: string;
    _prevLooseValue?: string;
    _isPaste: boolean;
}
/**
 * @hidden
 */
export interface NumericTextBoxMethods {
    [key: string]: any;
    setValidity: () => void;
    getCurrentState: () => NumericTextBoxData;
    triggerChange: (newState: NumericTextBoxData, event: any) => void;
    formatNumber: (value: number | null) => string;
    parseNumber: (text: string) => number;
    elementChange: (event: any) => void;
    validity: () => FormComponentValidity;
    ranged: (value: number | null) => number | null;
    nonInputActions: (value: number, event: any) => void;
    increase: (event: any) => void;
    decrease: (event: any) => void;
    wheel: (event: any) => void;
    keyDown: (event: any) => void;
    onPasteHandler: (event: any) => void;
    spinnersWrapperMouseDown: (e: any) => void;
    emitFocus: (e: any) => void;
    emitBlur: (e: any) => void;
    handleFocus: (e: any) => void;
    handleBlur: (e: any) => void;
}
/**
 * @hidden
 */
export interface NumericTextBoxComputed {
    [key: string]: any;
    wrapperClassNames: any;
    computedValue?: number;
    looseValue?: string;
    spanClassNames: any;
}
/**
 * @hidden
 */
export interface NumericTextBoxAll extends Vue2type, NumericTextBoxMethods, NumericTextBoxComputed, NumericTextBoxState {
}
/**
 * @hidden
 */
declare let NumericTextBoxVue2: ComponentOptions<NumericTextBoxAll, DefaultData<NumericTextBoxData>, DefaultMethods<NumericTextBoxAll>, NumericTextBoxComputed, RecordPropsDefinition<NumericTextBoxProps>>;
/**
 * @hidden
 */
declare const NumericTextBox: DefineComponent<NumericTextBoxProps, any, NumericTextBoxData, NumericTextBoxComputed, NumericTextBoxMethods, {}, {}, {}, string, NumericTextBoxProps, NumericTextBoxProps, {}>;
export { NumericTextBox, NumericTextBoxVue2 };
