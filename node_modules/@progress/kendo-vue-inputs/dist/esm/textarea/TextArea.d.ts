import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { TextAreaProps } from './interfaces/TextAreaProps';
/**
 * @hidden
 */
export interface TextAreaHandle {
    element: HTMLTextAreaElement | null;
    focus: any;
    name?: string | null;
}
/**
 * @hidden
 */
export interface TextAreaState {
}
/**
 * @hidden
 */
export interface TextAreaComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface TextAreaMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface TextAreaData {
    currentActive: boolean;
}
/**
 * @hidden
 */
export interface TextAreaAll extends Vue2type, TextAreaMethods, TextAreaData, TextAreaComputed, TextAreaState {
}
/**
 * @hidden
 */
declare let TextAreaVue2: ComponentOptions<TextAreaAll, DefaultData<TextAreaData>, DefaultMethods<TextAreaAll>, TextAreaComputed, RecordPropsDefinition<TextAreaProps>>;
/**
 * Represents the [Kendo UI for Vue Native TextArea component]({% slug overview_textarea %}).
 *
 * Accepts properties of type [TextAreaProps]({% slug api_inputs_textareaprops %}).
 *
 *
 * ```jsx
 * <template>
 *     <k-form
 *       @submit="handleSubmit">
 *       <formcontent />
 *    </k-form>
 * </template>
 * <script>
 * import { Form } from "@progress/kendo-vue-form";
 * import FormContent from './FormContent.vue';
 *
 * export default {
 *     components: {
 *       'k-form': Form,
 *       'formcontent': FormContent
 *     },
 *     methods: {
 *       handleSubmit (dataItem) {
 *          alert(JSON.stringify(dataItem, null, 2));
 *       }
 *     }
 * };
 *
 * </script>
 * ```
 */
declare const TextArea: DefineComponent<TextAreaProps, any, TextAreaData, TextAreaComputed, TextAreaMethods, {}, {}, {}, string, TextAreaProps, TextAreaProps, {}>;
export { TextArea, TextAreaVue2 };
