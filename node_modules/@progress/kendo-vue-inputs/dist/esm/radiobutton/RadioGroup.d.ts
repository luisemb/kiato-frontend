import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { RadioGroupProps } from './interfaces/RadioGroupProps';
/**
 * @hidden
 */
export interface RadioGroupHandle {
    element: HTMLUListElement | null;
    focus: any;
}
/**
 * @hidden
 */
export interface RadioGroupData {
    stateChecked: any;
    rtl: boolean;
}
export interface RadioGroupState {
    radioGroupName: string;
    v3: boolean;
}
/**
 * @hidden
 */
export interface RadioGroupMethods {
    [key: string]: any;
    focusElement: () => void;
    handleChange: (e: any) => void;
    handleFocus: (e: any) => void;
    handleBlur: (e: any) => void;
}
/**
 * @hidden
 */
export interface RadioGroupComputed {
    [key: string]: any;
    checkedRadioValue: any;
    radioGroupClasses: object;
    currentDir: any;
}
/**
 * @hidden
 */
export interface RadioGroupAll extends Vue2type, RadioGroupMethods, RadioGroupComputed, RadioGroupState, RadioGroupData {
}
/**
 * @hidden
 */
declare let RadioGroupVue2: ComponentOptions<RadioGroupAll, DefaultData<RadioGroupData>, DefaultMethods<RadioGroupAll>, RadioGroupComputed, RecordPropsDefinition<RadioGroupProps>>;
/**
 * @hidden
 */
declare let RadioGroup: DefineComponent<RadioGroupProps, any, RadioGroupData, RadioGroupComputed, RadioGroupMethods, {}, {}, {}, string, RadioGroupProps, RadioGroupProps, {}>;
export { RadioGroup, RadioGroupVue2 };
