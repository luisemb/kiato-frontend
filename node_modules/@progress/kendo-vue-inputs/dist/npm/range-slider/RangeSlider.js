"use strict";

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.RangeSliderVue2 = exports.RangeSlider = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var ref = allVue.ref;
var inject = allVue.inject;
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var main_1 = require("../messages/main");
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var range_raducer_1 = require("./range-raducer");
var package_metadata_1 = require("../package-metadata");
/**
 * @hidden
 */
var RangeSliderVue2 = {
  name: 'KendoRangeSlider',
  model: {
    event: 'changemodel'
  },
  props: {
    id: String,
    value: {
      type: Object,
      validator: function validator(value) {
        return value.start <= value.end;
      }
    },
    defaultValue: {
      type: Object,
      default: function _default() {
        return {
          start: 0,
          end: 0
        };
      },
      validator: function validator(value) {
        return value.start <= value.end;
      }
    },
    step: {
      type: Number,
      default: 1
    },
    min: {
      type: Number,
      required: true
    },
    max: {
      type: Number,
      required: true
    },
    vertical: Boolean,
    disabled: Boolean,
    dir: {
      type: String,
      default: 'ltr',
      validator: function validator(value) {
        return [null, 'ltr', 'rtl'].includes(value);
      }
    },
    startTabIndex: Number,
    endTabIndex: Number
  },
  provide: function provide() {
    return {
      kendoMin: this.$props.min,
      kendoMax: this.$props.max,
      kendoVertical: this.$props.vertical
    };
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  created: function created() {
    (0, kendo_vue_common_1.validatePackage)(package_metadata_1.packageMetadata);
  },
  data: function data() {
    return {
      currentValue: this.defaultValue,
      currentDrag: '',
      currentDir: 'ltr'
    };
  },
  computed: {
    computedValue: function computedValue() {
      return this.$props.value !== undefined ? this.$props.value : this.currentValue;
    },
    percentStart: function percentStart() {
      return (this.computedValue.start - this.min) / (this.max - this.min) * 100;
    },
    percentEnd: function percentEnd() {
      return (this.computedValue.end - this.min) / (this.max - this.min) * 100;
    },
    sliderItemsStyle: function sliderItemsStyle() {
      return this.vertical ? {
        paddingTop: 0,
        height: '100%'
      } : {};
    },
    trackStyles: function trackStyles() {
      return this.vertical ? {
        marginTop: '0.5rem',
        marginBottom: '0.5rem'
      } : {
        marginLeft: '0.5rem',
        marginRight: '0.5rem'
      };
    }
  },
  mounted: function mounted() {
    this.sliderRef = this.$refs.sliderRef;
    this.sliderSelectionRef = this.$refs.sliderSelectionRef;
    this.startHandle = this.$refs.startHandle;
    this.endHandle = this.$refs.endHandle;
    this.sliderTrackRef = this.$refs.sliderTrackRef;
    this.sliderTrackWrapRef = this.$refs.sliderTrackWrapRef;
    if (!this.currentDir && window && this.$el) {
      // Note: getComputedStyle forces reflow
      var direction = window.getComputedStyle(this.$el).direction;
      if (direction) {
        this.currentDir = direction;
      }
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    var inputRef = ref(null);
    var kendoLocalizationService = inject('kendoLocalizationService', {});
    return {
      v3: v3,
      inputRef: inputRef,
      kendoLocalizationService: kendoLocalizationService
    };
  },
  render: function render(createElement) {
    var _this = this;
    var _a, _b;
    var h = gh || createElement;
    var localization = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var defaultSlot = (0, kendo_vue_common_1.getDefaultSlots)(this);
    var _c = this.$props,
      id = _c.id,
      dir = _c.dir;
    //  const dir = useDir(sliderRef, this.$props.dir);
    return h("div", {
      id: id,
      attrs: this.v3 ? undefined : {
        id: id,
        dir: this.currentDir,
        "aria-labelledby": this.$props.ariaLabelledBy,
        "aria-describedby": this.$props.ariaDescribedBy
      },
      dir: this.currentDir,
      "class": (0, kendo_vue_common_1.classNames)('k-slider', {
        'k-rtl': this.currentDir === 'rtl',
        'k-disabled': this.$props.disabled,
        'k-slider-vertical': this.$props.vertical,
        'k-slider-horizontal': !this.$props.vertical
      }, this.$props.class),
      "aria-labelledby": this.$props.ariaLabelledBy,
      "aria-describedby": this.$props.ariaDescribedBy
    }, [
    // @ts-ignore  function children
    h(kendo_vue_common_1.Draggable, {
      onDrag: this.handleTrackDrag,
      on: this.v3 ? undefined : {
        "drag": this.handleTrackDrag,
        "press": this.handleTrackPress,
        "release": this.handleTrackRelease
      },
      onPress: this.handleTrackPress,
      onRelease: this.handleTrackRelease,
      ref: 'draggable'
    }, this.v3 ? function () {
      return [h("div", {
        ref: 'sliderTrackWrapRef',
        "class": "k-slider-track-wrap",
        style: __assign({
          flexGrow: 1,
          position: 'relative',
          touchAction: 'none'
        }, _this.trackStyles)
      }, [defaultSlot && h("ul", {
        "class": "k-reset k-slider-items",
        style: __assign({}, _this.sliderItemsStyle)
      }, [defaultSlot]), h("div", {
        ref: 'sliderTrackRef',
        "class": "k-slider-track",
        style: _this.$props.vertical ? {
          bottom: 0,
          height: '100%'
        } : (_a = {}, _a[_this.currentDir === 'rtl' ? 'right' : 'left'] = 0, _a.width = '100%', _a)
      }, [_this.percentStart !== null && _this.percentEnd !== null && h("div", {
        "data-selection": true,
        attrs: _this.v3 ? undefined : {
          "data-selection": true,
          title: "".concat(_this.computedValue.start, " - ").concat(_this.computedValue.end)
        },
        ref: 'sliderSelectionRef',
        title: "".concat(_this.computedValue.start, " - ").concat(_this.computedValue.end),
        "class": "k-slider-selection",
        style: _this.vertical ? {
          height: _this.percentEnd - _this.percentStart + '%',
          bottom: _this.percentStart + '%'
        } : (_b = {}, _b[_this.currentDir === 'rtl' ? 'right' : 'left'] = _this.percentStart + '%', _b.width = _this.percentEnd - _this.percentStart + '%', _b)
      }), h("a", {
        ref: 'startHandle',
        role: "slider",
        attrs: _this.v3 ? undefined : {
          role: "slider",
          tabindex: (0, kendo_vue_common_1.getTabIndex)(_this.startTabIndex, _this.$props.disabled, undefined),
          "aria-valuemin": _this.min,
          "aria-valuemax": Math.max(_this.max, _this.computedValue.end),
          "aria-valuenow": _this.computedValue.start,
          "aria-disabled": _this.disabled ? 'true' : undefined,
          "aria-valuetext": _this.computedValue.start,
          title: localization.toLanguageString(main_1.sliderDragTitle, main_1.messages[main_1.sliderDragTitle])
        },
        tabindex: (0, kendo_vue_common_1.getTabIndex)(_this.startTabIndex, _this.$props.disabled, undefined),
        "aria-valuemin": _this.min,
        "aria-valuemax": Math.max(_this.max, _this.computedValue.end),
        "aria-valuenow": _this.computedValue.start,
        "aria-disabled": _this.disabled ? 'true' : undefined,
        "aria-valuetext": _this.computedValue.start,
        "class": "k-draghandle",
        title: localization.toLanguageString(main_1.sliderDragTitle, main_1.messages[main_1.sliderDragTitle]),
        style: _this.vertical ? {
          bottom: 'calc(' + _this.percentStart + '%)',
          zIndex: 1
        } : _this.currentDir === 'rtl' ? {
          right: 'calc(' + _this.percentStart + '% - 13px)',
          zIndex: 1
        } : {
          left: 'calc(' + _this.percentStart + '%)',
          zIndex: 1
        },
        onKeydown: _this.handleStartKeyDown,
        on: _this.v3 ? undefined : {
          "keydown": _this.handleStartKeyDown
        }
      }), h("a", {
        ref: 'endHandle',
        role: "slider",
        attrs: _this.v3 ? undefined : {
          role: "slider",
          tabindex: (0, kendo_vue_common_1.getTabIndex)(_this.endTabIndex, _this.$props.disabled, undefined),
          "aria-valuemin": Math.min(_this.min, _this.computedValue.start),
          "aria-valuemax": _this.max,
          "aria-valuenow": _this.computedValue.end,
          "aria-disabled": _this.disabled ? 'true' : undefined,
          "aria-valuetext": _this.computedValue.end,
          title: localization.toLanguageString(main_1.sliderDragTitle, main_1.messages[main_1.sliderDragTitle])
        },
        tabindex: (0, kendo_vue_common_1.getTabIndex)(_this.endTabIndex, _this.$props.disabled, undefined),
        "aria-valuemin": Math.min(_this.min, _this.computedValue.start),
        "aria-valuemax": _this.max,
        "aria-valuenow": _this.computedValue.end,
        "aria-disabled": _this.disabled ? 'true' : undefined,
        "aria-valuetext": _this.computedValue.end,
        "class": "k-draghandle",
        title: localization.toLanguageString(main_1.sliderDragTitle, main_1.messages[main_1.sliderDragTitle]),
        style: _this.vertical ? {
          bottom: 'calc(' + _this.percentEnd + '%)',
          zIndex: 1
        } : _this.currentDir === 'rtl' ? {
          right: 'calc(' + _this.percentEnd + '% - 13px)',
          zIndex: 1
        } : {
          left: 'calc(' + _this.percentEnd + '%)',
          zIndex: 1
        },
        onKeydown: _this.handleEndKeyDown,
        on: _this.v3 ? undefined : {
          "keydown": _this.handleEndKeyDown
        }
      })])])];
    } : [h("div", {
      ref: 'sliderTrackWrapRef',
      "class": "k-slider-track-wrap",
      style: __assign({
        flexGrow: 1,
        position: 'relative',
        touchAction: 'none'
      }, _this.trackStyles)
    }, [defaultSlot && h("ul", {
      "class": "k-reset k-slider-items",
      style: __assign({}, _this.sliderItemsStyle)
    }, [defaultSlot]), h("div", {
      ref: 'sliderTrackRef',
      "class": "k-slider-track",
      style: _this.$props.vertical ? {
        bottom: 0,
        height: '100%'
      } : (_a = {}, _a[_this.currentDir === 'rtl' ? 'right' : 'left'] = 0, _a.width = '100%', _a)
    }, [_this.percentStart !== null && _this.percentEnd !== null && h("div", {
      "data-selection": true,
      attrs: _this.v3 ? undefined : {
        "data-selection": true,
        title: "".concat(_this.computedValue.start, " - ").concat(_this.computedValue.end)
      },
      ref: 'sliderSelectionRef',
      title: "".concat(_this.computedValue.start, " - ").concat(_this.computedValue.end),
      "class": "k-slider-selection",
      style: _this.vertical ? {
        height: _this.percentEnd - _this.percentStart + '%',
        bottom: _this.percentStart + '%'
      } : (_b = {}, _b[_this.currentDir === 'rtl' ? 'right' : 'left'] = _this.percentStart + '%', _b.width = _this.percentEnd - _this.percentStart + '%', _b)
    }), h("a", {
      ref: 'startHandle',
      role: "slider",
      attrs: _this.v3 ? undefined : {
        role: "slider",
        tabindex: (0, kendo_vue_common_1.getTabIndex)(_this.startTabIndex, _this.$props.disabled, undefined),
        "aria-valuemin": _this.min,
        "aria-valuemax": Math.max(_this.max, _this.computedValue.end),
        "aria-valuenow": _this.computedValue.start,
        "aria-disabled": _this.disabled ? 'true' : undefined,
        "aria-valuetext": _this.computedValue.start,
        title: localization.toLanguageString(main_1.sliderDragTitle, main_1.messages[main_1.sliderDragTitle])
      },
      tabindex: (0, kendo_vue_common_1.getTabIndex)(_this.startTabIndex, _this.$props.disabled, undefined),
      "aria-valuemin": _this.min,
      "aria-valuemax": Math.max(_this.max, _this.computedValue.end),
      "aria-valuenow": _this.computedValue.start,
      "aria-disabled": _this.disabled ? 'true' : undefined,
      "aria-valuetext": _this.computedValue.start,
      "class": "k-draghandle",
      title: localization.toLanguageString(main_1.sliderDragTitle, main_1.messages[main_1.sliderDragTitle]),
      style: _this.vertical ? {
        bottom: 'calc(' + _this.percentStart + '%)',
        zIndex: 1
      } : _this.currentDir === 'rtl' ? {
        right: 'calc(' + _this.percentStart + '% - 13px)',
        zIndex: 1
      } : {
        left: 'calc(' + _this.percentStart + '%)',
        zIndex: 1
      },
      onKeydown: _this.handleStartKeyDown,
      on: _this.v3 ? undefined : {
        "keydown": _this.handleStartKeyDown
      }
    }), h("a", {
      ref: 'endHandle',
      role: "slider",
      attrs: _this.v3 ? undefined : {
        role: "slider",
        tabindex: (0, kendo_vue_common_1.getTabIndex)(_this.endTabIndex, _this.$props.disabled, undefined),
        "aria-valuemin": Math.min(_this.min, _this.computedValue.start),
        "aria-valuemax": _this.max,
        "aria-valuenow": _this.computedValue.end,
        "aria-disabled": _this.disabled ? 'true' : undefined,
        "aria-valuetext": _this.computedValue.end,
        title: localization.toLanguageString(main_1.sliderDragTitle, main_1.messages[main_1.sliderDragTitle])
      },
      tabindex: (0, kendo_vue_common_1.getTabIndex)(_this.endTabIndex, _this.$props.disabled, undefined),
      "aria-valuemin": Math.min(_this.min, _this.computedValue.start),
      "aria-valuemax": _this.max,
      "aria-valuenow": _this.computedValue.end,
      "aria-disabled": _this.disabled ? 'true' : undefined,
      "aria-valuetext": _this.computedValue.end,
      "class": "k-draghandle",
      title: localization.toLanguageString(main_1.sliderDragTitle, main_1.messages[main_1.sliderDragTitle]),
      style: _this.vertical ? {
        bottom: 'calc(' + _this.percentEnd + '%)',
        zIndex: 1
      } : _this.currentDir === 'rtl' ? {
        right: 'calc(' + _this.percentEnd + '% - 13px)',
        zIndex: 1
      } : {
        left: 'calc(' + _this.percentEnd + '%)',
        zIndex: 1
      },
      onKeydown: _this.handleEndKeyDown,
      on: _this.v3 ? undefined : {
        "keydown": _this.handleEndKeyDown
      }
    })])])])]);
  },
  methods: {
    dispatchStateValue: function dispatchStateValue(args) {
      var newState = (0, range_raducer_1.rangeReducer)({
        start: this.computedValue.start,
        end: this.computedValue.end
      }, __assign(__assign({}, args), {
        min: this.min,
        max: this.max,
        step: this.step
      }));
      this.currentValue.start = newState.start;
      this.currentValue.end = newState.end;
      this.$emit('change', {
        min: this.min,
        max: this.max,
        step: this.step,
        value: {
          start: newState.start,
          end: newState.end
        }
      });
    },
    focus: function focus() {
      if (this.startHandle) {
        this.startHandle.focus();
      }
    },
    handleChange: function handleChange(newValue, event) {
      this.$emit('change', {
        value: newValue,
        //    target: target.current,
        event: event
      });
    },
    calcNewDistance: function calcNewDistance(event) {
      if (!this.sliderTrackWrapRef) {
        return;
      }
      event.originalEvent.preventDefault();
      var computed = this.sliderTrackWrapRef.getBoundingClientRect();
      var distance = this.$props.vertical ? computed.bottom - event.clientY : this.currentDir === 'rtl' ? computed.right - event.clientX : event.clientX - computed.left;
      var size = this.$props.vertical ? computed.height : computed.width;
      var percentage = distance / size;
      var payload = this.min + percentage * (this.max - this.min);
      return payload;
    },
    calcKey: function calcKey(payload) {
      if (payload <= this.computedValue.start) {
        return 'start';
      }
      if (payload >= this.computedValue.end) {
        return 'end';
      }
      return 2 * payload < this.computedValue.end + this.computedValue.start ? 'start' : 'end';
    },
    handleStartKeyDown: function handleStartKeyDown(event) {
      switch (event.keyCode) {
        case kendo_vue_common_1.Keys.right:
          event.preventDefault();
          this.dispatchStateValue({
            type: this.currentDir === 'rtl' ? range_raducer_1.RANGE_ACTION.decrease : range_raducer_1.RANGE_ACTION.increase,
            key: 'start',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.up:
          event.preventDefault();
          this.dispatchStateValue({
            type: range_raducer_1.RANGE_ACTION.increase,
            key: 'start',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.left:
          event.preventDefault();
          this.dispatchStateValue({
            type: this.currentDir === 'rtl' ? range_raducer_1.RANGE_ACTION.increase : range_raducer_1.RANGE_ACTION.decrease,
            key: 'start',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.down:
          event.preventDefault();
          this.dispatchStateValue({
            type: range_raducer_1.RANGE_ACTION.decrease,
            key: 'start',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.home:
          event.preventDefault();
          this.dispatchStateValue({
            type: range_raducer_1.RANGE_ACTION.min,
            key: 'start',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.end:
          event.preventDefault();
          this.dispatchStateValue({
            type: range_raducer_1.RANGE_ACTION.max,
            key: 'start',
            event: event
          });
          break;
        default:
          break;
      }
    },
    handleEndKeyDown: function handleEndKeyDown(event) {
      switch (event.keyCode) {
        case kendo_vue_common_1.Keys.right:
          event.preventDefault();
          this.dispatchStateValue({
            type: this.currentDir === 'rtl' ? range_raducer_1.RANGE_ACTION.decrease : range_raducer_1.RANGE_ACTION.increase,
            key: 'end',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.up:
          event.preventDefault();
          this.dispatchStateValue({
            type: range_raducer_1.RANGE_ACTION.increase,
            key: 'end',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.left:
          event.preventDefault();
          this.dispatchStateValue({
            type: this.currentDir === 'rtl' ? range_raducer_1.RANGE_ACTION.increase : range_raducer_1.RANGE_ACTION.decrease,
            key: 'end',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.down:
          event.preventDefault();
          this.dispatchStateValue({
            type: range_raducer_1.RANGE_ACTION.decrease,
            key: 'end',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.home:
          event.preventDefault();
          this.dispatchStateValue({
            type: range_raducer_1.RANGE_ACTION.min,
            key: 'end',
            event: event
          });
          break;
        case kendo_vue_common_1.Keys.end:
          event.preventDefault();
          this.dispatchStateValue({
            type: range_raducer_1.RANGE_ACTION.max,
            key: 'end',
            event: event
          });
          break;
        default:
          break;
      }
    },
    handleTrackPress: function handleTrackPress(event) {
      var payload = this.calcNewDistance(event);
      var key = this.calcKey(payload);
      this.currentDrag = key;
      key === 'end' ? this.endHandle.focus() : this.startHandle.focus();
      var action = key === 'end' ? range_raducer_1.RANGE_ACTION.end : range_raducer_1.RANGE_ACTION.start;
      this.dispatchStateValue({
        type: action,
        payload: payload,
        event: event
      });
    },
    handleTrackDrag: function handleTrackDrag(event) {
      var payload = this.calcNewDistance(event);
      var action = this.currentDrag === 'end' ? range_raducer_1.RANGE_ACTION.end : range_raducer_1.RANGE_ACTION.start;
      this.dispatchStateValue({
        type: action,
        payload: payload,
        event: event
      });
    },
    handleTrackRelease: function handleTrackRelease(event) {
      var payload = this.calcNewDistance(event);
      var action = this.currentDrag === 'end' ? range_raducer_1.RANGE_ACTION.end : range_raducer_1.RANGE_ACTION.start;
      this.dispatchStateValue({
        type: action,
        payload: payload,
        event: event
      });
      this.currentDrag = '';
    }
  }
};
exports.RangeSliderVue2 = RangeSliderVue2;
/**
 * Represents the [Kendo UI for Vue Native RangeSlider component]({% slug overview_rangeslider %}).
 * Accepts properties of type [RangeSliderProps]({% slug api_inputs_rangesliderprops %}).
 * Obtaining the `ref` returns an object of type [RangeSliderHandle]({% slug api_inputs_rangesliderhandle %}).
 */
var RangeSlider = RangeSliderVue2;
exports.RangeSlider = RangeSlider;