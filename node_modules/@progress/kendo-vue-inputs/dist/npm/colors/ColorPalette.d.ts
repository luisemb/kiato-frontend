import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ColorPaletteService } from './utils/color-palette.service';
import { ColorPaletteProps } from './interfaces/ColorPaletteProps';
/**
 * @hidden
 */
export declare const DEFAULT_TILE_SIZE = 24;
/**
 * @hidden
 */
export declare const DEFAULT_COLUMNS_COUNT = 10;
/**
 * @hidden
 */
export declare const DEFAULT_PRESET = "office";
/**
 * @hidden
 */
export interface ColorPaletteState {
    wrapper: HTMLDivElement | null;
    paletteService: ColorPaletteService;
    guid: string;
}
/**
 * @hidden
 */
export interface ColorPaletteComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ColorPaletteMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ColorPaletteData {
    selectedColor?: string;
    focusedColor?: string;
}
/**
 * @hidden
 */
export interface ColorPaletteAll extends Vue2type, ColorPaletteMethods, ColorPaletteData, ColorPaletteComputed, ColorPaletteState {
}
/**
 * @hidden
 */
declare let ColorPaletteVue2: ComponentOptions<ColorPaletteAll, DefaultData<ColorPaletteData>, DefaultMethods<ColorPaletteAll>, ColorPaletteComputed, RecordPropsDefinition<ColorPaletteProps>>;
/**
 * @hidden
 */
declare const ColorPalette: DefineComponent<ColorPaletteProps, any, ColorPaletteData, ColorPaletteComputed, ColorPaletteMethods, {}, {}, {}, string, ColorPaletteProps, ColorPaletteProps, {}>;
export { ColorPalette, ColorPaletteVue2 };
