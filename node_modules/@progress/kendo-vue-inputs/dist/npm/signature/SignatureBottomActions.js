"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SignatureBottomActionsVue2 = exports.SignatureBottomActions = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_buttons_1 = require("@progress/kendo-vue-buttons");
var kendo_svg_icons_1 = require("@progress/kendo-svg-icons");
/**
 * @hidden
 */
var SignatureBottomActionsVue2 = {
  name: 'KendoSignatureBottomActions',
  // @ts-ignore
  emits: {
    clear: null
  },
  props: {
    showClear: Boolean,
    size: String,
    title: String
  },
  methods: {
    onClear: function onClear(e) {
      this.$emit('clear', e);
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
      showClear = _a.showClear,
      title = _a.title,
      size = _a.size;
    return h("div", {
      "class": 'k-signature-actions k-signature-actions-bottom'
    }, [showClear &&
    // @ts-ignore
    h(kendo_vue_buttons_1.Button, {
      "class": 'k-signature-action k-signature-clear',
      icon: 'x',
      attrs: this.v3 ? undefined : {
        icon: 'x',
        svgIcon: kendo_svg_icons_1.xIcon,
        shape: null,
        fillMode: 'flat',
        size: size,
        "aria-label": title,
        title: title
      },
      svgIcon: kendo_svg_icons_1.xIcon,
      shape: null,
      fillMode: 'flat',
      size: size,
      onClick: this.onClear,
      on: this.v3 ? undefined : {
        "click": this.onClear
      },
      "aria-label": title,
      title: title
    })]);
  }
};
exports.SignatureBottomActionsVue2 = SignatureBottomActionsVue2;
/**
 * @hidden
 */
var SignatureBottomActions = SignatureBottomActionsVue2;
exports.SignatureBottomActions = SignatureBottomActions;