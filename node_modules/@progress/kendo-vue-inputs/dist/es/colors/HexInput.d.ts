import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface HexInputProps {
    tabIndex: number;
    hex: string;
    onHexChange?: any;
    disabled?: boolean;
}
/**
 * @hidden
 */
export interface HexInputState {
    originalHex: string;
    hex: string;
}
/**
 * @hidden
 */
export interface HexInputComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface HexInputMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface HexInputData {
}
/**
 * @hidden
 */
export interface HexInputAll extends Vue2type, HexInputMethods, HexInputData, HexInputComputed, HexInputState {
}
/**
 * @hidden
 */
declare let HexInputVue2: ComponentOptions<HexInputAll, DefaultData<HexInputData>, DefaultMethods<HexInputAll>, HexInputComputed, RecordPropsDefinition<HexInputProps>>;
/**
 * @hidden
 */
declare const HexInput: DefineComponent<HexInputProps, any, HexInputData, HexInputComputed, HexInputMethods, {}, {}, {}, string, HexInputProps, HexInputProps, {}>;
export { HexInput, HexInputVue2 };
