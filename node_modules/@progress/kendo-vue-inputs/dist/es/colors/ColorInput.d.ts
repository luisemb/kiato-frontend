import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { NumericTextBoxChangeEvent } from '../main';
import { RGBA } from './models/rgba';
/**
 * @hidden
 */
export interface ColorInputProps {
    tabIndex?: number;
    rgba: RGBA;
    onRgbaChange?: (rgba: RGBA, event: NumericTextBoxChangeEvent) => void;
    hex: string;
    onHexChange?: any;
    opacity: boolean;
    disabled?: boolean;
}
/**
 * @hidden
 */
export interface ColorInputState {
    lastFocusable: any;
    hexInputId: string;
}
/**
 * @hidden
 */
export interface ColorInputComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ColorInputMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ColorInputData {
}
/**
 * @hidden
 */
export interface ColorInputAll extends Vue2type, ColorInputMethods, ColorInputData, ColorInputComputed, ColorInputState {
}
/**
 * @hidden
 */
declare let ColorInputVue2: ComponentOptions<ColorInputAll, DefaultData<ColorInputData>, DefaultMethods<ColorInputAll>, ColorInputComputed, RecordPropsDefinition<ColorInputProps>>;
/**
 * @hidden
 */
declare const ColorInput: DefineComponent<ColorInputProps, any, ColorInputData, ColorInputComputed, ColorInputMethods, {}, {}, {}, string, ColorInputProps, ColorInputProps, {}>;
export { ColorInput, ColorInputVue2 };
