import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { SignaturePad } from '@progress/kendo-inputs-common';
import { SignatureProps } from './interfaces/SignatureProps';
/**
 * @hidden
 */
export interface SignatureData {
}
export interface SignatureState {
    v3: boolean;
    instance: SignaturePad;
}
/**
 * @hidden
 */
export interface SignatureMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface SignatureComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface SignatureAll extends Vue2type, SignatureMethods, SignatureComputed, SignatureState, SignatureData {
}
/**
 * @hidden
 */
declare let SignatureVue2: ComponentOptions<SignatureAll, DefaultData<SignatureData>, DefaultMethods<SignatureAll>, SignatureComputed, RecordPropsDefinition<SignatureProps>>;
declare const Signature: DefineComponent<SignatureProps, any, SignatureData, SignatureComputed, SignatureMethods, {}, {}, {}, string, SignatureProps, SignatureProps, {}>;
export { Signature, SignatureVue2 };
