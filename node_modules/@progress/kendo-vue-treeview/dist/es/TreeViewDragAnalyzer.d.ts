import { TreeViewItemDragOverEvent, TreeViewItemDragEndEvent } from './events';
/**
 * A class which provides an API for analyzing the `drag` events
 *  of the TreeView.
 *
 * {% meta height:400 %}
 * {% embed_file drag/single/main.vue preview %}
 * {% embed_file drag/single/main.js %}
 * {% endmeta %}
 *
 *  ### destinationMeta <span class='code'>{ itemHierarchicalIndex: string; treeViewGuid: string; }</span>
 *  Returns an object which contains:
 *  * The `itemHierarchicalIndex` of the destination item (the item below the dragged item) and
 *  * The `guid` of the destination TreeView (the TreeView which renders the destination item).
 *
 *  ### isDropAllowed <span class='code'>boolean</span>
 *  Returns `true` if dropping is allowed. Otherwise, returns `false`.
 */
declare class TreeViewDragAnalyzer {
    private event;
    private itemId;
    private treeViewGuid;
    private initialized;
    private destDomNodeWithMeta;
    private destItemId;
    private destTreeViewGuid;
    /**
     * @param event - The event that will be analyzed.
     */
    constructor(event: TreeViewItemDragOverEvent | TreeViewItemDragEndEvent);
    /**
     * The method which initializes the analyzer.
     * Invoke the method before you call any other methods.
     *
     * @returns - The analyzer object of the `drag` event.
     */
    init(): this;
    /**
     * Returns `true` if dropping is allowed. Otherwise, returns `false`.
     */
    get isDropAllowed(): boolean;
    /**
     * Returns an object which contains:
     * * The `itemHierarchicalIndex` of the destination item (the item below the dragged item) and
     * * The `guid` of the destination TreeView (the TreeView which renders the destination item).
     */
    get destinationMeta(): {
        itemHierarchicalIndex: string;
        treeViewGuid: string;
    };
    /**
     * Returns the specific drop operation.
     *
     * @returns - The following values are returned:
     * * `before`&mdash;Indicates that the dragged item is positioned at the beginning of the destination item.
     * * `after`&mdash;Indicates that the dragged item is positioned at the end of the destination item.
     * * `child`&mdash;Indicates that the dragged item is positioned in the middle of the destination item.
     * * `undefined`&mdash;Indicates that dropping is not allowed.
     */
    getDropOperation(): "before" | "after" | "child";
    private setDestimationMeta;
}
export { TreeViewDragAnalyzer };
