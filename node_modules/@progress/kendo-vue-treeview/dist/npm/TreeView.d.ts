import { DefineComponent } from './additionalTypes';
import { RecordPropsDefinition, ComponentOptions } from 'vue/types/options';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { TreeViewProps } from './TreeViewProps';
import FieldsService from './utils/FieldsService';
/**
 * @hidden
 */
export interface TreeViewState {
    blurRequest: any;
    fieldsSvc: FieldsService;
    innerId: string;
    allowExplicitFocus: boolean;
}
/**
 * @hidden
 */
export interface TreeViewComputed {
    [key: string]: any;
    treeGuid: string;
}
/**
 * @hidden
 */
export interface TreeViewMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface TreeViewData {
    focusedItemId?: string;
    focusedItemPublicId?: any;
    tabbableItemId?: string;
}
/**
 * @hidden
 */
export interface TreeViewAll extends Vue, TreeViewMethods, TreeViewData, TreeViewComputed, TreeViewState {
}
/**
 * @hidden
 */
declare let TreeViewVue2: ComponentOptions<TreeViewAll, DefaultData<TreeViewData>, DefaultMethods<TreeViewAll>, TreeViewComputed, RecordPropsDefinition<TreeViewProps>>;
/**
 *
 *
 *  Represents the [Kendo UI for Vue Native TreeView component]({% slug overview_treeview %}).
 *
 *  ```jsx
 *  <template>
 *    <div>
 *      <TreeView :dataItems="tree" />
 *    </div>
 *  </template>
 *
 *  <script>
 *  import { TreeView } from '@progress/kendo-vue-treeview';
 *
 *  export default {
 *    components: {
 *      TreeView,
 *    },
 *    data() {
 *      return {
 *        tree: [
 *          {
 *            text: 'Furniture',
 *            expanded: true,
 *            items: [
 *              {
 *                text: 'Tables & Chairs',
 *              },
 *              {
 *                text: 'Sofas',
 *              },
 *              {
 *                text: 'Occasional Furniture',
 *              },
 *            ],
 *          },
 *          {
 *            text: 'Decor',
 *            expanded: true,
 *            items: [
 *              {
 *                text: 'Bed Linen',
 *              },
 *              {
 *                text: 'Curtains & Blinds',
 *              },
 *              {
 *                text: 'Carpets',
 *              },
 *            ],
 *          },
 *        ],
 *      };
 *    },
 *  };
 *  </script>
 *  ```
 *
 *
 *
 *  ### props <span class='code'>Readonly&lt;[TreeViewProps]({% slug api_treeview_treeviewprops %})&gt;</span>
 *  The props of the TreeView component.
 *
 *  ### guid <span class='code'>string</span>
 *  Returns the `guid` which is associated with the TreeView.
 */
declare const TreeView: DefineComponent<TreeViewProps, any, TreeViewData, TreeViewComputed, TreeViewMethods, {}, {}, {}, string, TreeViewProps, TreeViewProps, {}>;
export { TreeView, TreeViewVue2 };
