import { CompositeFilterDescriptor, SortDescriptor } from '@progress/kendo-data-query';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ExtendedColumnProps } from '../interfaces/ColumnProps';
import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
import { FilterOperators } from '../interfaces/FilterOperators';
/**
 * @hidden
 */
export interface FilterRowProps {
    grid: any;
    columns: ExtendedColumnProps[];
    filter?: CompositeFilterDescriptor | any;
    filterOperators: FilterOperators;
    sort?: SortDescriptor[];
    cellRender?: any;
    isRtl?: boolean;
    ariaRowIndex?: number;
    size?: string;
}
/**
 * @hidden
 */
export interface FilterRowMethods {
    headerCellClassName: (field?: string, locked?: boolean) => string;
    setFilter: (value: string | number, operator: string | Function, field: string | undefined, e: any) => void;
}
/**
 * @hidden
 */
export interface FilterRowAll extends FilterRowProps, FilterRowMethods, Vue2type {
}
/**
 * @hidden
 */
declare let FilterRowVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<FilterRowAll>, {}, RecordPropsDefinition<FilterRowProps>>;
/**
 * @hidden
 */
declare const FilterRow: DefineComponent<FilterRowProps, any, {}, {}, FilterRowMethods, {}, {}, {}, string, FilterRowProps, FilterRowProps, {}>;
export { FilterRow, FilterRowVue2 };
