import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
export interface HeaderThElementProps {
    ariaSort?: string;
    ariaLabel?: string;
    ariaColumnIndex?: number;
    ariaSelected?: boolean;
    colSpan?: number;
    rowSpan?: number;
    role?: string;
    columnId: string;
    navigatable?: boolean;
}
/**
 * @hidden
 */
export interface HeaderThElementMethods extends Vue2type {
    onKeydown: (event: any) => void;
}
/**
 * @hidden
 */
export interface HeaderThElementComputed {
    [key: string]: any;
    thClass: object;
}
/**
 * @hidden
 */
export interface HeaderThElementState {
    _text: string | undefined;
}
/**
 * @hidden
 */
export interface HeaderThElementAll extends HeaderThElementMethods, HeaderThElementState, HeaderThElementComputed {
}
/**
 * @hidden
 */
declare let HeaderThElementVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<HeaderThElementAll>, {}, RecordPropsDefinition<HeaderThElementProps>>;
/**
 * @hidden
 */
declare const HeaderThElement: DefineComponent<HeaderThElementProps, any, {}, {}, HeaderThElementMethods, {}, {}, {}, string, HeaderThElementProps, HeaderThElementProps, {}>;
export { HeaderThElement, HeaderThElementVue2 };
