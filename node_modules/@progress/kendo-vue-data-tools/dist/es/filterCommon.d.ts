import { FilterOperators } from './interfaces/FilterOperators';
import { FilterOperator } from './interfaces/FilterOperator';
/**
 * @hidden
 */
export declare const filterLogicList: {
    text: string;
    operator: string;
}[];
/**
 * @hidden
 */
export declare const operators: FilterOperators;
/**
 * @hidden
 */
export declare const IsUnaryFilter: (operator: string | Function) => boolean;
/**
 * @hidden
 */
export declare const operatorMap: (iterable: Array<any>, service: any) => {
    text: any;
    operator: any;
}[];
/**
 * @hidden
 */
export declare const defaultBooleanOperator: string;
/**
 * @hidden
 */
export declare const booleanFilterValues: ({
    text: string;
    operator: string;
} | {
    text: string;
    operator: boolean;
})[];
/**
 * @hidden
 */
export declare const defaultHideSecondFilter: {
    text: boolean;
    numeric: boolean;
    date: boolean;
    boolean: boolean;
};
/**
 * @hidden
 */
export declare const cellInputChange: (value: any, e: any, props: any) => any;
/**
 * @hidden
 */
export declare const getDefaultOperator: (filterOperators: FilterOperators | FilterOperator[], filterType?: string) => any;
/**
 * @hidden
 */
export declare const getFilterType: (filterType: 'text' | 'numeric' | 'boolean' | 'date' | undefined) => "boolean" | "numeric" | "text" | "date";
/**
 * @hidden
 */
export declare const cellBoolDropdownChange: (value: any, e: any) => {
    value: any;
    operator: string;
    event: any;
};
/**
 * @hidden
 */
export declare const cellOperatorChange: (operator: any, e: any, value: any) => {
    value: any;
    operator: any;
    event: any;
};
