// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { DropDownList } from '@progress/kendo-vue-dropdowns';
import { cellOperatorChange } from '../filterCommon';
/**
 * @hidden
 */
var ColumnMenuFilterOperatorsVue2 = {
  props: {
    filterType: String,
    operator: String,
    operators: Array
  },
  // @ts-ignore
  emits: {
    change: null
  },
  methods: {
    triggerChange: function triggerChange(filter) {
      this.$emit('change', filter);
    },
    operatorChange: function operatorChange(operatorValue, e) {
      var filter = cellOperatorChange(operatorValue.value.operator, e, this.$props.value);
      this.triggerChange(filter);
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    var ddlValue = this.$props.operators.find(function (item) {
      return item.operator === _this.$props.operator;
    }) || null;
    return this.$props.filterType !== 'boolean' ?
    // @ts-ignore
    h(DropDownList, {
      onChange: this.operatorChange,
      on: this.v3 ? undefined : {
        "change": this.operatorChange
      },
      value: ddlValue,
      attrs: this.v3 ? undefined : {
        value: ddlValue,
        "data-items": this.$props.operators,
        textField: "text"
      },
      "data-items": this.$props.operators,
      textField: "text"
    }) : null;
  }
};
/**
 * @hidden
 */
var ColumnMenuFilterOperators = ColumnMenuFilterOperatorsVue2;
export { ColumnMenuFilterOperators, ColumnMenuFilterOperatorsVue2 };