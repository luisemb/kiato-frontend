import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => ColumnMenuData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ColumnMenuProps } from '../interfaces/ColumnMenuProps';
import { CompositeFilterDescriptor } from '@progress/kendo-data-query';
/**
 * @hidden
 */
export interface ColumnMenuMethods extends Vue2type {
    blur: () => void;
    focus: () => void;
    handleFocus: (_: any) => void;
    anchorClick: () => void;
    closeMenu: () => void;
    sortChange: () => void;
    filterChange: (newDescriptor: CompositeFilterDescriptor | null, e: any) => void;
}
/**
 * @hidden
 */
export interface ColumnMenuData {
    show: boolean;
    blurTimeout: any;
}
/**
 * @hidden
 */
export interface ColumnMenuComputed {
    [key: string]: any;
    currentOpen: boolean;
}
/**
 * @hidden
 */
export interface ColumnMenuState {
    _anchor: string;
    _content: any;
    kendoAnchorRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface ColumnMenuAll extends ColumnMenuMethods, ColumnMenuData, ColumnMenuState, ColumnMenuComputed {
}
/**
 * @hidden
 */
declare let ColumnMenuVue2: ComponentOptions<Vue2type, DefaultData<ColumnMenuData>, DefaultMethods<ColumnMenuAll>, {}, RecordPropsDefinition<ColumnMenuProps>>;
/**
 * @hidden
 */
declare const ColumnMenu: DefineComponent<ColumnMenuProps, any, ColumnMenuData, ColumnMenuComputed, ColumnMenuMethods, {}, {}, {}, string, ColumnMenuProps, ColumnMenuProps, {}>;
export { ColumnMenu, ColumnMenuVue2 };
