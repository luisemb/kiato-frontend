import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { CompositeFilterDescriptor } from '@progress/kendo-data-query';
import { GroupChangeEvent, GroupRemoveEvent } from './GroupFilters';
import { FieldSettings } from './FieldSettings';
/**
 * The FilterChangeEvent object.
 */
export interface FilterChangeEvent {
    target: any;
    event: any;
    /**
     * The changed composite filter descriptor.
     */
    filter: CompositeFilterDescriptor;
}
/**
 * The props of the Filter component.
 */
export interface FilterProps {
    /**
     * The fields settings of the Filter.
     */
    fields: Array<FieldSettings>;
    /**
     * The composite filter descriptor value.
     */
    value: CompositeFilterDescriptor;
    /**
     * @hidden
     */
    modelValue?: any;
    /**
     * The Filter onChange event.
     */
    onChange?: (event: FilterChangeEvent) => void;
    /**
     * The initial composite filter descriptor which will be used when a new group is created.
     */
    defaultGroupFilter?: CompositeFilterDescriptor;
    /**
     * Defines the `aria-label` attribute of the upper-most Toolbar that is part of the Filter component .
     */
    upperToolbarAriaLabel?: string;
}
/**
 * @hidden
 */
export interface FilterState {
}
/**
 * @hidden
 */
export interface FilterComputed {
    [key: string]: any;
    computedValue: any;
}
/**
 * @hidden
 */
export interface FilterMethods {
    [key: string]: any;
    onFilterChange: (event: GroupChangeEvent) => void;
    onGroupRemove: (event: GroupRemoveEvent) => void;
}
/**
 * @hidden
 */
export interface FilterData {
}
/**
 * @hidden
 */
export interface FilterAll extends Vue2type, FilterMethods, FilterData, FilterComputed, FilterState {
}
/**
 * @hidden
 */
declare let FilterVue2: ComponentOptions<FilterAll, DefaultData<FilterData>, DefaultMethods<FilterAll>, FilterComputed, RecordPropsDefinition<FilterProps>>;
/**
 * @hidden
 */
declare const Filter: DefineComponent<FilterProps, any, FilterData, FilterComputed, FilterMethods, {}, {}, {}, string, FilterProps, FilterProps, {}>;
export { Filter, FilterVue2 };
