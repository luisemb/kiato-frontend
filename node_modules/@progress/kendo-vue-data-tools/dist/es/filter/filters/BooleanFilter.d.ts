import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { TextFilterProps } from './TextFilter';
/**
 * The props of the BooleanFilter component.
 */
export interface BooleanFilterProps extends TextFilterProps {
    /**
     * A collection of text-value pairs passed to the BooleanFilter DropDownList.
     * Defaults to [ { text: 'True', value: true }, { text: 'False', value: false } ]
     */
    dataItems?: Array<{
        text: string;
        value: any;
    }>;
    /**
     * The defaultItem passed to the BooleanFilter DropDownList.
     */
    defaultItem?: any;
}
/**
 * @hidden
 */
export interface BooleanFilterState {
}
/**
 * @hidden
 */
export interface BooleanFilterComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface BooleanFilterMethods {
    [key: string]: any;
    handleFilterChange: (event: any) => void;
}
/**
 * @hidden
 */
export interface BooleanFilterData {
    currentData: object[];
}
/**
 * @hidden
 */
export interface BooleanFilterAll extends Vue2type, BooleanFilterMethods, BooleanFilterData, BooleanFilterComputed, BooleanFilterState {
}
/**
 * @hidden
 */
declare let BooleanFilterVue2: ComponentOptions<BooleanFilterAll, DefaultData<BooleanFilterData>, DefaultMethods<BooleanFilterAll>, BooleanFilterComputed, RecordPropsDefinition<BooleanFilterProps>>;
/**
 * @hidden
 */
declare const BooleanFilter: DefineComponent<BooleanFilterProps, any, BooleanFilterData, BooleanFilterComputed, BooleanFilterMethods, {}, {}, {}, string, BooleanFilterProps, BooleanFilterProps, {}>;
export { BooleanFilter, BooleanFilterVue2 };
