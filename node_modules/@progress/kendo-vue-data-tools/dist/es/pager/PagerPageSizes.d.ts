import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
import { Page } from './Page';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
export interface PagerPageSizesProps {
    /**
     * The page size selected value.
     */
    value?: string | number;
    /**
     * The page size.
     */
    pageSize: number;
    /**
     * The page sizes.
     */
    pageSizes: number[];
    size?: null | 'small' | 'medium' | 'large' | string;
    /**
     * A map with the messages.
     */
    messagesMap?: (messageKey: string) => ({
        messageKey: string;
        defaultMessage: string;
    });
}
/**
 * @hidden
 */
export interface PagerPageSizesEmits {
    /**
     * The pagechange event.
     */
    pagechange?: (event: Page, e: any) => any;
}
/**
 * @hidden
 */
export interface PagerPageSizesMethods extends Vue2type {
    pageSizeChange: (e: any) => void;
}
/**
 * @hidden
 */
declare let PagerPageSizesVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<PagerPageSizesMethods>, {}, RecordPropsDefinition<PagerPageSizesProps>>;
/**
 * @hidden
 */
declare const PagerPageSizes: DefineComponent<PagerPageSizesProps, any, {}, {}, PagerPageSizesMethods, {}, {}, {}, string, PagerPageSizesProps, PagerPageSizesProps, {}>;
export { PagerPageSizes, PagerPageSizesVue2 };
