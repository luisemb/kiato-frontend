import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
export interface PagerInputProps {
    /**
     * The number of pages.
     */
    totalPages: number;
    /**
     * The current page.
     */
    currentPage: number;
    size?: null | 'small' | 'medium' | 'large' | string;
    /**
     * @hidden
     */
    messagesMap?: (messageKey: string) => ({
        messageKey: string;
        defaultMessage: string;
    });
}
/**
 * @hidden
 */
export interface PagerInputMethods extends Vue2type {
    changeHangler: (e: any) => void;
    blurHandler: () => void;
    value: () => any;
}
/**
 * @hidden
 */
export interface PagerInputState {
    _text: string | undefined;
}
/**
 * @hidden
 */
export interface PagerInputComputed {
    [key: string]: any;
    inputClass: object;
}
/**
 * @hidden
 */
export interface PagerInputAll extends PagerInputMethods, PagerInputState, PagerInputComputed {
}
/**
 * @hidden
 */
declare let PagerInputVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<PagerInputAll>, {}, RecordPropsDefinition<PagerInputProps>>;
/**
 * @hidden
 */
declare const PagerInput: DefineComponent<PagerInputProps, any, {}, {}, PagerInputMethods, {}, {}, {}, string, PagerInputProps, PagerInputProps, {}>;
export { PagerInput, PagerInputVue2 };
