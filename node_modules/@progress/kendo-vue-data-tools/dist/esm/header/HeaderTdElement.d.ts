import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
export interface HeaderTdElementProps {
    ariaColumnIndex?: number;
    colSpan?: number;
    rowSpan?: number;
    role?: string;
    columnId: string;
    navigatable?: boolean;
}
/**
 * @hidden
 */
export interface HeaderTdElementMethods extends Vue2type {
    onKeydown: (event: any) => void;
}
/**
 * @hidden
 */
export interface HeaderTdElementComputed {
    [key: string]: any;
    tdClass: object;
}
/**
 * @hidden
 */
export interface HeaderTdElementState {
    _text: string | undefined;
}
/**
 * @hidden
 */
export interface HeaderTdElementAll extends HeaderTdElementMethods, HeaderTdElementState, HeaderTdElementComputed {
}
/**
 * @hidden
 */
declare let HeaderTdElementVue2: ComponentOptions<Vue2type, DefaultData<{}>, DefaultMethods<HeaderTdElementAll>, {}, RecordPropsDefinition<HeaderTdElementProps>>;
/**
 * @hidden
 */
declare const HeaderTdElement: DefineComponent<HeaderTdElementProps, any, {}, {}, HeaderTdElementMethods, {}, {}, {}, string, HeaderTdElementProps, HeaderTdElementProps, {}>;
export { HeaderTdElement, HeaderTdElementVue2 };
