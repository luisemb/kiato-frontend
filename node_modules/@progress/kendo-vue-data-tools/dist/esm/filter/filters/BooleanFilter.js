// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { EnumFilter } from './EnumFilter.js';
import { filterIsTrue, filterIsFalse } from '../../messages/main.js';
/**
 * @hidden
 */
var BooleanFilterVue2 = {
  name: 'KendoBooleanFilter',
  props: {
    filter: {
      type: Object,
      required: true
    },
    dataItems: {
      type: Array,
      default: function _default() {
        return undefined;
      }
    },
    defaultItem: Object
  },
  data: function data() {
    return {
      currentData: [{
        text: filterIsTrue,
        value: true
      }, {
        text: filterIsFalse,
        value: false
      }]
    };
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    return (
      // @ts-ignore
      h(EnumFilter, {
        filter: this.$props.filter,
        attrs: this.v3 ? undefined : {
          filter: this.$props.filter,
          dataItems: this.$props.dataItems || this.currentData,
          defaultItem: this.$props.defaultItem
        },
        onFilterchange: this.handleFilterChange,
        on: this.v3 ? undefined : {
          "filterchange": this.handleFilterChange
        },
        dataItems: this.$props.dataItems || this.currentData,
        defaultItem: this.$props.defaultItem
      })
    );
  },
  methods: {
    handleFilterChange: function handleFilterChange(event) {
      this.$emit('filterchange', event);
    }
  }
};
/**
 * @hidden
 */
var BooleanFilter = BooleanFilterVue2;
export { BooleanFilter, BooleanFilterVue2 };