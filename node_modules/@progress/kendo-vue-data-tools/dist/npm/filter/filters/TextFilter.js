"use strict";

var __assign = undefined && undefined.__assign || function () {
  __assign = Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TextFilterVue2 = exports.TextFilter = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_inputs_1 = require("@progress/kendo-vue-inputs");
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var main_1 = require("../../messages/main");
/**
 * @hidden
 */
var TextFilterVue2 = {
  name: 'kendoTextFilter',
  props: {
    filter: {
      type: Object,
      required: true
    },
    ariaLabel: String
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var locService = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var _a = this.$props.ariaLabel,
      ariaLabel = _a === void 0 ? locService.toLanguageString(main_1.filterTextFilterAriaLabel, main_1.messages[main_1.filterTextFilterAriaLabel]) : _a;
    return (
      // @ts-ignore
      h(kendo_vue_inputs_1.TextBox, {
        value: this.$props.filter.value || '',
        attrs: this.v3 ? undefined : {
          value: this.$props.filter.value || '',
          ariaLabel: ariaLabel
        },
        onInput: this.onChange,
        on: this.v3 ? undefined : {
          "input": this.onChange
        },
        ariaLabel: ariaLabel
      })
    );
  },
  methods: {
    onChange: function onChange(event) {
      this.$emit('filterchange', {
        nextFilter: __assign(__assign({}, this.$props.filter), {
          value: event.value
        })
      });
    }
  }
};
exports.TextFilterVue2 = TextFilterVue2;
/**
 * @hidden
 */
var TextFilter = TextFilterVue2;
exports.TextFilter = TextFilter;