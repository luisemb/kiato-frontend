"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.PagerNumericButtonsVue2 = exports.PagerNumericButtons = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_buttons_1 = require("@progress/kendo-vue-buttons");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var kendo_vue_intl_1 = require("@progress/kendo-vue-intl");
var main_1 = require("../messages/main");
/**
 * @hidden
 */
var PagerNumericButtonsVue2 = {
  name: 'KendoNumericButtons',
  props: {
    buttonCount: Number,
    totalPages: Number,
    currentPage: Number,
    size: String,
    responsiveSize: String
  },
  inject: {
    kendoLocalizationService: {
      default: null
    }
  },
  computed: {
    start: {
      get: function get() {
        var page = this.$props.currentPage;
        var buttonCount = this.$props.buttonCount;
        if (page > buttonCount) {
          var reminder = page % buttonCount;
          return reminder === 0 ? page - buttonCount + 1 : page - reminder + 1;
        }
        return 1;
      }
    },
    end: {
      get: function get() {
        return Math.min(this.start + this.$props.buttonCount - 1, this.$props.totalPages);
      }
    },
    dropdownClass: function dropdownClass() {
      var _a;
      var size = this.$props.size;
      return _a = {
        'k-picker': true,
        'k-dropdown-list': true,
        'k-dropdown': true,
        'k-rounded-md': true,
        'k-picker-solid': true
      }, _a["k-picker-".concat(kendo_vue_common_1.kendoThemeMaps.sizeMap[size] || size)] = size, _a;
    }
  },
  methods: {
    click: function click(e, page) {
      e.preventDefault();
      this.$emit('pagechange', page, e);
    },
    ddlChange: function ddlChange(event) {
      this.$emit('pagechange', parseInt(event.target.value, 10), event);
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _this = this;
    var h = gh || createElement;
    var localizationService = (0, kendo_vue_intl_1.provideLocalizationService)(this);
    var pagerSmallPageSelectoLabel = this.$props.messagesMap ? this.$props.messagesMap(main_1.pagerSmallPageSelectorAriaLabel) : {
      messageKey: main_1.pagerSmallPageSelectorAriaLabel,
      defaultMessage: main_1.messages[main_1.pagerSmallPageSelectorAriaLabel]
    };
    var prevDots = this.start > 1 &&
    // @ts-ignore function children
    h(kendo_vue_buttons_1.Button, {
      fillMode: 'flat',
      attrs: this.v3 ? undefined : {
        fillMode: 'flat',
        themeColor: 'primary',
        size: this.$props.size,
        rounded: null
      },
      themeColor: 'primary',
      size: this.$props.size,
      rounded: null,
      onClick: function onClick(e) {
        return _this.click(e, _this.start - 1);
      },
      on: this.v3 ? undefined : {
        "click": function onClick(e) {
          return _this.click(e, _this.start - 1);
        }
      }
    }, this.v3 ? function () {
      return ["..."];
    } : ["..."]);
    var postDots = this.end < this.$props.totalPages &&
    // @ts-ignore function children
    h(kendo_vue_buttons_1.Button, {
      fillMode: 'flat',
      attrs: this.v3 ? undefined : {
        fillMode: 'flat',
        themeColor: 'primary',
        size: this.$props.size,
        rounded: null
      },
      themeColor: 'primary',
      size: this.$props.size,
      rounded: null,
      onClick: function onClick(e) {
        return _this.click(e, _this.end + 1);
      },
      on: this.v3 ? undefined : {
        "click": function onClick(e) {
          return _this.click(e, _this.end + 1);
        }
      }
    }, this.v3 ? function () {
      return ["..."];
    } : ["..."]);
    var buttons = [];
    for (var idx = this.start; idx <= this.end; idx++) {
      buttons.push(idx);
    }
    var numerics = buttons.map(function (page) {
      var _this = this;
      return (
        // @ts-ignore function children
        h(kendo_vue_buttons_1.Button, {
          key: page,
          "class": 'k-link',
          onClick: function onClick(e) {
            return _this.click(e, page);
          },
          on: this.v3 ? undefined : {
            "click": function onClick(e) {
              return _this.click(e, page);
            }
          },
          selected: this.$props.currentPage === page,
          attrs: this.v3 ? undefined : {
            selected: this.$props.currentPage === page,
            fillMode: 'flat',
            themeColor: 'primary',
            size: this.$props.size,
            rounded: null,
            role: "button",
            title: 'Page ' + page,
            "aria-current": this.$props.currentPage === page ? true : undefined
          },
          fillMode: 'flat',
          themeColor: 'primary',
          size: this.$props.size,
          rounded: null,
          role: "button",
          title: 'Page ' + page,
          "aria-current": this.$props.currentPage === page ? true : undefined
        }, this.v3 ? function () {
          return [page];
        } : [page])
      );
    }, this);
    var dropdown = function dropdown(currentButtons) {
      return h("select", {
        style: {
          width: '5em',
          margin: '0px 1em',
          display: this.$props.responsiveSize === 'small' ? 'inline-flex' : 'none'
        },
        "class": this.dropdownClass,
        ariaLabel: localizationService.toLanguageString(pagerSmallPageSelectoLabel.messageKey, pagerSmallPageSelectoLabel.defaultMessage),
        attrs: this.v3 ? undefined : {
          ariaLabel: localizationService.toLanguageString(pagerSmallPageSelectoLabel.messageKey, pagerSmallPageSelectoLabel.defaultMessage)
        },
        onChange: this.ddlChange,
        on: this.v3 ? undefined : {
          "change": this.ddlChange
        }
      }, [currentButtons.map(function (cb) {
        return h("option", {
          value: this.v3 ? cb : null,
          domProps: this.v3 ? undefined : {
            "value": cb,
            "selected": cb === this.$props.currentPage
          },
          selected: this.v3 ? cb === this.$props.currentPage : null
        }, [cb]);
      }, this)]);
    };
    return h("div", {
      "class": "k-pager-numbers-wrap"
    }, [h("div", {
      "class": "k-pager-numbers",
      style: {
        display: this.$props.responsiveSize !== 'small' ? '' : 'none'
      }
    }, [prevDots, numerics, postDots]), dropdown.call(this, buttons)]);
  }
};
exports.PagerNumericButtonsVue2 = PagerNumericButtonsVue2;
/**
 * @hidden
 */
var PagerNumericButtons = PagerNumericButtonsVue2;
exports.PagerNumericButtons = PagerNumericButtons;