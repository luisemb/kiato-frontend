import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { CompositeFilterDescriptor } from '@progress/kendo-data-query';
import { ColumnMenuFilterBaseProps } from '../interfaces/ColumnMenuFilterBaseProps';
/**
 * The props of the ColumnMenuFilter component.
 */
export interface ColumnMenuCheckboxFilterProps extends ColumnMenuFilterBaseProps {
    /**
     * Controls the expand state of the filter component.
     */
    expanded?: boolean;
    /**
     * Sets the items collection that will be rendered by the ColumnMenuCheckboxFilter component.
     */
    dataItems: Array<string | object>;
    /**
     * Triggered on each subsequent expand state of the filter component.
     */
    expandchange?: (nextExpandState: boolean) => void;
    /**
     * Defines the component that will be rendered as a search box.
     */
    searchBox?: any;
    /**
     * Determines if the data in the component will be unique. By default the property is set to true.
     */
    uniqueData?: boolean;
}
/**
 * @hidden
 */
export interface ColumnMenuFilterStateProps {
    expanded: boolean;
    value: string;
    dataItems: Array<string | object>;
    dataFromProps: Array<string | object>;
    currentFilter: CompositeFilterDescriptor;
}
/**
 * @hidden
 */
export interface ColumnMenuCheckboxFilterMethods extends Vue2type {
    defaultFilter: () => CompositeFilterDescriptor;
    parseData: (originalData: any, isUnique: any) => any;
    getFilterIndex: () => number;
    onFilterExpand: () => void;
    handleSearchChange: (e: any) => void;
    clear: (e: any) => void;
    submit: (e: any) => void;
    handleCheckBoxChange: (e: any, value: any) => void;
    isAllSelected: () => void;
}
/**
 * @hidden
 */
export interface ColumnMenuCheckboxFilterState {
    compositeFilterIndex: number;
}
/**
 * @hidden
 */
export interface ColumnMenuCheckboxFilterData {
    currentExpanded: boolean;
    currentValue: any;
    currentData: any;
    dataFromProps: any;
    currentFilter: any;
}
/**
 * @hidden
 */
export interface ColumnMenuCheckboxFilterAll extends ColumnMenuCheckboxFilterMethods, ColumnMenuCheckboxFilterData, ColumnMenuCheckboxFilterState {
}
/**
 * @hidden
 */
declare let ColumnMenuCheckboxFilterVue2: ComponentOptions<Vue2type, DefaultData<ColumnMenuCheckboxFilterData>, DefaultMethods<ColumnMenuCheckboxFilterAll>, {}, RecordPropsDefinition<ColumnMenuCheckboxFilterProps>>;
/**
 * @hidden
 */
declare const ColumnMenuCheckboxFilter: DefineComponent<ColumnMenuCheckboxFilterProps, any, ColumnMenuCheckboxFilterData, {}, ColumnMenuCheckboxFilterMethods, {}, {}, {}, string, ColumnMenuCheckboxFilterProps, ColumnMenuCheckboxFilterProps, {}>;
export { ColumnMenuCheckboxFilter, ColumnMenuCheckboxFilterVue2 };
