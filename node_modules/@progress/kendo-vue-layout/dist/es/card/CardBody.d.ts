import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { CardBodyProps } from './interfaces/CardBodyProps';
/**
 * @hidden
 */
interface CardBodyState {
}
/**
 * @hidden
 */
interface CardBodyData {
}
/**
 * @hidden
 */
export interface CardBodyMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CardBodyComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface CardBodyAll extends CardBodyMethods, CardBodyState, CardBodyData, CardBodyComputed, Vue2type {
}
/**
 * @hidden
 */
declare const CardBodyVue2: ComponentOptions<Vue2type, DefaultData<CardBodyData>, DefaultMethods<CardBodyAll>, CardBodyComputed, RecordPropsDefinition<CardBodyProps>>;
/**
 * @hidden
 */
declare const CardBody: DefineComponent<CardBodyProps, any, CardBodyData, CardBodyComputed, CardBodyMethods, {}, {}, {}, string, CardBodyProps, CardBodyProps, {}>;
export { CardBody, CardBodyVue2 };
