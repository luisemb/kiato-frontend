import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { MenuItemInternalModel, MenuItemModel } from '../models/MenuItemModel';
import { MenuProps } from '../MenuProps';
import { MouseOverHandler } from '../utils/MouseOverHandler';
/**
 * @hidden
 */
export interface MenuState {
    itemHoverRequest: any;
    itemLeaveRequest: any;
    menuWrapperEl: any;
    guid: string;
    directionHolder: any;
    inputItems: MenuItemModel[];
    currentItems: MenuItemInternalModel[];
    mouseOverHandler: MouseOverHandler;
}
/**
 * @hidden
 */
export interface MenuComputed {
    menuClassName: object;
}
/**
 * @hidden
 */
export interface MenuMethods {
    [key: string]: any;
    reset: () => void;
    onKeyDown: (event: any) => void;
    onItemMouseOver: (itemId: string) => void;
    onItemMouseLeave: (itemId: string) => void;
    onItemMouseDown: () => void;
    onItemFocus: (itemId: string) => void;
    onItemClick: (event: any, itemId: string) => void;
    onItemBlur: (itemId: string) => void;
    getInputItem: (itemId: string) => void;
    setFocusedItemId: (focusedItemId: string) => void;
    setHoveredItemId: (hoveredItemId: string) => void;
    getMenuWrapperClassName: () => object;
    clearItemHoverAndLeaveRequestsIfApplicable: () => void;
    isItemWithDefaultClose: (itemId: string) => boolean;
    checkIsDirectionRightToLeft: () => any;
    prepareItems: () => void;
    dispatchSelectEventIfWired: (event: any, itemId: string) => void;
}
/**
 * @hidden
 */
export interface MenuData {
    focusedItemId: string;
    hoveredItemId: string;
    tabbableItemId: string;
    isFirstRender: boolean;
}
/**
 * @hidden
 */
export interface MenuAll extends Vue2type, MenuMethods, MenuData, MenuComputed, MenuState {
}
/**
 * @hidden
 */
declare let MenuVue2: ComponentOptions<MenuAll, DefaultData<MenuData>, DefaultMethods<MenuAll>, MenuComputed, RecordPropsDefinition<MenuProps>>;
/**
 *
 * Represents the [Kendo UI for Vue Menu component]({% slug overview_menu %}).
 *
 *
 * ### props <span class='code'>Readonly&lt;[MenuProps]({% slug api_layout_menuprops %})&gt;</span>
 * The props of the Menu component.
 *
 */
declare const Menu: DefineComponent<MenuProps, any, MenuData, MenuComputed, MenuMethods, {}, {}, {}, string, MenuProps, MenuProps, {}>;
export { Menu, MenuVue2 };
