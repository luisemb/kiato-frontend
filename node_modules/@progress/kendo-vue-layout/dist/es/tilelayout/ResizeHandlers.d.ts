declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
/**
 * @hidden
 */
export interface ResizeHandlersProps {
    direction: string;
    onResize?: (e: any, args: {
        end: boolean;
        direction: any;
    }) => void;
    onPress?: (e: any) => void;
    rtl: boolean;
}
/**
 * @hidden
 */
interface ResizeHandlersState {
}
/**
 * @hidden
 */
interface ResizeHandlersData {
}
/**
 * @hidden
 */
export interface ResizeHandlersMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ResizeHandlersComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ResizeHandlersAll extends ResizeHandlersMethods, ResizeHandlersState, ResizeHandlersData, ResizeHandlersComputed, Vue2type {
}
/**
 * @hidden
 */
declare const ResizeHandlersVue2: ComponentOptions<Vue2type, DefaultData<ResizeHandlersData>, DefaultMethods<ResizeHandlersAll>, ResizeHandlersComputed, RecordPropsDefinition<ResizeHandlersProps>>;
/**
 * @hidden
 */
declare const ResizeHandlers: DefineComponent<ResizeHandlersProps, any, ResizeHandlersData, ResizeHandlersComputed, ResizeHandlersMethods, {}, {}, {}, string, ResizeHandlersProps, ResizeHandlersProps, {}>;
export { ResizeHandlers, ResizeHandlersVue2 };
