import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { StepperProps } from './interfaces/StepperProps';
/**
 * @hidden
 */
export interface StepperState {
}
/**
 * @hidden
 */
export interface StepperComputed {
    [key: string]: any;
    computedValue: number;
}
/**
 * @hidden
 */
export interface StepperMethods {
    [key: string]: any;
    setStepper: () => void;
}
/**
 * @hidden
 */
export interface StepperData {
    focusedIdx: number;
    currentDir: string;
}
/**
 * @hidden
 */
export interface StepperAll extends Vue2type, StepperMethods, StepperData, StepperComputed, StepperState {
}
/**
 * @hidden
 */
declare let StepperVue2: ComponentOptions<StepperAll, DefaultData<StepperData>, DefaultMethods<StepperAll>, StepperComputed, RecordPropsDefinition<StepperProps>>;
/**
 * Represents the [Kendo UI for Vue Stepper component]({% slug overview_stepper %}).
 *
 * ```jsx
 * <template>
 *    <Stepper :value="value" @change="handleChange" :items="items" />
 * </template>
 *
 * <script>
 * import {
 *  Stepper
 *     } from '@progress/kendo-vue-layout';
 * export default {
 *     components: {
 *        Stepper
 *     },
 *     data () {
 *       return {
 *         value: 0,
 *         items: [
 *           {
 *             label: "Cart",
 *             icon: "cart",
 *           },
 *           {
 *             label: "Delivery Address",
 *             icon: "marker-pin-target",
 *           },
 *           {
 *             label: "Payment Method",
 *             icon: "dollar",
 *           },
 *           {
 *             label: "Preview",
 *             icon: "preview",
 *             optional: true,
 *           },
 *           {
 *             label: "Finish Order",
 *             icon: "track-changes-accept",
 *           },
 *         ]
 *       }
 *     },
 *     methods: {
 *       handleChange (e) {
 *         this.value = e.value;
 *       }
 *     }
 * };
 * </script>
 * ```
 *
 */
declare const Stepper: DefineComponent<StepperProps, any, StepperData, StepperComputed, StepperMethods, {}, {}, {}, string, StepperProps, StepperProps, {}>;
export { Stepper, StepperVue2 };
