declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
import { TileStrictPosition, TileLayoutItem } from './interfaces/main';
/**
 * @hidden
 */
export interface TileProps extends TileLayoutItem {
    update?: (index: number, dRow: number, dCol: number, row: number, col: number) => void;
    index: number;
    defaultPosition: TileStrictPosition;
    ignoreDrag?: (event: any) => boolean;
    tabIndex: number;
    ariaDescribedBy: string;
}
/**
 * @hidden
 */
interface TileState {
}
/**
 * @hidden
 */
interface TileData {
}
/**
 * @hidden
 */
export interface TileMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface TileComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface TileAll extends TileMethods, TileState, TileData, TileComputed, Vue2type {
}
/**
 * @hidden
 */
declare const TileVue2: ComponentOptions<Vue2type, DefaultData<TileData>, DefaultMethods<TileAll>, TileComputed, RecordPropsDefinition<TileProps>>;
/**
 * @hidden
 */
declare const Tile: DefineComponent<TileProps, any, TileData, TileComputed, TileMethods, {}, {}, {}, string, TileProps, TileProps, {}>;
export { Tile, TileVue2 };
