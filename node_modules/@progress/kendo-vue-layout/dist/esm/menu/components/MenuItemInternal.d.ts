import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { MenuItemInternalModel } from '../models/MenuItemModel';
import { BaseMenuItemInternalProps } from './../BaseMenuItemInternalProps';
/**
 * @hidden
 */
export interface MenuItemInternalProps extends BaseMenuItemInternalProps {
    item: MenuItemInternalModel;
}
/**
 * @hidden
 */
export interface MenuItemInternalState {
    itemElement: any;
    isFirstRender: boolean;
    prevFocusedItemId?: string;
    kendoAnchorRef: any;
    _anchor: string;
}
/**
 * @hidden
 */
export interface MenuItemInternalComputed {
    currentItemRender: any;
    currentLinkRender: any;
    contentRender: any;
    currentOpened: boolean;
    currentFocused: boolean;
    popupClassName: string;
    menuItemClassName: object;
    hasItems: boolean;
}
/**
 * @hidden
 */
export interface MenuItemInternalMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface MenuItemInternalData {
    opened: boolean;
}
/**
 * @hidden
 */
export interface MenuItemInternalAll extends Vue2type, MenuItemInternalMethods, MenuItemInternalData, MenuItemInternalComputed, MenuItemInternalState {
}
/**
 * @hidden
 */
declare let MenuItemInternalVue2: ComponentOptions<MenuItemInternalAll, DefaultData<MenuItemInternalData>, DefaultMethods<MenuItemInternalAll>, MenuItemInternalComputed, RecordPropsDefinition<MenuItemInternalProps>>;
/**
 * @hidden
 */
declare const MenuItemInternal: DefineComponent<MenuItemInternalProps, any, MenuItemInternalData, MenuItemInternalComputed, MenuItemInternalMethods, {}, {}, {}, string, MenuItemInternalProps, MenuItemInternalProps, {}>;
export { MenuItemInternal, MenuItemInternalVue2 };
