// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { Icon } from '@progress/kendo-vue-common';
import { getChildrenPosition } from '../utils/misc.js';
/**
 * @hidden
 */
export var downArrowClass = 'caret-alt-down';
/**
 * @hidden
 */
export var rightArrowClass = 'caret-alt-right';
/**
 * @hidden
 */
export var leftArrowClass = 'caret-alt-left';
/**
 * @hidden
 */
var MenuItemArrowVue2 = {
  name: 'KendoMenuItemArrow',
  props: {
    itemId: String,
    dir: String,
    verticalMenu: Boolean
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    return h("span", {
      "class": "k-menu-expand-arrow",
      "aria-hidden": "true",
      attrs: this.v3 ? undefined : {
        "aria-hidden": "true"
      }
    }, [h(Icon, {
      name: this.getArrowName(),
      attrs: this.v3 ? undefined : {
        name: this.getArrowName(),
        role: "presentation"
      },
      role: "presentation"
    })]);
  },
  methods: {
    getArrowName: function getArrowName() {
      var childrenPosition = getChildrenPosition(this.$props.itemId, this.$props.verticalMenu === true, this.$props.dir === 'rtl');
      return childrenPosition === 'downward' ? downArrowClass : childrenPosition === 'rightward' ? rightArrowClass : childrenPosition === 'leftward' ? leftArrowClass : '';
    }
  }
};
/**
 * @hidden
 */
var MenuItemArrow = MenuItemArrowVue2;
export { MenuItemArrow, MenuItemArrowVue2 };