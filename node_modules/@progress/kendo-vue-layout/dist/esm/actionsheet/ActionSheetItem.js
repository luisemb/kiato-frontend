// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { Icon, getTemplate } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var ActionSheetItemVue2 = {
  name: 'KendoActionSheetItem',
  // @ts-ignore
  emits: {
    click: null
  },
  props: {
    description: String,
    disabled: Boolean,
    group: {
      type: String,
      validator: function validator(value) {
        return ['top', 'bottom', undefined].includes(value);
      }
    },
    item: Object,
    icon: String,
    svgIcon: Object,
    iconColor: String,
    iconSize: String,
    content: [String, Function, Object],
    title: String
  },
  computed: {
    wrapperClass: function wrapperClass() {
      return {
        'k-actionsheet-item': true,
        'k-cursor-pointer': true,
        'k-disabled': this.$props.disabled
      };
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var itemContent = getTemplate.call(this, {
      h: h,
      template: this.$props.content,
      defaultRendering: null,
      additionalProps: {
        item: this.$props.item
      }
    });
    return h("span", {
      tabIndex: this.$props.tabIndex,
      attrs: this.v3 ? undefined : {
        tabIndex: this.$props.tabIndex,
        role: "button",
        "aria-disabled": this.$props.disabled
      },
      "class": this.wrapperClass,
      role: "button",
      "aria-disabled": this.$props.disabled,
      onClick: this.onClick,
      on: this.v3 ? undefined : {
        "click": this.onClick
      }
    }, [h("span", {
      "class": "k-actionsheet-action"
    }, [this.$props.content ? itemContent : [(this.$props.icon || this.$props.svgIcon) && h("span", {
      className: "k-icon-wrap",
      attrs: this.v3 ? undefined : {
        className: "k-icon-wrap"
      }
    }, [h(Icon, {
      name: this.$props.icon,
      attrs: this.v3 ? undefined : {
        name: this.$props.icon,
        icon: this.$props.svgIcon,
        size: this.iconSize
      },
      icon: this.$props.svgIcon,
      "class": 'k-actionsheet-item-icon',
      size: this.iconSize,
      style: {
        color: this.iconColor
      }
    })]), (this.$props.title || this.$props.description) && h("span", {
      "class": "k-actionsheet-item-text"
    }, [this.$props.title && h("span", {
      "class": "k-actionsheet-item-title"
    }, [this.$props.title]), this.$props.description && h("span", {
      "class": "k-actionsheet-item-description"
    }, [this.$props.description])])]])]);
  },
  methods: {
    onClick: function onClick(event) {
      this.$emit('click', {
        syntheticEvent: event,
        item: this.$props.item,
        title: this.$props.title
      });
    }
  }
};
/**
 * @hidden
 */
var ActionSheetItem = ActionSheetItemVue2;
export { ActionSheetItem, ActionSheetItemVue2 };