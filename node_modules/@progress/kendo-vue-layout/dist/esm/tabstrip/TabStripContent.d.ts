import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * The props that are passed to the TabStripContent by the TabStrip.
 */
export interface TabStripContentProps {
    /**
     * Defines whether the content appearance will be animated.
     */
    animation?: boolean;
    /**
     * Defines whether to render all the tabs.
     */
    showAll?: boolean;
    /**
     * The index of the selected tab. Used to indicate which child to render.
     */
    selected?: number;
    /**
     * The tabs collection.
     */
    tabs?: Array<any>;
    /**
     * @hidden
     */
    index?: number;
    /**
     * @hidden
     */
    keepTabsMounted?: boolean;
    /**
     * @hidden
     */
    hasTabs?: boolean;
}
/**
 * @hidden
 */
interface TabStripContentState {
    contentId: string;
    v3: boolean;
}
/**
 * @hidden
 */
interface TabStripContentData {
}
/**
 * @hidden
 */
export interface TabStripContentMethods {
    [key: string]: any;
    addTab: () => void;
    removeTab: (id: string) => void;
    getTabs: (tabs: any[], children: any) => any;
}
/**
 * @hidden
 */
export interface TabStripContentComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface TabStripContentAll extends TabStripContentMethods, TabStripContentState, TabStripContentData, TabStripContentComputed, Vue2type {
}
/**
 * @hidden
 */
declare let TabStripContentVue2: ComponentOptions<Vue2type, DefaultData<TabStripContentData>, DefaultMethods<TabStripContentAll>, TabStripContentComputed, RecordPropsDefinition<TabStripContentProps>>;
/**
 * @hidden
 */
declare const TabStripContent: DefineComponent<TabStripContentProps, any, TabStripContentData, TabStripContentComputed, TabStripContentMethods, {}, {}, {}, string, TabStripContentProps, TabStripContentProps, {}>;
export { TabStripContent, TabStripContentVue2 };
