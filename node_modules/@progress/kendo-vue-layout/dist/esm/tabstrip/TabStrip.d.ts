import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { TabStripTabProperties } from './TabStripTab';
/**
 * The arguments that are passed to the `onSelect` callback function of the TabStrip.
 */
export interface TabStripSelectEventArguments {
    /**
     * The index of the selected TabStrip tab.
     */
    selected: number;
}
/**
 * Represents the emits of the [Kendo UI for Vue TabStrip component]({% slug overview_tabstrip %}).
 */
export interface TabStripEmits {
    /**
     * Fires each time the user makes a selection.
     */
    onSelect?: (e: TabStripSelectEventArguments) => void;
}
/**
 * Represents the props of the [Kendo UI for Vue TabStrip component]({% slug overview_tabstrip %}).
 */
export interface TabStripProps extends TabStripEmits {
    /**
     * Enables the tab animation.
     */
    animation?: boolean;
    /**
     * Sets the index of the selected TabStripTab component
     * ([see example]({% slug tabs_tabstrip %}#toc-tabs-on-initial-loading)).
     */
    selected?: number;
    /**
     * Sets the style of the TabStripContent component.
     */
    tabContentStyle?: any;
    /**
     * The position in which the TabStripNavigation components will be rendered.
     *
     * The available options are:
     * - `"top"`&mdash;Renders the `TabStripNavigation` components to the top of the TabStrip.
     * - `"bottom"`&mdash;Renders the `TabStripNavigation` components to the bottom of the TabStrip.
     * - `"left"`&mdash;Renders the `TabStripNavigation` components to the left of the TabStrip.
     * - `"right"`&mdash;Renders the `TabStripNavigation` components to the right of the TabStrip.
     */
    tabPosition?: string;
    /**
     * Sets the array of tabs.
     */
    tabs?: TabStripTabProperties[];
    /**
     * Sets the `tabIndex` of the TabStripNavigation.
     */
    tabIndex?: number;
    /**
     * Sets the direction of the TabStrip component.
     */
    dir?: string;
}
/**
 * @hidden
 */
interface TabStripState {
    keyBinding: Object;
    v3: boolean;
}
/**
 * @hidden
 */
interface TabStripData {
    currentTabs: Array<TabStripTabProperties>;
    currentShowAll: boolean;
}
/**
 * @hidden
 */
export interface TabStripMethods {
    [key: string]: any;
    addRenderTitle: (id: string, renderTitle: any) => void;
    addTab: (newTab: TabStripTabProperties) => void;
    removeTab: (id: string) => void;
    onSelect: (e: number) => void;
    invertKeys: (original: any, inverted: any) => any;
    onKeyDown: (e: any) => void;
    firstNavigatableTab: () => void;
    lastNavigatableTab: () => void;
    prevNavigatableTab: () => void;
    nextNavigatableTab: () => void;
}
/**
 * @hidden
 */
export interface TabStripComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface TabStripAll extends TabStripMethods, TabStripState, TabStripData, TabStripComputed, Vue2type {
}
/**
 * @hidden
 */
declare let TabStripVue2: ComponentOptions<Vue2type, DefaultData<TabStripData>, DefaultMethods<TabStripAll>, TabStripComputed, RecordPropsDefinition<TabStripProps>>;
/**
 * @hidden
 */
declare const TabStrip: DefineComponent<TabStripProps, any, TabStripData, TabStripComputed, TabStripMethods, {}, {}, {}, string, TabStripProps, TabStripProps, {}>;
export { TabStrip, TabStripVue2 };
