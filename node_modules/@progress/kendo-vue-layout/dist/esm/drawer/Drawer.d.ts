import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { DrawerProps } from './interfaces/DrawerProps';
/**
 * The Drawer ref.
 */
export interface DrawerHandle {
    element: HTMLDivElement | null;
    focus: () => void;
}
/**
 * @hidden
 */
export interface DrawerState {
}
/**
 * @hidden
 */
export interface DrawerComputed {
    drawerClassNames: object;
}
/**
 * @hidden
 */
export interface DrawerMethods {
    [key: string]: any;
    focus: (e: any) => void;
}
/**
 * @hidden
 */
export interface DrawerData {
    currentDir: string;
}
/**
 * @hidden
 */
export interface DrawerAll extends Vue2type, DrawerMethods, DrawerData, DrawerComputed, DrawerState {
}
/**
 * @hidden
 */
declare let DrawerVue2: ComponentOptions<DrawerAll, DefaultData<DrawerData>, DefaultMethods<DrawerAll>, DrawerComputed, RecordPropsDefinition<DrawerProps>>;
/**
 * @hidden
 */
declare const Drawer: DefineComponent<DrawerProps, any, DrawerData, DrawerComputed, DrawerMethods, {}, {}, {}, string, DrawerProps, DrawerProps, {}>;
export { Drawer, DrawerVue2 };
