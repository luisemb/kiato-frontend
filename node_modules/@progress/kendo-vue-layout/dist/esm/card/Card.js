// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { cardType } from './interfaces/Enums.js';
import { cardOrientation } from './interfaces/Enums.js';
import { packageMetadata } from '../package-metadata.js';
import { getDefaultSlots, validatePackage } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var CardVue2 = {
  name: 'KendoCard',
  props: {
    dir: String,
    type: {
      type: String,
      default: cardType.DEFAULT,
      validator: function validator(value) {
        return ['default', 'primary', 'info', 'success', 'warning', 'error'].includes(value);
      }
    },
    orientation: {
      type: String,
      default: cardOrientation.VERTICAL,
      validator: function validator(value) {
        return ['horizontal', 'vertical'].includes(value);
      }
    }
  },
  created: function created() {
    validatePackage(packageMetadata);
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  computed: {
    wrapperClass: function wrapperClass() {
      var _a;
      var orientationClass = this.$props.orientation !== cardOrientation.HORIZONTAL ? 'vertical' : 'horizontal';
      return _a = {
        'k-card': true
      }, _a["k-card-".concat(this.$props.type)] = this.$props.type !== cardType.DEFAULT, _a["k-card-".concat(orientationClass)] = true, _a;
    }
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlots = getDefaultSlots(this);
    return h("div", {
      dir: this.$props.dir,
      attrs: this.v3 ? undefined : {
        dir: this.$props.dir
      },
      "class": this.wrapperClass
    }, [defaultSlots]);
  }
};
/**
 * @hidden
 */
var Card = CardVue2;
export { Card, CardVue2 };