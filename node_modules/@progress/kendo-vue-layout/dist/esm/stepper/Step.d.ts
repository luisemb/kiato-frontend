import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { StepProps } from './interfaces/StepProps';
/**
 * @hidden
 */
export interface StepState {
}
/**
 * @hidden
 */
export interface StepComputed {
    itemClassNames: object;
    itemStyles: object;
}
/**
 * @hidden
 */
export interface StepMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface StepData {
}
/**
 * @hidden
 */
export interface StepAll extends Vue2type, StepMethods, StepData, StepComputed, StepState {
}
/**
 * @hidden
 */
declare let StepVue2: ComponentOptions<StepAll, DefaultData<StepData>, DefaultMethods<StepAll>, StepComputed, RecordPropsDefinition<StepProps>>;
/**
 * Represents the [Kendo UI for Vue Step component]({% slug overview_stepper %}).
 *
 * ```jsx
 * <Step v-bind="props" @change="(e) => props.onChange(e)">
 * <span class="k-step-indicator" aria-hidden="true">
 *    <span class="emoji">{{ props.emoji }}</span>
 * </span>
 * <span class="k-step-label">
 *    <span class="k-step-text">{{ props.label }}</span>
 * </span>
 * </Step>
 * ```
 */
declare const Step: DefineComponent<StepProps, any, StepData, StepComputed, StepMethods, {}, {}, {}, string, StepProps, StepProps, {}>;
export { Step, StepVue2 };
