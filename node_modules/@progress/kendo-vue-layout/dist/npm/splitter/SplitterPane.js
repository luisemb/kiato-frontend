"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SplitterPaneVue2 = exports.SplitterPane = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
/**
 * @hidden
 */
var SplitterPaneVue2 = {
  name: 'KendoSplitterPane',
  props: {
    orientation: {
      type: String,
      default: function _default() {
        return undefined;
      },
      validator: function validator(value) {
        return ['vertical', 'horizontal'].includes(value);
      }
    },
    overlay: Boolean,
    containsSplitter: Boolean,
    size: String,
    min: String,
    max: String,
    resizable: Boolean,
    collapsible: Boolean,
    collapsed: Boolean,
    scrollable: Boolean,
    keepMounted: Boolean,
    content: [Object, Function, String]
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var _a;
    var h = gh || createElement;
    var _b = this.$props,
      size = _b.size,
      collapsed = _b.collapsed,
      overlay = _b.overlay,
      containsSplitter = _b.containsSplitter,
      collapsible = _b.collapsible,
      resizable = _b.resizable,
      scrollable = _b.scrollable,
      keepMounted = _b.keepMounted;
    var fixedSize = size && size.length > 0;
    var style = {
      flexBasis: size
    };
    var paneClasses = (0, kendo_vue_common_1.classNames)('k-pane', (_a = {}, _a['k-hidden'] = collapsed, _a['hidden'] = collapsed, _a['k-pane-flex'] = containsSplitter, _a['k-pane-static'] = !resizable && !collapsible || fixedSize, _a['k-scrollable'] = scrollable, _a));
    var content = kendo_vue_common_1.getTemplate.call(this, {
      h: h,
      template: this.$props.content,
      defaultRendering: null
    });
    return h("div", {
      style: style,
      "class": paneClasses,
      role: 'group',
      attrs: this.v3 ? undefined : {
        role: 'group'
      }
    }, [!collapsed || keepMounted ? content : undefined, overlay ? h("div", {
      "class": 'k-splitter-overlay k-overlay'
    }) : undefined]);
  }
};
exports.SplitterPaneVue2 = SplitterPaneVue2;
/**
 * @hidden
 */
var SplitterPane = SplitterPaneVue2;
exports.SplitterPane = SplitterPane;