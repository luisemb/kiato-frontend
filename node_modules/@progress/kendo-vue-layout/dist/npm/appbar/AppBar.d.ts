import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { AppBarProps } from './interfaces/AppBarProps';
/**
 * @hidden
 */
export interface AppBarState {
    calculatedId: string;
}
/**
 * @hidden
 */
export interface AppBarComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface AppBarMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface AppBarData {
}
/**
 * @hidden
 */
export interface AppBarAll extends Vue2type, AppBarMethods, AppBarData, AppBarComputed, AppBarState {
}
/**
 * @hidden
 */
declare let AppBarVue2: ComponentOptions<AppBarAll, DefaultData<AppBarData>, DefaultMethods<AppBarAll>, AppBarComputed, RecordPropsDefinition<AppBarProps>>;
/**
 * @hidden
 */
declare const AppBar: DefineComponent<AppBarProps, any, AppBarData, AppBarComputed, AppBarMethods, {}, {}, {}, string, AppBarProps, AppBarProps, {}>;
export { AppBar, AppBarVue2 };
