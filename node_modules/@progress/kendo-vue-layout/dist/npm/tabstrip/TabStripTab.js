"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabStripTabVue2 = exports.TabStripTab = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var ref = allVue.ref;
var inject = allVue.inject;
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
/**
 * @hidden
 */
var TabStripTabVue2 = {
  name: 'KendoTabStripTab',
  props: {
    disabled: Boolean,
    contentClassName: String,
    title: String,
    id: String,
    titleRender: [String, Function, Object]
  },
  inject: {
    addRenderTitle: {
      default: null
    },
    addTab: {
      default: null
    },
    removeTab: {
      default: null
    }
  },
  created: function created() {
    this.tabId = (0, kendo_vue_common_1.guid)();
    this.addTab({
      title: this.$props.title,
      tabId: this.tabId,
      id: this.id,
      disabled: this.$props.disabled,
      contentClassName: this.$props.contentClassName
    });
  },
  destroyed: !!isV3 ? undefined : function () {
    this.removeTab(this.tabId);
  },
  // @ts-ignore
  unmounted: function unmounted() {
    this.removeTab(this.tabId);
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var titleRender = this.$props.titleRender ? kendo_vue_common_1.templateRendering.call(this, this.$props.titleRender, kendo_vue_common_1.getListeners.call(this)) : null;
    if (titleRender) {
      this.addRenderTitle(this.tabId, titleRender);
    }
    return h("div", [(0, kendo_vue_common_1.getDefaultSlots)(this)]);
  }
};
exports.TabStripTabVue2 = TabStripTabVue2;
/**
 * @hidden
 */
var TabStripTab = TabStripTabVue2;
exports.TabStripTab = TabStripTab;