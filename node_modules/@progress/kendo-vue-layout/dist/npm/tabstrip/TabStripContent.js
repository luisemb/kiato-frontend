"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TabStripContentVue2 = exports.TabStripContent = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var ref = allVue.ref;
var inject = allVue.inject;
var kendo_vue_animation_1 = require("@progress/kendo-vue-animation");
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
var utils_1 = require("./utils");
/**
 * @hidden
 */
var TabStripContentVue2 = {
  name: 'KendoTabStripContent',
  props: {
    showAll: Boolean,
    animation: Boolean,
    tabs: Array,
    selected: Number,
    hasTabs: Boolean
  },
  created: function created() {
    this.contentId = (0, kendo_vue_common_1.guid)();
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  data: function data() {
    return {
      midAnimation: false
    };
  },
  computed: {
    animationClass: function animationClass() {
      var that = this;
      return this.tabs.map(function (_t, idx) {
        var visible = idx === that.$props.selected;
        return {
          'k-fade-appear': that.animation && !visible,
          'k-fade-enter-active': that.animation && visible
        };
      });
    }
  },
  render: function render(createElement) {
    var h = gh || createElement;
    var _a = this.$props,
      tabs = _a.tabs,
      selected = _a.selected,
      showAll = _a.showAll,
      hasTabs = _a.hasTabs;
    var selectedTab = tabs && typeof selected === 'number' && tabs[selected];
    var defaultSlots = (0, kendo_vue_common_1.getDefaultSlots)(this);
    var innerTabs = hasTabs ? tabs : utils_1.getTabs.call(this, [], defaultSlots || []);
    var tabStyles = selected < innerTabs.length && selected > -1;
    var contentClasses = (0, kendo_vue_common_1.classNames)({
      'k-content': tabStyles
    }, {
      'k-active': tabStyles
    }, selectedTab && selectedTab.contentClassName);
    var renderChild = function renderChild(tab, idx) {
      var visible = idx === this.$props.selected;
      var animationStyle = {
        position: 'initial',
        height: visible ? undefined : '0px',
        width: visible ? undefined : '0px'
      };
      var content = hasTabs ? kendo_vue_common_1.getTemplate.call(this, {
        h: h,
        template: tab.content,
        defaultRendering: null,
        additionalProps: {
          dataItem: tab
        }
      }) : tab;
      var tabPanel = h("div", {
        role: 'tabpanel',
        attrs: this.v3 ? undefined : {
          role: 'tabpanel',
          "aria-expanded": true,
          id: String(this.contentId + idx)
        },
        "aria-expanded": true,
        id: String(this.contentId + idx),
        key: idx
      }, [content]);
      return (hasTabs ? this.animation : true) ?
      // @ts-ignore function children
      h(kendo_vue_animation_1.Fade, {
        appear: this.v3 ? true : visible,
        attrs: this.v3 ? undefined : {
          appear: this.v3 ? true : visible,
          enter: this.$props.animation,
          exit: this.$props.keepTabsMounted
        },
        key: idx,
        "class": this.animationClass[idx],
        enter: this.$props.animation,
        exit: this.$props.keepTabsMounted,
        style: animationStyle
      }, this.v3 ? function () {
        return [tabPanel];
      } : [tabPanel]) : h("div", {
        "class": visible ? undefined : 'k-hidden'
      }, [tabPanel]);
    };
    var renderContent = function renderContent() {
      return innerTabs.map(function (tab, idx) {
        return renderChild.call(this, tab, idx);
      }, this);
    };
    return h("div", {
      "class": contentClasses,
      style: this.$props.style
    }, [renderContent.call(this)]);
  }
};
exports.TabStripContentVue2 = TabStripContentVue2;
/**
 * @hidden
 */
var TabStripContent = TabStripContentVue2;
exports.TabStripContent = TabStripContent;