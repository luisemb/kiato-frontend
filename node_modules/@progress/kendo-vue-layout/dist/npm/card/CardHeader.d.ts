import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { CardHeaderProps } from './interfaces/CardHeaderProps';
/**
 * @hidden
 */
interface CardHeaderState {
}
/**
 * @hidden
 */
interface CardHeaderData {
}
/**
 * @hidden
 */
export interface CardHeaderMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CardHeaderComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface CardHeaderAll extends CardHeaderMethods, CardHeaderState, CardHeaderData, CardHeaderComputed, Vue2type {
}
/**
 * @hidden
 */
declare const CardHeaderVue2: ComponentOptions<Vue2type, DefaultData<CardHeaderData>, DefaultMethods<CardHeaderAll>, CardHeaderComputed, RecordPropsDefinition<CardHeaderProps>>;
/**
 * @hidden
 */
declare const CardHeader: DefineComponent<CardHeaderProps, any, CardHeaderData, CardHeaderComputed, CardHeaderMethods, {}, {}, {}, string, CardHeaderProps, CardHeaderProps, {}>;
export { CardHeader, CardHeaderVue2 };
