import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { AvatarProps } from './interfaces/AvatarProps';
/**
 * @hidden
 */
interface AvatarState {
}
/**
 * @hidden
 */
interface AvatarData {
}
/**
 * @hidden
 */
export interface AvatarMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface AvatarComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface AvatarAll extends AvatarMethods, AvatarState, AvatarData, AvatarComputed, Vue2type {
}
/**
 * @hidden
 */
declare const AvatarVue2: ComponentOptions<Vue2type, DefaultData<AvatarData>, DefaultMethods<AvatarAll>, AvatarComputed, RecordPropsDefinition<AvatarProps>>;
/**
 * @hidden
 */
declare let Avatar: DefineComponent<AvatarProps, any, AvatarData, AvatarComputed, AvatarMethods, {}, {}, {}, string, AvatarProps, AvatarProps, {}>;
export { Avatar, AvatarVue2 };
