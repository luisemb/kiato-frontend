import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { CardTitleProps } from './interfaces/CardTitleProps';
/**
 * @hidden
 */
interface CardTitleState {
}
/**
 * @hidden
 */
interface CardTitleData {
}
/**
 * @hidden
 */
export interface CardTitleMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CardTitleComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface CardTitleAll extends CardTitleMethods, CardTitleState, CardTitleData, CardTitleComputed, Vue2type {
}
/**
 * @hidden
 */
declare const CardTitleVue2: ComponentOptions<Vue2type, DefaultData<CardTitleData>, DefaultMethods<CardTitleAll>, CardTitleComputed, RecordPropsDefinition<CardTitleProps>>;
/**
 * @hidden
 */
declare const CardTitle: DefineComponent<CardTitleProps, any, CardTitleData, CardTitleComputed, CardTitleMethods, {}, {}, {}, string, CardTitleProps, CardTitleProps, {}>;
export { CardTitle, CardTitleVue2 };
