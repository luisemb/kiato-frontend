import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { CardActionsProps } from './interfaces/CardActionsProps';
/**
 * @hidden
 */
interface CardActionsState {
}
/**
 * @hidden
 */
interface CardActionsData {
}
/**
 * @hidden
 */
export interface CardActionsMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface CardActionsComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface CardActionsAll extends CardActionsMethods, CardActionsState, CardActionsData, CardActionsComputed, Vue2type {
}
/**
 * @hidden
 */
declare const CardActionsVue2: ComponentOptions<Vue2type, DefaultData<CardActionsData>, DefaultMethods<CardActionsAll>, CardActionsComputed, RecordPropsDefinition<CardActionsProps>>;
/**
 * @hidden
 */
declare let CardActions: DefineComponent<CardActionsProps, any, CardActionsData, CardActionsComputed, CardActionsMethods, {}, {}, {}, string, CardActionsProps, CardActionsProps, {}>;
export { CardActions, CardActionsVue2 };
