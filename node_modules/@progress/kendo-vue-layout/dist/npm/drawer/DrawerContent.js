"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DrawerContentVue2 = exports.DrawerContent = void 0;
// @ts-ignore
var Vue = require("vue");
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
var kendo_vue_common_1 = require("@progress/kendo-vue-common");
/**
 * @hidden
 */
var DrawerContentVue2 = {
  name: 'KendoDrawerContent',
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = (0, kendo_vue_common_1.getDefaultSlots)(this);
    return h("div", {
      "class": 'k-drawer-content'
    }, [defaultSlot]);
  }
};
exports.DrawerContentVue2 = DrawerContentVue2;
/**
 * Represents the [Kendo UI for Vue Drawer component]({% slug overview_drawer %}).
 *
 * ```jsx
 * <template>
 *   <div>
 *     <Drawer
 *       :expanded="expanded"
 *       :position="position"
 *       :mode="mode"
 *       :items="
 *         items.map((item, index) => ({
 *           ...item,
 *           selected: index === selectedId,
 *         }))
 *       "
 *       @select="handleSelect"
 *     >
 *       <DrawerContent>
 *         <k-button @click="handleClick"> Toggle the drawer state </k-button>
 *       </DrawerContent>
 *     </Drawer>
 *   </div>
 * </template>
 *
 * <script>
 * import { Drawer, DrawerContent } from "@progress/kendo-vue-layout";
 * import { Button } from "@progress/kendo-vue-buttons";
 * import "./styles.css";
 *
 * export default {
 *   name: "App",
 *   components: { Drawer, DrawerContent, "k-button": Button },
 *   data() {
 *     return {
 *       items: [
 *         {
 *           text: "Inbox",
 *           icon: "inbox",
 *           selected: true,
 *         },
 *         {
 *           text: "Calendar",
 *           icon: "calendar",
 *         },
 *         {
 *           text: "Attachments",
 *           icon: "hyperlink-email",
 *         },
 *         {
 *           text: "Favourites",
 *           icon: "star-outline",
 *         },
 *       ],
 *       expanded: true,
 *       selectedId: 0,
 *       position: "start",
 *       mode: "push",
 *     };
 *   },
 *   methods: {
 *     handleClick(e) {
 *       this.expanded = !this.expanded;
 *     },
 *     handleSelect(e) {
 *       this.selectedId = e.itemIndex;
 *     },
 *   },
 * };
 * </script>
 * ```
 */
var DrawerContent = DrawerContentVue2;
exports.DrawerContent = DrawerContent;