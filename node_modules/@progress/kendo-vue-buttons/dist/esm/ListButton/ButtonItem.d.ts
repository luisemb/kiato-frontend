import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * The props of the ButtonItem component.
 * The ButtonItem component renders each list item in the dropdown buttons list.
 */
export interface ButtonItemProps {
    focused?: boolean;
    index?: number;
    item?: any;
    render?: any;
    dataItem: any;
    id?: string;
    textField?: string;
}
/**
 * @hidden
 */
export interface ButtonItemState {
}
/**
 * @hidden
 */
export interface ButtonItemComputed {
    [key: string]: any;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface ButtonItemMethods {
    [key: string]: any;
    element: () => HTMLSpanElement | null;
    onClick: (e: any) => void;
    onDown: (e: any) => void;
}
/**
 * @hidden
 */
export interface ButtonItemData {
}
/**
 * @hidden
 */
export interface ButtonItemAll extends Vue2type, ButtonItemMethods, ButtonItemData, ButtonItemComputed, ButtonItemState {
}
/**
 * @hidden
 */
declare let ButtonItemVue2: ComponentOptions<ButtonItemAll, DefaultData<ButtonItemData>, DefaultMethods<ButtonItemAll>, ButtonItemComputed, RecordPropsDefinition<ButtonItemProps>>;
/**
 * @hidden
 */
declare const ButtonItem: DefineComponent<ButtonItemProps, any, ButtonItemData, ButtonItemComputed, ButtonItemMethods, {}, {}, {}, string, ButtonItemProps, ButtonItemProps, {}>;
export { ButtonItem, ButtonItemVue2 };
