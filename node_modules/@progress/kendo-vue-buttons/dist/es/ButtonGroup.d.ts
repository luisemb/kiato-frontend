import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { ButtonGroupInterface } from './ButtonGroupInterface';
/**
 * Represents the props of the [Kendo UI for Vue ButtonGroup component]({% slug overview_buttongroup %}).
 */
export interface ButtonGroupProps extends ButtonGroupInterface {
    /**
     * Sets the `className` of the ButtonGroup component.
     */
    className?: string;
}
/**
 * @hidden
 */
export interface ButtonGroupState {
    v3: boolean;
}
/**
 * @hidden
 */
export interface ButtonGroupMethods {
    [key: string]: any;
    mapButtons: (children: any) => any;
    renderButton: (child: any, index: number, isLast: boolean, isRtl: boolean) => any;
    isValidButton: (child: any) => any;
}
/**
 * @hidden
 */
export interface ButtonGroupData {
}
/**
 * @hidden
 */
export interface ButtonGroupAll extends Vue2type, ButtonGroupMethods, ButtonGroupData, ButtonGroupState {
}
/**
 * @hidden
 */
declare let ButtonGroupVue2: ComponentOptions<ButtonGroupAll, DefaultData<ButtonGroupData>, DefaultMethods<ButtonGroupAll>, {}, RecordPropsDefinition<ButtonGroupProps>>;
/**
 * @hidden
 */
declare const ButtonGroup: DefineComponent<ButtonGroupProps, any, ButtonGroupData, {}, ButtonGroupMethods, {}, {}, {}, string, ButtonGroupProps, ButtonGroupProps, {}>;
export { ButtonGroup, ButtonGroupVue2 };
