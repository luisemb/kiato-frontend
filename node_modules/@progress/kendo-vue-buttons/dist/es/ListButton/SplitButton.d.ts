import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { SplitButtonProps } from './models/ListButtonProps';
/**
 * @hidden
 */
export interface SplitButtonData {
    focusedIndex?: number;
    focused?: boolean;
    currentOpened: boolean;
}
/**
 * @hidden
 */
export interface SplitButtonComputed {
    [key: string]: any;
    computedOpened: boolean;
    wrapperClass: object;
}
/**
 * @hidden
 */
export interface SplitButtonMethods {
    [key: string]: any;
    element: () => HTMLButtonElement | null;
    onKeyDown: (event: any) => void;
    onFocus: (event: any) => void;
    onBlur: (event: any) => void;
    onItemClick: (event: any, clickedItemIndex: number) => void;
    onItemDown: (event: any) => void;
    mouseDown: (event: any) => void;
    dispatchClickEvent: (dispatchedEvent: any, index: number) => void;
    onClickMainButton: () => void;
    onDownSplitPart: () => void;
    onSplitPartClick: (event: any) => void;
    dispatchPopupEvent: (dispatchedEvent: any, open: boolean) => void;
    isItemDisabled: (index: number) => boolean;
    isRtl: () => boolean;
}
/**
 * @hidden
 */
export interface SplitButtonState {
    mainButton: any;
    guid: string;
    buttonsData: Array<any>;
    _anchor: string;
    kendoAnchorRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface SplitButtonAll extends Vue2type, SplitButtonMethods, SplitButtonData, SplitButtonComputed, SplitButtonState {
}
/**
 * @hidden
 */
declare let SplitButtonVue2: ComponentOptions<SplitButtonAll, DefaultData<SplitButtonData>, DefaultMethods<SplitButtonAll>, SplitButtonComputed, RecordPropsDefinition<SplitButtonProps>>;
/**
 * @hidden
 */
declare const SplitButton: DefineComponent<SplitButtonProps, any, SplitButtonData, SplitButtonComputed, SplitButtonMethods, {}, {}, {}, string, SplitButtonProps, SplitButtonProps, {}>;
export { SplitButton, SplitButtonVue2 };
