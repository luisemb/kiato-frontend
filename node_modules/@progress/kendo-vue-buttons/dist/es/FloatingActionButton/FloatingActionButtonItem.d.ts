import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { SVGIcon } from '@progress/kendo-vue-common';
/**
 * The FloatingActionButtonItemHandle ref.
 */
export interface FloatingActionButtonItemHandle {
    /**
     * The FloatingActionButtonItemHandle element.
     */
    element: HTMLLIElement | null;
    /**
     * Focus the FloatingActionButtonItem.
     */
    focus: () => void;
}
/**
 * Represents the props of the
 * [Kendo UI for Vue FloatingActionButtonItem component]({% slug overview_floatingactionbutton %}).
 */
export interface FloatingActionButtonItemProps {
    /**
     * Specifies if the Floating Action Button Item
     * is disabled [see example]({% slug disabled_floatingactionbuttonitem %}).
     * Defaults to `false`.
     */
    disabled?: boolean;
    /**
     * Sets the index of the Floating Action Button Item that is used to identify it.
     */
    index?: number;
    /**
     * Defines the icon rendered in the FloatingActionButtonItem
     * [see example]({% slug databinding_floatingactionbutton %}).
     */
    icon?: string;
    /**
     * Defines the svg icon in a Kendo UI for Vue theme.
     */
    svgIcon?: SVGIcon;
    /**
     * Specifies the text of the FloatingActionButtonItem
     * [see example]({% slug databinding_floatingactionbutton %}).
     */
    text?: string;
    /**
     * Sets the `tabIndex` property of the FloatingActionButtonItem..
     * Defaults to `0`.
     */
    tabIndex?: number;
    /**
     * Sets a custom property. Contained in the FloatingActionButtonItem props that are
     * returned from the `onItemClick` FloatingActionButton event
     * [see example]({% slug customization_floatingactionbutton %}#toc-items-rendering).
     */
    [customProp: string]: any;
    /**
     * @hidden
     */
    id?: string;
    /**
     * @hidden
     */
    dataItem?: any;
    /**
     * @hidden
     */
    item?: any;
    /**
     * @hidden
     */
    focused?: boolean;
    /**
     * @hidden
     */
    onDown?: (event: any) => void;
    /**
     * @hidden
     */
    onClick?: (event: any, index: number) => void;
}
/**
 * @hidden
 */
export interface FloatingActionButtonItemMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FloatingActionButtonItemState {
    v3: boolean;
    target: any;
    currentRtl: boolean;
}
/**
 * @hidden
 */
export interface FloatingActionButtonItemData {
}
/**
 * @hidden
 */
export interface FloatingActionButtonItemComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface FloatingActionButtonItemAll extends FloatingActionButtonItemMethods, FloatingActionButtonItemState, FloatingActionButtonItemData, FloatingActionButtonItemComputed, Vue2type {
}
/**
 * @hidden
 */
declare let FloatingActionButtonItemVue2: ComponentOptions<Vue2type, DefaultData<FloatingActionButtonItemData>, DefaultMethods<FloatingActionButtonItemAll>, FloatingActionButtonItemComputed, RecordPropsDefinition<FloatingActionButtonItemProps>>;
/**
 * @hidden
 */
declare const FloatingActionButtonItem: DefineComponent<FloatingActionButtonItemProps, any, FloatingActionButtonItemData, FloatingActionButtonItemComputed, FloatingActionButtonItemMethods, {}, {}, {}, string, FloatingActionButtonItemProps, FloatingActionButtonItemProps, {}>;
export { FloatingActionButtonItem, FloatingActionButtonItemVue2 };
