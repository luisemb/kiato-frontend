import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => UploadAddButtonData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { UploadAsyncProps } from './interfaces/UploadAsyncProps';
/**
 * @hidden
 */
export interface UploadAddButtonProps {
    addButtonIndex: number;
    navigationIndex: number | undefined;
    notFocusedIndex: number | undefined;
    tabIndex?: number;
    async: UploadAsyncProps;
    multiple?: boolean;
    disabled?: boolean;
    accept?: string;
    id?: string;
}
/**
 * @hidden
 */
export interface UploadAddButtonMethods {
    [key: string]: any;
    focus: () => any;
    onClick: () => any;
    actionElement: () => any;
}
/**
 * @hidden
 */
export interface UploadAddButtonState {
    _prevNavigationIndex: number;
    element: HTMLDivElement | null;
    uploadInput: any | null;
    elementRef: any;
    uploadInputRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface UploadAddButtonData {
}
/**
 * @hidden
 */
export interface UploadAddButtonComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface UploadAddButtonAll extends UploadAddButtonMethods, UploadAddButtonState, UploadAddButtonData, UploadAddButtonComputed, Vue2type {
}
/**
 * @hidden
 */
declare let UploadAddButtonVue2: ComponentOptions<Vue2type, DefaultData<UploadAddButtonData>, DefaultMethods<UploadAddButtonAll>, UploadAddButtonComputed, RecordPropsDefinition<UploadAddButtonProps>>;
/**
 * @hidden
 */
declare const UploadAddButton: DefineComponent<UploadAddButtonProps, any, UploadAddButtonData, UploadAddButtonComputed, UploadAddButtonMethods, {}, {}, {}, string, UploadAddButtonProps, UploadAddButtonProps, {}>;
export { UploadAddButton, UploadAddButtonVue2 };
