import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => UploadListData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { GroupedFiles } from './interfaces/FileGroup';
import { UploadAsyncProps } from './interfaces/UploadAsyncProps';
/**
 * @hidden
 */
export interface UploadListProps {
    groupedFiles: GroupedFiles;
    async: UploadAsyncProps;
    disabled: boolean;
    navigationIndex?: number;
    list?: any;
}
/**
 * @hidden
 */
export interface UploadListMethods {
    [key: string]: any;
    onRetry: (uid: string) => void;
    onRemove: (uid: string) => void;
    onCancel: (uid: string) => void;
}
/**
 * @hidden
 */
export interface UploadListState {
    v3: boolean;
    _input: HTMLInputElement | null;
}
/**
 * @hidden
 */
export interface UploadListData {
}
/**
 * @hidden
 */
export interface UploadListComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface UploadListAll extends UploadListMethods, UploadListState, UploadListData, UploadListComputed, Vue2type {
}
/**
 * @hidden
 */
declare let UploadListVue2: ComponentOptions<Vue2type, DefaultData<UploadListData>, DefaultMethods<UploadListAll>, UploadListComputed, RecordPropsDefinition<UploadListProps>>;
/**
 * @hidden
 */
declare const UploadList: DefineComponent<UploadListProps, any, UploadListData, UploadListComputed, UploadListMethods, {}, {}, {}, string, UploadListProps, UploadListProps, {}>;
export { UploadList, UploadListVue2 };
