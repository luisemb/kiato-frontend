import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => UploadActionButtonsData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface UploadActionButtonsProps {
    disabled: boolean;
    navigationIndex?: number;
    clearButtonIndex: number;
    uploadButtonIndex: number;
    actionsLayout: string;
}
/**
 * @hidden
 */
export interface UploadActionButtonsMethods {
    [key: string]: any;
    onClearClick: () => any;
    onUploadClick: () => any;
}
/**
 * @hidden
 */
export interface UploadActionButtonsState {
    _prevNavigationIndex?: number;
    _uploadElement: HTMLButtonElement | null;
    _clearElement: HTMLButtonElement | null;
    clearElementRef: any;
    uploadElementRef: any;
    v3: boolean;
}
/**
 * @hidden
 */
export interface UploadActionButtonsData {
}
/**
 * @hidden
 */
export interface UploadActionButtonsComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface UploadActionButtonsAll extends UploadActionButtonsMethods, UploadActionButtonsState, UploadActionButtonsData, UploadActionButtonsComputed, Vue2type {
}
/**
 * @hidden
 */
declare let UploadActionButtonsVue2: ComponentOptions<Vue2type, DefaultData<UploadActionButtonsData>, DefaultMethods<UploadActionButtonsAll>, UploadActionButtonsComputed, RecordPropsDefinition<UploadActionButtonsProps>>;
/**
 * @hidden
 */
declare const UploadActionButtons: DefineComponent<UploadActionButtonsProps, any, UploadActionButtonsData, UploadActionButtonsComputed, UploadActionButtonsMethods, {}, {}, {}, string, UploadActionButtonsProps, UploadActionButtonsProps, {}>;
export { UploadActionButtons, UploadActionButtonsVue2 };
