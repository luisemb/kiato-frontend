import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * @hidden
 */
export interface UploadStatusProps {
    isUploading: boolean;
    isUploaded: boolean;
    isUploadFailed: boolean;
}
/**
 * @hidden
 */
export interface UploadStatusMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface UploadStatusState {
    v3: boolean;
    _uploadUI: any;
    _navIndex: number;
    _blurTimeout: number | undefined;
}
/**
 * @hidden
 */
export interface UploadStatusData {
}
/**
 * @hidden
 */
export interface UploadStatusComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface UploadStatusAll extends UploadStatusMethods, UploadStatusState, UploadStatusData, UploadStatusComputed, Vue2type {
}
/**
 * @hidden
 */
declare let UploadStatusVue2: ComponentOptions<Vue2type, DefaultData<UploadStatusData>, DefaultMethods<UploadStatusAll>, UploadStatusComputed, RecordPropsDefinition<UploadStatusProps>>;
/**
 * @hidden
 */
declare const UploadStatus: DefineComponent<UploadStatusProps, any, UploadStatusData, UploadStatusComputed, UploadStatusMethods, {}, {}, {}, string, UploadStatusProps, UploadStatusProps, {}>;
export { UploadStatus, UploadStatusVue2 };
