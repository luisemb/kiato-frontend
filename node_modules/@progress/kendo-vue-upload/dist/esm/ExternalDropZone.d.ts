import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
/**
 * Represents the properties of the [ExternalDropZone](% slug api_upload_externaldropzone %) component.
 */
export interface ExternalDropZoneProps {
    /**
     * Sets the `id` property of the top div element of the ExternalDropZone.
     */
    id?: string;
    /**
     * Sets the `style` of the inner div element of the ExternalDropZone.
     */
    innerStyle?: object;
    /**
     * Sets the `tabIndex` attribute.
     */
    tabIndex?: number;
    /**
     * Represents the ref of the linked Upload.
     */
    uploadRef: any;
    /**
     * Determines the disabled mode of the ExternalDropZone.
     */
    disabled?: boolean;
    /**
     * Sets different hint node.
     */
    customHint?: any;
    /**
     * Sets different note node.
     */
    customNote?: any;
    /**
     * Triggered after a file is dropped into the ExternalDropZone area.
     */
    onDrop?: (event: any) => void;
    /**
     * Triggered after a file is dragged inside the ExternalDropZone area.
     */
    onElementdragenter?: (event: any) => void;
    /**
     * Triggered after a file dragging is over.
     */
    onElementdragover?: (event: any) => void;
}
/**
 * Represents the target(element and props) of the ExternalDropZoneEvent.
 */
export interface ExternalDropZoneHandle {
    /**
     * The current element or `null` if there is no one.
     */
    element: HTMLDivElement | null;
    /**
     * The props value of the ExternalDropZone.
     */
    props: ExternalDropZoneProps;
    /**
     * The focus event callback.
     */
    focus: () => void;
}
/**
 * Represents the return type of the ExternalDropZone.
 */
export interface ExternalDropZoneEvent {
    /**
     * The target of the ExternalDropZoneEvent from ExternalDropZoneHandle.
     */
    target: ExternalDropZoneHandle;
    /**
     * The event of the ExternalDropZoneEvent.
     */
    event: any;
}
/**
 * @hidden
 */
export interface ExternalDropZoneMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ExternalDropZoneState {
    elementInterval: any;
    elementActive: boolean;
    lastElementDragOver: Date | null;
    v3: boolean;
}
/**
 * @hidden
 */
export interface ExternalDropZoneData {
    overDropZone: boolean;
}
/**
 * @hidden
 */
export interface ExternalDropZoneComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface ExternalDropZoneAll extends ExternalDropZoneMethods, ExternalDropZoneState, ExternalDropZoneData, ExternalDropZoneComputed, Vue2type {
}
/**
 * @hidden
 */
declare let ExternalDropZoneVue2: ComponentOptions<Vue2type, DefaultData<ExternalDropZoneData>, DefaultMethods<ExternalDropZoneAll>, ExternalDropZoneComputed, RecordPropsDefinition<ExternalDropZoneProps>>;
/**
 * @hidden
 */
declare const ExternalDropZone: DefineComponent<ExternalDropZoneProps, any, ExternalDropZoneData, ExternalDropZoneComputed, ExternalDropZoneMethods, {}, {}, {}, string, ExternalDropZoneProps, ExternalDropZoneProps, {}>;
export { ExternalDropZone, ExternalDropZoneVue2 };
