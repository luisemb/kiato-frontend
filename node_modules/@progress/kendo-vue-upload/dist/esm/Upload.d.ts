import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => UploadData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { UploadFileInfo } from './interfaces/UploadFileInfo';
import { CancelTokenSource } from 'axios';
import { UploadProps } from './interfaces/UploadProps';
/**
 * @hidden
 */
export interface UploadMethods {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface UploadState {
    v3: boolean;
    _httpSubscriptions: {
        [uid: string]: CancelTokenSource;
    };
    _uploadNavigation: any;
}
/**
 * @hidden
 */
export interface UploadData {
    currentFiles: Array<UploadFileInfo>;
}
/**
 * @hidden
 */
export interface UploadComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface UploadAll extends UploadMethods, UploadState, UploadData, UploadComputed, Vue2type {
}
/**
 * @hidden
 */
declare let UploadVue2: ComponentOptions<Vue2type, DefaultData<UploadData>, DefaultMethods<UploadAll>, UploadComputed, RecordPropsDefinition<UploadProps>>;
/**
 * @hidden
 */
declare const Upload: DefineComponent<UploadProps, any, UploadData, UploadComputed, UploadMethods, {}, {}, {}, string, UploadProps, UploadProps, {}>;
export { Upload, UploadVue2 };
