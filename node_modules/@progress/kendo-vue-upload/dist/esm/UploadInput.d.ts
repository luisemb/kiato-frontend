import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from './additionalTypes';
declare type DefaultData<V> = object | ((this: V) => UploadInputData);
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { UploadAsyncProps } from './interfaces/UploadAsyncProps';
/**
 * @hidden
 */
export interface UploadInputProps {
    id: String;
    async: UploadAsyncProps;
    multiple?: boolean;
    disabled?: boolean;
    accept?: string;
    hasFiles?: boolean;
    ariaLabelledBy?: string;
    ariaDescribedBy?: string;
}
/**
 * @hidden
 */
export interface UploadInputMethods {
    [key: string]: any;
    focus: () => any;
    onClick: () => any;
    actionElement: () => any;
}
/**
 * @hidden
 */
export interface UploadInputState {
    v3: boolean;
    _input: HTMLInputElement | null;
}
/**
 * @hidden
 */
export interface UploadInputData {
}
/**
 * @hidden
 */
export interface UploadInputComputed {
    [key: string]: any;
}
/**
 * @hidden
 */
export interface UploadInputAll extends UploadInputMethods, UploadInputState, UploadInputData, UploadInputComputed, Vue2type {
}
/**
 * @hidden
 */
declare let UploadInputVue2: ComponentOptions<Vue2type, DefaultData<UploadInputData>, DefaultMethods<UploadInputAll>, UploadInputComputed, RecordPropsDefinition<UploadInputProps>>;
/**
 * @hidden
 */
declare const UploadInput: DefineComponent<UploadInputProps, any, UploadInputData, UploadInputComputed, UploadInputMethods, {}, {}, {}, string, UploadInputProps, UploadInputProps, {}>;
export { UploadInput, UploadInputVue2 };
