import { isInRange } from '../../utils.js';
import { EMPTY_SELECTIONRANGE } from '../models/main.js';
import { getDate } from '@progress/kendo-date-math';
import { isObject } from '@progress/kendo-vue-common';
/**
 * @hidden
 */
var calculateValue = function (min, max, stateValue, propValue) {
    return propValue !== undefined
        ? propValue !== null && isInRange(propValue, min, max)
            ? propValue
            : null
        : stateValue !== null && isInRange(stateValue, min, max)
            ? stateValue
            : null;
};
/**
 * @hidden
 */
var extractDateFromValue = function (min, max, value) {
    return value instanceof Date && !Array.isArray(value) && isInRange(getDate(value), min, max)
        ? getDate(value)
        : null;
};
/**
 * @hidden
 */
var extractMultipleFromValue = function (min, max, value) {
    return Array.isArray(value)
        ? value.filter(function (date) { return isInRange(date, min, max); }).map(function (date) { return getDate(date); })
        : null;
};
/**
 * @hidden
 */
var extractRangeFromValue = function (value) {
    return isObject(value) && !(value instanceof Date) && value !== null && !Array.isArray(value)
        ? value
        : EMPTY_SELECTIONRANGE;
};
/**
 * @hidden
 */
var extractFocusedDate = function (single, multiple, range) {
    return single || (multiple && multiple[0]) || (range && range.start);
};
/**
 * @hidden
 */
var extractActiveRange = function (range, single) {
    return range.start === null && single === null
        ? 'start'
        : range.end === null
            ? 'end'
            : 'start';
};
export { calculateValue, extractDateFromValue, extractMultipleFromValue, extractRangeFromValue, extractFocusedDate, extractActiveRange };
