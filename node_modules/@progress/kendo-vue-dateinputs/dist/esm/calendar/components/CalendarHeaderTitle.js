// @ts-ignore
import * as Vue from 'vue';
var allVue = Vue;
var gh = allVue.h;
var isV3 = allVue.version && allVue.version[0] === '3';
import { getDefaultSlots } from '@progress/kendo-vue-common';
import { Button as KButton } from '@progress/kendo-vue-buttons';
/**
 * @hidden
 */
var CalendarHeaderTitleVue2 = {
  name: 'KendoHeaderTitle',
  // @ts-ignore
  emits: {
    'click': null
  },
  props: {
    id: String,
    value: String,
    view: Number
  },
  methods: {
    handleClick: function handleClick(event) {
      this.$emit('click', event);
    }
  },
  // @ts-ignore
  setup: !isV3 ? undefined : function () {
    var v3 = !!isV3;
    return {
      v3: v3
    };
  },
  /**
   * @return
   * Returns a `<button />` element with the [`value`]({% slug api_dateinputs_calendarheadertitleprops %}#toc-value) of the title as a child.
   */
  // @ts-ignore
  render: function render(createElement) {
    var h = gh || createElement;
    var defaultSlot = getDefaultSlots(this);
    return (
      // @ts-ignore  function children
      h(KButton, {
        type: "button",
        attrs: this.v3 ? undefined : {
          type: "button",
          value: this.$props.value,
          id: this.$props.id,
          fillMode: 'flat',
          tabIndex: 0
        },
        value: this.$props.value,
        id: this.$props.id,
        fillMode: 'flat',
        onClick: this.handleClick,
        on: this.v3 ? undefined : {
          "click": this.handleClick
        },
        tabIndex: 0
      }, this.v3 ? function () {
        return [defaultSlot];
      } : [defaultSlot])
    );
  }
};
/**
 * @hidden
 */
var CalendarHeaderTitle = CalendarHeaderTitleVue2;
export { CalendarHeaderTitle, CalendarHeaderTitleVue2 };