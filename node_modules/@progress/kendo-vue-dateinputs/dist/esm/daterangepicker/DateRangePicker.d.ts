import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../additionalTypes';
declare type DefaultData<V> = object | ((this: V) => {});
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
import { SelectionRange } from '../calendar/models/main';
import { DateRangePickerSettings } from './models/main';
/**
 * @hidden
 */
export interface ReverseClickEvent {
    event?: any;
}
/**
 * The arguments for the `onChange` event of the DateRangePicker.
 */
export interface DateRangePickerChangeEvent {
    event?: any;
    value: SelectionRange;
    show?: boolean;
    target: any;
    component?: any;
}
/**
 * The arguments for the `open` event of the DateRangePicker.
 */
export interface DateRangePickerOpenEvent {
    component: any;
}
/**
 * The arguments for the `close` event of the DateRangePicker.
 */
export interface DateRangePickerCloseEvent {
    component: any;
}
/**
 * Represents the props of the [Kendo UI for Vue DateRangePicker component]({% slug overview_daterangepicker %}).
 */
export interface DateRangePickerProps extends DateRangePickerSettings {
    /**
     * Overrides the validity state of the component.
     * If `valid` is set, the `required` property will be ignored.
     *
     * This property is part of the [FormComponentProps]({% slug api_common_formcomponentprops %}) interface.
     */
    valid?: boolean;
    /**
     * Sets the default value of the DateRangePicker ([see example]({% slug default_value_daterangepicker %})).
     */
    defaultValue?: SelectionRange;
    /**
     * @hidden
     */
    modelValue?: Date;
    /**
     * Fires each time the user selects a part of a date range ([see example]({% slug controlled_daterangepicker %}#toc-controlling-the-value)).
     */
    onChange?: (event: DateRangePickerChangeEvent) => void;
    /**
     * Specifies the selected date range of the DateRangePicker ([see example]({% slug controlled_daterangepicker %}#toc-controlling-the-value)).
     *
     * > The `value` has to be an object with `start` and `end` valid JavaScript [`Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instances or `null`.
     */
    value?: SelectionRange;
}
/**
 * @hidden
 */
export interface DateRangePickerData {
    currentShow: boolean;
    currentValue: SelectionRange;
    valueDuringOnChange: SelectionRange | undefined;
    shouldFocusDateInput: boolean;
    shouldFocusCalendar: boolean;
}
/**
 * @hidden
 */
export interface DateRangePickerState {
    _element: HTMLSpanElement | null;
    _wrapper: HTMLSpanElement | null;
    _calendar: any;
    _startDateInput: any;
    _endDateInput: any;
    showDuringOnChange?: boolean;
    _popupId: string;
    _startInputId: string;
    _endInputId: string;
    _calendarId: string;
    shouldFocusDateInput: boolean;
    shouldFocusCalendar: boolean;
    initialAnimation: boolean;
}
/**
 * @hidden
 */
export interface DateRangePickerComputed {
    [key: string]: any;
    rootClassName: object;
    computedValue: SelectionRange;
    computedShow: boolean;
}
/**
 * @hidden
 */
export interface DateRangePickerMethods {
    [key: string]: any;
    getStartInput: () => any;
    getEndInput: () => any;
}
/**
 * @hidden
 */
export interface DateRangePickerAll extends Vue2type, DateRangePickerMethods, DateRangePickerData, DateRangePickerComputed, DateRangePickerState {
}
/**
 * @hidden
 */
declare let DateRangePickerVue2: ComponentOptions<DateRangePickerAll, DefaultData<DateRangePickerData>, DefaultMethods<DateRangePickerAll>, DateRangePickerComputed, RecordPropsDefinition<DateRangePickerProps>>;
/**
 * @hidden
 */
declare const DateRangePicker: DefineComponent<DateRangePickerProps, any, DateRangePickerData, DateRangePickerComputed, DateRangePickerMethods, {}, {}, {}, string, DateRangePickerProps, DateRangePickerProps, {}>;
export { DateRangePicker, DateRangePickerVue2 };
