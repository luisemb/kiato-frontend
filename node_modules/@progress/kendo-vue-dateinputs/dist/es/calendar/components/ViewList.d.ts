import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../../additionalTypes';
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
declare type DefaultData<V> = object | ((this: V) => ViewListData);
import { IntlService } from '@progress/kendo-vue-intl';
import { ViewEventArguments, ViewWeekCellEventArguments } from './View';
import { HeaderEventArguments } from './Header';
import { BusViewService, DOMService } from '../services/main';
import { ViewService, CalendarViewEnum, SelectionRange } from '../models/main';
/**
 * @hidden
 */
export interface ViewListEventArguments {
    event?: any;
    value: Date;
    target: any;
    isTodayClick?: boolean;
}
/**
 * @hidden
 */
export interface ViewListProps {
    allowReverse: boolean;
    hasFocusedDate: boolean;
    activeView: number;
    bottomOffset?: number;
    bus?: BusViewService;
    cellUID: string;
    dates: any;
    dom: DOMService;
    focusedDate: Date;
    max: Date;
    min: Date;
    cell?: any;
    isActive: boolean;
    onChange?: (event: ViewListEventArguments) => void;
    selectionRange?: SelectionRange;
    service: ViewService;
    showWeekNumbers?: boolean;
    take?: number;
    value: Date | Date[] | SelectionRange | null;
    views: number;
    viewHeight?: number;
    viewOffset?: number;
    weekCell?: any;
    headerTitle?: any;
    shouldScroll?: () => boolean;
}
/**
 * @hidden
 */
export interface ViewListState {
    _calendarView: Object | undefined;
    table: HTMLTableElement | null;
    _intl: IntlService;
    _bottomOffset: number;
    _viewOffset: number;
    _viewHeight: number;
    lastView: CalendarViewEnum;
    shouldScroll: boolean;
    indexToScroll?: number;
    lastFocus: Date;
}
/**
 * @hidden
 */
export interface ViewListComputed {
    [key: string]: any;
    weekNames?: string[];
    weekNumber?: boolean;
    animate?: boolean;
}
/**
 * @hidden
 */
export interface ViewListMethods {
    [key: string]: any;
    blurActiveDate: () => void;
    focusActiveDate: (event: any) => void;
    handleCellEnter: (event: any) => void;
    handleFocus: (_: any) => void;
    handleBlur: (_: any) => void;
    handleKeyDown: (_: any) => void;
    handleScrollAction: (_: any) => void;
    rotateSelectionRange: (selectionRange: SelectionRange) => SelectionRange;
    handleTodayClick: (event: HeaderEventArguments) => void;
    handleMouseDown: (event: ViewEventArguments) => void;
    handleDateChange: (event: ViewEventArguments | HeaderEventArguments, isTodayClick: boolean) => void;
    handleWeekCellClick: (event: ViewWeekCellEventArguments) => void;
    handleWeekNameClick: (event: any, name: string) => void;
    handleVirtualizationMount: (virtualization: any) => void;
    calculateHeights: () => void;
    getTake: (skip: number, total: number) => number;
}
/**
 * @hidden
 */
export interface ViewListData {
    skip: number;
    index: number;
}
/**
 * @hidden
 */
export interface ViewListAll extends Vue2type, ViewListMethods, ViewListComputed, ViewListState, ViewListData {
}
/**
 * @hidden
 */
declare let ViewListVue2: ComponentOptions<ViewListAll, DefaultData<ViewListData>, DefaultMethods<ViewListAll>, ViewListComputed, RecordPropsDefinition<ViewListProps>>;
/**
 * @hidden
 */
declare const ViewList: DefineComponent<ViewListProps, any, ViewListData, ViewListComputed, ViewListMethods, {}, {}, {}, string, ViewListProps, ViewListProps, {}>;
export { ViewList, ViewListVue2 };
