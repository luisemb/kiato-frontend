import { DefineComponent, RecordPropsDefinition, ComponentOptions, Vue2type } from '../../additionalTypes';
declare type DefaultMethods<V> = {
    [key: string]: (this: V, ...args: any[]) => any;
};
declare type DefaultData<V> = object | ((this: V) => ViewData);
import { IntlService } from '@progress/kendo-vue-intl';
import { CellContext, SelectionRange, ViewService } from '../models/main';
import { BusViewService, WeekNamesService } from '../services/main';
/**
 * @hidden
 */
export interface ViewEventArguments {
    event?: any;
    value: Date;
    target: any;
}
/**
 * @hidden
 */
export interface ViewWeekCellEventArguments {
    event?: any;
    value: number | null;
}
/**
 * @hidden
 */
export interface ViewWeekNameEventArguments {
    event?: any;
    value: string | null;
}
/**
 * @hidden
 */
export interface ViewDimensions {
    headerHight: number;
    offsetHeight: number;
}
/**
 * @hidden
 */
export interface ViewProps {
    activeRangeEnd?: string;
    activeView: number;
    bus: BusViewService;
    cellUID: string;
    direction?: 'horizontal' | 'vertical';
    isActive: boolean;
    focusedDate: Date;
    weekCell?: any;
    max: Date;
    min: Date;
    cell?: any;
    selectedDate: Date | Date[] | null;
    selectionRange?: SelectionRange;
    service: ViewService;
    showWeekNumbers?: boolean;
    viewDate: Date;
}
/**
 * @hidden
 */
export interface ViewComputed {
    [key: string]: any;
    isMonthView?: boolean;
    weekNumber?: boolean;
    isHorizontal?: boolean;
}
/**
 * @hidden
 */
export interface ViewMethods {
    [key: string]: any;
    buildWeekNumber: (row: any, idx: number) => void;
    buildRow: (row: any) => void;
    firstDate: (row: any) => any;
    getWeekNumber: (date: Date) => number | null;
    firstWeekDateContext: (rowCtx: CellContext[]) => CellContext | null;
    handleClick: (value: Date, event: any) => void;
    handleWeekCellClick: (value: number | null, event: any) => void;
    handleMouseEnter: (value: Date) => void;
    handleMouseLeave: (value: Date) => void;
    handleMouseDown?: (event: ViewEventArguments) => void;
}
/**
 * @hidden
 */
export interface ViewState {
    _intl: IntlService;
    _weekService: WeekNamesService;
    _selectedDateHasChanged: boolean;
}
/**
 * @hidden
 */
export interface ViewData {
}
/**
 * @hidden
 */
export interface ViewAllMethods extends Vue2type, ViewMethods, ViewComputed, ViewState {
}
/**
 * @hidden
 */
declare let ViewVue2: ComponentOptions<ViewAllMethods, DefaultData<ViewData>, DefaultMethods<ViewAllMethods>, ViewComputed, RecordPropsDefinition<ViewProps>>;
/**
 * @hidden
 */
declare const View: DefineComponent<ViewProps, any, ViewData, ViewComputed, ViewMethods, {}, {}, {}, string, ViewProps, ViewProps, {}>;
export { View, ViewVue2 };
